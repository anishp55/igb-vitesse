!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADVERTISED_10000baseKR_Full	kcompat.h	2657;"	d
ADVERTISED_10000baseKX4_Full	kcompat.h	2654;"	d
ADVERTISED_10000baseT_Full	kcompat.h	1028;"	d
ADVERTISED_10000baseT_Full	kcompat_ethtool.c	61;"	d	file:
ADVERTISED_10000baseT_Full	kcompat_ethtool.c	62;"	d	file:
ADVERTISED_1000baseKX_Full	kcompat.h	2651;"	d
ADVERTISED_2500baseX_Full	kcompat.h	2160;"	d
ADVERTISED_40000baseCR4_Full	kcompat.h	3559;"	d
ADVERTISED_40000baseKR4_Full	kcompat.h	3558;"	d
ADVERTISED_40000baseLR4_Full	kcompat.h	3561;"	d
ADVERTISED_40000baseSR4_Full	kcompat.h	3560;"	d
ADVERTISED_Asym_Pause	kcompat.h	1746;"	d
ADVERTISED_Pause	kcompat.h	1745;"	d
ADVERTISE_1000FULL	kcompat.h	1697;"	d
ADVERTISE_1000HALF	kcompat.h	1698;"	d
ADVERTISE_1000_FULL	e1000_defines.h	324;"	d
ADVERTISE_1000_HALF	e1000_defines.h	323;"	d
ADVERTISE_100FULL	kcompat.h	796;"	d
ADVERTISE_100HALF	kcompat.h	795;"	d
ADVERTISE_100_FULL	e1000_defines.h	322;"	d
ADVERTISE_100_HALF	e1000_defines.h	321;"	d
ADVERTISE_10FULL	kcompat.h	794;"	d
ADVERTISE_10HALF	kcompat.h	793;"	d
ADVERTISE_10_FULL	e1000_defines.h	320;"	d
ADVERTISE_10_HALF	e1000_defines.h	319;"	d
ADVERTISE_ALL	kcompat.h	797;"	d
ADVERTISE_CSMA	kcompat.h	792;"	d
ADVERTISE_PAUSE_ASYM	kcompat.h	1692;"	d
ADVERTISE_PAUSE_CAP	kcompat.h	1691;"	d
ALIGN	kcompat.h	1307;"	d
ALIGN	kcompat.h	1308;"	d
ALL_QUEUES	e1000_82575.h	464;"	d
ANCIENT_PM	kcompat.h	2424;"	d
ARCH	Makefile	/^ARCH := $(shell uname -m | sed 's\/i.86\/i386\/')$/;"	m
ARRAY_SIZE	kcompat.h	1863;"	d
ARRAY_SIZE	kcompat.h	716;"	d
ARRAY_SIZE	kcompat.h	717;"	d
AUTONEG_ADVERTISE_SPEED_DEFAULT	e1000_defines.h	337;"	d
AUTO_ALL_MODES	igb.h	202;"	d
AUTO_READ_DONE_TIMEOUT	e1000_defines.h	658;"	d
AX_RELEASE_CODE	kcompat.h	677;"	d
AX_RELEASE_VERSION	kcompat.h	673;"	d
BITOP_WORD	kcompat.h	1323;"	d
BITS_TO_LONGS	kcompat.h	250;"	d
BMCR_ANENABLE	kcompat.h	783;"	d
BMCR_FULLDPLX	kcompat.h	782;"	d
BMCR_SPEED1000	kcompat.h	1533;"	d
BMSR_100FULL	kcompat.h	790;"	d
BMSR_100HALF	kcompat.h	789;"	d
BMSR_10FULL	kcompat.h	788;"	d
BMSR_10HALF	kcompat.h	787;"	d
BMSR_ANEGCAPABLE	kcompat.h	786;"	d
BMSR_ERCAP	kcompat.h	785;"	d
BMSR_ESTATEN	kcompat.h	1738;"	d
BM_PHY_PAGE_SELECT	e1000_phy.h	113;"	d
BRIDGE_MODE_VEB	kcompat.h	3740;"	d
BRIDGE_MODE_VEPA	kcompat.h	3743;"	d
BUILD	igb_main.c	67;"	d	file:
BUILD_KERNEL	Makefile	/^BUILD_KERNEL=$(shell uname -r)$/;"	m
CARRIER_EXTENSION	e1000_api.h	138;"	d
CC	Makefile	/^  CC := gcc cc$/;"	m
CC	Makefile	/^  CC := kgcc gcc cc$/;"	m
CC	Makefile	/^CC := $(firstword $(CC))$/;"	m
CC	Makefile	/^CC := $(foreach cc, $(CC), $(test_cc))$/;"	m
CFILES	Makefile	/^CFILES = igb_main.c $(FAMILYC) e1000_mac.c e1000_nvm.c e1000_phy.c \\$/;"	m
CHECKSUM_COMPLETE	kcompat.h	206;"	d
CHECKSUM_PARTIAL	kcompat.h	205;"	d
CMD_MEM_WRT_INVALIDATE	e1000_osdep.h	63;"	d
CONFIG_E1000_DISABLE_PACKET_SPLIT	kcompat.h	1291;"	d
CONFIG_FCOE	kcompat.h	1943;"	d
CONFIG_FCOE_MODULE	kcompat.h	1944;"	d
CONFIG_FILE	Makefile	/^  CONFIG_FILE := $(firstword $(CSP))$/;"	m
CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS	kcompat.h	281;"	d
CONFIG_IGB_DISABLE_PACKET_SPLIT	kcompat.h	1294;"	d
CONFIG_IGB_DISABLE_PACKET_SPLIT	kcompat.h	73;"	d
CONFIG_INET_LRO	kcompat.h	1940;"	d
CONFIG_INET_LRO_MODULE	kcompat.h	1941;"	d
CONFIG_NET_POLL_CONTROLLER	kcompat.h	103;"	d
CONFIG_NET_POLL_CONTROLLER	kcompat.h	168;"	d
CONFIG_NR_CPUS	kcompat.h	2558;"	d
CONFIG_PCI_MSI	kcompat.h	79;"	d
CONFIG_PM	kcompat.h	823;"	d
CONFIG_PM	kcompat.h	99;"	d
CONFIG_PM_SLEEP	kcompat.h	2203;"	d
CONFIG_XPS	kcompat.h	3258;"	d
COPPER_LINK_UP_LIMIT	e1000_defines.h	648;"	d
CR_1000T_ASYM_PAUSE	e1000_defines.h	878;"	d
CR_1000T_FD_CAPS	e1000_defines.h	880;"	d
CR_1000T_HD_CAPS	e1000_defines.h	879;"	d
CR_1000T_MS_ENABLE	e1000_defines.h	886;"	d
CR_1000T_MS_VALUE	e1000_defines.h	884;"	d
CR_1000T_REPEATER_DTE	e1000_defines.h	882;"	d
CR_1000T_TEST_MODE_1	e1000_defines.h	888;"	d
CR_1000T_TEST_MODE_2	e1000_defines.h	889;"	d
CR_1000T_TEST_MODE_3	e1000_defines.h	890;"	d
CR_1000T_TEST_MODE_4	e1000_defines.h	891;"	d
CR_1000T_TEST_MODE_NORMAL	e1000_defines.h	887;"	d
CSP	Makefile	/^CSP :=  $(KSRC)\/include\/generated\/autoconf.h \\$/;"	m
CSP	Makefile	/^CSP := $(foreach file, $(CSP), $(test_file))$/;"	m
CTL1000_AS_MASTER	kcompat.h	3358;"	d
CTL1000_ENABLE_MASTER	kcompat.h	3359;"	d
DCA_PROVIDER_ADD	kcompat.h	271;"	d
DCA_PROVIDER_REMOVE	kcompat.h	272;"	d
DCB_CAP_DCBX_HOST	kcompat.h	3242;"	d
DCB_CAP_DCBX_LLD_MANAGED	kcompat.h	3245;"	d
DCB_CAP_DCBX_STATIC	kcompat.h	3254;"	d
DCB_CAP_DCBX_VER_CEE	kcompat.h	3248;"	d
DCB_CAP_DCBX_VER_IEEE	kcompat.h	3251;"	d
DEBUGFUNC	e1000_osdep.h	80;"	d
DEBUGFUNC	e1000_osdep.h	82;"	d
DEBUGOUT	e1000_osdep.h	72;"	d
DEBUGOUT	e1000_osdep.h	75;"	d
DEBUGOUT1	e1000_osdep.h	73;"	d
DEBUGOUT1	e1000_osdep.h	76;"	d
DEBUGOUT2	e1000_osdep.h	84;"	d
DEBUGOUT3	e1000_osdep.h	85;"	d
DEBUGOUT7	e1000_osdep.h	86;"	d
DECLARE_BITMAP	kcompat.h	252;"	d
DECLARE_PCI_UNMAP_ADDR	kcompat.h	1904;"	d
DECLARE_PCI_UNMAP_LEN	kcompat.h	1906;"	d
DEFAULT_80003ES2LAN_TIPG_IPGR2	e1000_defines.h	418;"	d
DEFAULT_82543_TIPG_IPGR1	e1000_defines.h	414;"	d
DEFAULT_82543_TIPG_IPGR2	e1000_defines.h	417;"	d
DEFAULT_82543_TIPG_IPGT_COPPER	e1000_defines.h	410;"	d
DEFAULT_82543_TIPG_IPGT_FIBER	e1000_defines.h	409;"	d
DEFAULT_ITR	igb_param.c	79;"	d	file:
DEFAULT_LLIPORT	igb_param.c	103;"	d	file:
DEFAULT_LLIPUSH	igb_param.c	115;"	d	file:
DEFAULT_LLISIZE	igb_param.c	127;"	d	file:
DEFAULT_QUEUE_PAIRS	igb_param.c	206;"	d	file:
DEFAULT_RSS	igb_param.c	139;"	d	file:
DEFAULT_SRIOV	igb_param.c	163;"	d	file:
DEFAULT_VMDQ	igb_param.c	151;"	d	file:
DEFINE_DMA_UNMAP_ADDR	kcompat.h	2780;"	d
DEFINE_DMA_UNMAP_ADDR	kcompat.h	2781;"	d
DEFINE_DMA_UNMAP_ADDR	kcompat.h	2992;"	d
DEFINE_DMA_UNMAP_LEN	kcompat.h	2782;"	d
DEFINE_DMA_UNMAP_LEN	kcompat.h	2783;"	d
DEFINE_DMA_UNMAP_LEN	kcompat.h	2993;"	d
DEFINE_MUTEX	kcompat.h	1802;"	d
DEFINE_MUTEX	kcompat.h	1803;"	d
DEFINE_PCI_DEVICE_TABLE	kcompat.h	2362;"	d
DEPVER	Makefile	/^DEPVER := $(shell \/sbin\/depmod -V 2>\/dev\/null | \\$/;"	m
DESC_NEEDED	igb.h	285;"	d
DESC_NEEDED	igb.h	287;"	d
DESC_NEEDED	igb.h	289;"	d
DIV_ROUND_UP	kcompat.h	1927;"	d
DMA_32BIT_MASK	kcompat.h	137;"	d
DMA_32BIT_MASK	kcompat.h	962;"	d
DMA_32BIT_MASK	kcompat.h	963;"	d
DMA_64BIT_MASK	kcompat.h	133;"	d
DMA_64BIT_MASK	kcompat.h	964;"	d
DMA_64BIT_MASK	kcompat.h	965;"	d
DMA_BIDIRECTIONAL	kcompat.h	/^	DMA_BIDIRECTIONAL = 0,$/;"	e	enum:dma_data_direction
DMA_BIT_MASK	kcompat.h	2301;"	d
DMA_FROM_DEVICE	kcompat.h	/^	DMA_FROM_DEVICE = 2,$/;"	e	enum:dma_data_direction
DMA_NONE	kcompat.h	/^	DMA_NONE = 3,$/;"	e	enum:dma_data_direction
DMA_TO_DEVICE	kcompat.h	/^	DMA_TO_DEVICE = 1,$/;"	e	enum:dma_data_direction
DPRINTK	igb.h	70;"	d
DRIVER_NAME	Makefile	/^DRIVER_NAME=igb$/;"	m
DRV_DEBUG	igb_main.c	58;"	d	file:
DRV_DEBUG	igb_main.c	60;"	d	file:
DRV_HW_PERF	igb_main.c	62;"	d	file:
DRV_VERSION	igb_main.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	igb_main.c	68;"	d	file:
DUMP_PREFIX_ADDRESS	kcompat.h	/^	DUMP_PREFIX_ADDRESS,$/;"	e	enum:__anon12
DUMP_PREFIX_NONE	kcompat.h	/^	DUMP_PREFIX_NONE,$/;"	e	enum:__anon12
DUMP_PREFIX_OFFSET	kcompat.h	/^	DUMP_PREFIX_OFFSET$/;"	e	enum:__anon12
DUPLEX_UNKNOWN	kcompat.h	3433;"	d
E1000_82580_PHY_POWER_MGMT	e1000_phy.h	158;"	d
E1000_82580_PM_D0_LPLU	e1000_phy.h	160;"	d
E1000_82580_PM_D3_LPLU	e1000_phy.h	161;"	d
E1000_82580_PM_GO_LINKD	e1000_phy.h	162;"	d
E1000_82580_PM_SPD	e1000_phy.h	159;"	d
E1000_82580_RXPBS_TABLE_SIZE	e1000_82575.c	115;"	d	file:
E1000_ADVTXD_DCMD_DDTYP_ISCSI	e1000_82575.h	290;"	d
E1000_ADVTXD_DCMD_DEXT	e1000_82575.h	291;"	d
E1000_ADVTXD_DCMD_EOP	e1000_82575.h	287;"	d
E1000_ADVTXD_DCMD_IFCS	e1000_82575.h	288;"	d
E1000_ADVTXD_DCMD_RS	e1000_82575.h	289;"	d
E1000_ADVTXD_DCMD_TSE	e1000_82575.h	293;"	d
E1000_ADVTXD_DCMD_VLE	e1000_82575.h	292;"	d
E1000_ADVTXD_DTYP_CTXT	e1000_82575.h	285;"	d
E1000_ADVTXD_DTYP_DATA	e1000_82575.h	286;"	d
E1000_ADVTXD_IDX_SHIFT	e1000_82575.h	297;"	d
E1000_ADVTXD_IPSEC_ESP_LEN_MASK	e1000_82575.h	331;"	d
E1000_ADVTXD_IPSEC_SA_INDEX_MASK	e1000_82575.h	329;"	d
E1000_ADVTXD_L4LEN_SHIFT	e1000_82575.h	326;"	d
E1000_ADVTXD_MACLEN_SHIFT	e1000_82575.h	314;"	d
E1000_ADVTXD_MAC_LINKSEC	e1000_82575.h	294;"	d
E1000_ADVTXD_MAC_TSTAMP	e1000_82575.h	295;"	d
E1000_ADVTXD_MSS_SHIFT	e1000_82575.h	327;"	d
E1000_ADVTXD_PAYLEN_SHIFT	e1000_82575.h	304;"	d
E1000_ADVTXD_POPTS_IPSEC	e1000_82575.h	303;"	d
E1000_ADVTXD_POPTS_ISCO_1ST	e1000_82575.h	298;"	d
E1000_ADVTXD_POPTS_ISCO_FULL	e1000_82575.h	302;"	d
E1000_ADVTXD_POPTS_ISCO_LAST	e1000_82575.h	300;"	d
E1000_ADVTXD_POPTS_ISCO_MDL	e1000_82575.h	299;"	d
E1000_ADVTXD_STAT_SN_CRC	e1000_82575.h	296;"	d
E1000_ADVTXD_TUCMD_IPSEC_ENCRYPT_EN	e1000_82575.h	323;"	d
E1000_ADVTXD_TUCMD_IPSEC_TYPE_ESP	e1000_82575.h	321;"	d
E1000_ADVTXD_TUCMD_IPV4	e1000_82575.h	316;"	d
E1000_ADVTXD_TUCMD_IPV6	e1000_82575.h	317;"	d
E1000_ADVTXD_TUCMD_L4T_SCTP	e1000_82575.h	320;"	d
E1000_ADVTXD_TUCMD_L4T_TCP	e1000_82575.h	319;"	d
E1000_ADVTXD_TUCMD_L4T_UDP	e1000_82575.h	318;"	d
E1000_ADVTXD_TUCMD_MKRREQ	e1000_82575.h	325;"	d
E1000_ADVTXD_VLAN_SHIFT	e1000_82575.h	315;"	d
E1000_ADV_DCMD_EOP	e1000_82575.h	83;"	d
E1000_ADV_DCMD_IFCS	e1000_82575.h	84;"	d
E1000_ADV_DCMD_RS	e1000_82575.h	85;"	d
E1000_ADV_DCMD_TSE	e1000_82575.h	87;"	d
E1000_ADV_DCMD_VLE	e1000_82575.h	86;"	d
E1000_ADV_TUCMD_IPV4	e1000_82575.h	78;"	d
E1000_ADV_TUCMD_IPV6	e1000_82575.h	79;"	d
E1000_ADV_TUCMD_L4T_TCP	e1000_82575.h	81;"	d
E1000_ADV_TUCMD_L4T_UDP	e1000_82575.h	80;"	d
E1000_ADV_TUCMD_MKRREQ	e1000_82575.h	82;"	d
E1000_ADV_TXD_CMD_DEXT	e1000_82575.h	77;"	d
E1000_AIT	e1000_regs.h	80;"	d
E1000_ALGNERRC	e1000_regs.h	281;"	d
E1000_ALL_100_SPEED	e1000_defines.h	333;"	d
E1000_ALL_10_SPEED	e1000_defines.h	334;"	d
E1000_ALL_HALF_DUPLEX	e1000_defines.h	335;"	d
E1000_ALL_NOT_GIG	e1000_defines.h	330;"	d
E1000_ALL_SPEED_DUPLEX	e1000_defines.h	327;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN0	e1000_hw.h	87;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN1	e1000_hw.h	88;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN2	e1000_hw.h	89;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN3	e1000_hw.h	90;"	d
E1000_B2OGPRC	e1000_regs.h	640;"	d
E1000_B2OSPC	e1000_regs.h	639;"	d
E1000_BARCTRL	e1000_regs.h	42;"	d
E1000_BARCTRL_CSRSIZE	e1000_regs.h	44;"	d
E1000_BARCTRL_FLSIZE	e1000_regs.h	43;"	d
E1000_BIG_ENDIAN	e1000_osdep.h	67;"	d
E1000_BLK_PHY_RESET	e1000_defines.h	636;"	d
E1000_BPRC	e1000_regs.h	307;"	d
E1000_BPTC	e1000_regs.h	335;"	d
E1000_BSCTRH	e1000_regs.h	526;"	d
E1000_CABLE_LENGTH_UNDEFINED	e1000_phy.h	199;"	d
E1000_CBRDPC	e1000_regs.h	420;"	d
E1000_CBRMPC	e1000_regs.h	421;"	d
E1000_CBTMPC	e1000_regs.h	418;"	d
E1000_CCMCTL	e1000_regs.h	474;"	d
E1000_CEXTERR	e1000_regs.h	293;"	d
E1000_CIAA	e1000_regs.h	444;"	d
E1000_CIAD	e1000_regs.h	445;"	d
E1000_COLC	e1000_regs.h	289;"	d
E1000_COLD_SHIFT	e1000_defines.h	406;"	d
E1000_COLLISION_DISTANCE	e1000_defines.h	405;"	d
E1000_COLLISION_THRESHOLD	e1000_defines.h	403;"	d
E1000_CONNSW	e1000_regs.h	55;"	d
E1000_CONNSW_AUTOSENSE_CONF	e1000_defines.h	271;"	d
E1000_CONNSW_AUTOSENSE_EN	e1000_defines.h	272;"	d
E1000_CONNSW_ENRGSRC	e1000_defines.h	267;"	d
E1000_CONNSW_PHYSD	e1000_defines.h	268;"	d
E1000_CONNSW_PHY_PDN	e1000_defines.h	269;"	d
E1000_CONNSW_SERDESD	e1000_defines.h	270;"	d
E1000_CPUVEC	e1000_regs.h	496;"	d
E1000_CRCERRS	e1000_regs.h	280;"	d
E1000_CTRL	e1000_regs.h	31;"	d
E1000_CTRL_ADVD3WUC	e1000_defines.h	256;"	d
E1000_CTRL_ASDE	e1000_defines.h	244;"	d
E1000_CTRL_DEV_RST	e1000_82575.h	51;"	d
E1000_CTRL_EN_PHY_PWR_MGMT	igb_main.c	8822;"	d	file:
E1000_CTRL_EXT	e1000_regs.h	35;"	d
E1000_CTRL_EXT_DMA_DYN_CLK_EN	e1000_defines.h	71;"	d
E1000_CTRL_EXT_DRV_LOAD	e1000_defines.h	81;"	d
E1000_CTRL_EXT_EE_RST	e1000_defines.h	66;"	d
E1000_CTRL_EXT_EIAME	e1000_defines.h	79;"	d
E1000_CTRL_EXT_IAME	e1000_defines.h	82;"	d
E1000_CTRL_EXT_IRCA	e1000_defines.h	80;"	d
E1000_CTRL_EXT_LINK_MODE_1000BASE_KX	e1000_defines.h	75;"	d
E1000_CTRL_EXT_LINK_MODE_GMII	e1000_defines.h	76;"	d
E1000_CTRL_EXT_LINK_MODE_MASK	e1000_defines.h	72;"	d
E1000_CTRL_EXT_LINK_MODE_OFFSET	e1000_defines.h	74;"	d
E1000_CTRL_EXT_LINK_MODE_PCIE_SERDES	e1000_defines.h	77;"	d
E1000_CTRL_EXT_LINK_MODE_SGMII	e1000_defines.h	78;"	d
E1000_CTRL_EXT_NSICR	e1000_82575.h	89;"	d
E1000_CTRL_EXT_PBA_CLR	e1000_defines.h	83;"	d
E1000_CTRL_EXT_PFRSTD	e1000_defines.h	68;"	d
E1000_CTRL_EXT_RO_DIS	e1000_defines.h	70;"	d
E1000_CTRL_EXT_SDP3_DATA	e1000_defines.h	63;"	d
E1000_CTRL_EXT_SDP3_DIR	e1000_defines.h	65;"	d
E1000_CTRL_EXT_SDP4_DATA	e1000_defines.h	61;"	d
E1000_CTRL_EXT_SDP6_DATA	e1000_defines.h	62;"	d
E1000_CTRL_EXT_SDP6_DIR	e1000_defines.h	64;"	d
E1000_CTRL_EXT_SPD_BYPS	e1000_defines.h	69;"	d
E1000_CTRL_FD	e1000_defines.h	240;"	d
E1000_CTRL_FRCDPX	e1000_defines.h	252;"	d
E1000_CTRL_FRCSPD	e1000_defines.h	251;"	d
E1000_CTRL_GIO_MASTER_DISABLE	e1000_defines.h	242;"	d
E1000_CTRL_I2C_ENA	e1000_defines.h	264;"	d
E1000_CTRL_ILOS	e1000_defines.h	246;"	d
E1000_CTRL_LRST	e1000_defines.h	243;"	d
E1000_CTRL_PHY_RST	e1000_defines.h	263;"	d
E1000_CTRL_PRIOR	e1000_defines.h	241;"	d
E1000_CTRL_RFCE	e1000_defines.h	260;"	d
E1000_CTRL_RST	e1000_defines.h	259;"	d
E1000_CTRL_SLU	e1000_defines.h	245;"	d
E1000_CTRL_SPD_10	e1000_defines.h	248;"	d
E1000_CTRL_SPD_100	e1000_defines.h	249;"	d
E1000_CTRL_SPD_1000	e1000_defines.h	250;"	d
E1000_CTRL_SPD_SEL	e1000_defines.h	247;"	d
E1000_CTRL_SWDPIN0	e1000_defines.h	253;"	d
E1000_CTRL_SWDPIN1	e1000_defines.h	254;"	d
E1000_CTRL_SWDPIN2	e1000_defines.h	255;"	d
E1000_CTRL_SWDPIN3	e1000_defines.h	257;"	d
E1000_CTRL_SWDPIO0	e1000_defines.h	258;"	d
E1000_CTRL_TFCE	e1000_defines.h	261;"	d
E1000_CTRL_VME	e1000_defines.h	262;"	d
E1000_CT_SHIFT	e1000_defines.h	404;"	d
E1000_DAQF	e1000_regs.h	560;"	d
E1000_DC	e1000_regs.h	290;"	d
E1000_DCA_CTRL	e1000_regs.h	489;"	d
E1000_DCA_CTRL_DCA_DISABLE	e1000_82575.h	345;"	d
E1000_DCA_CTRL_DCA_ENABLE	e1000_82575.h	344;"	d
E1000_DCA_CTRL_DCA_MODE_CB1	e1000_82575.h	347;"	d
E1000_DCA_CTRL_DCA_MODE_CB2	e1000_82575.h	348;"	d
E1000_DCA_ID	e1000_regs.h	488;"	d
E1000_DCA_RXCTRL	e1000_regs.h	215;"	d
E1000_DCA_RXCTRL_CPUID_MASK	e1000_82575.h	350;"	d
E1000_DCA_RXCTRL_CPUID_MASK_82576	e1000_82575.h	363;"	d
E1000_DCA_RXCTRL_CPUID_SHIFT_82576	e1000_82575.h	365;"	d
E1000_DCA_RXCTRL_DATA_DCA_EN	e1000_82575.h	353;"	d
E1000_DCA_RXCTRL_DESC_DCA_EN	e1000_82575.h	351;"	d
E1000_DCA_RXCTRL_DESC_RRO_EN	e1000_82575.h	354;"	d
E1000_DCA_RXCTRL_HEAD_DCA_EN	e1000_82575.h	352;"	d
E1000_DCA_TXCTRL	e1000_regs.h	232;"	d
E1000_DCA_TXCTRL_CPUID_MASK	e1000_82575.h	356;"	d
E1000_DCA_TXCTRL_CPUID_MASK_82576	e1000_82575.h	362;"	d
E1000_DCA_TXCTRL_CPUID_SHIFT_82576	e1000_82575.h	364;"	d
E1000_DCA_TXCTRL_DATA_RRO_EN	e1000_82575.h	360;"	d
E1000_DCA_TXCTRL_DESC_DCA_EN	e1000_82575.h	357;"	d
E1000_DCA_TXCTRL_DESC_RRO_EN	e1000_82575.h	358;"	d
E1000_DCA_TXCTRL_TX_WB_RO_EN	e1000_82575.h	359;"	d
E1000_DEV_ID_82575EB_COPPER	e1000_hw.h	45;"	d
E1000_DEV_ID_82575EB_FIBER_SERDES	e1000_hw.h	46;"	d
E1000_DEV_ID_82575GB_QUAD_COPPER	e1000_hw.h	47;"	d
E1000_DEV_ID_82576	e1000_hw.h	37;"	d
E1000_DEV_ID_82576_FIBER	e1000_hw.h	38;"	d
E1000_DEV_ID_82576_NS	e1000_hw.h	42;"	d
E1000_DEV_ID_82576_NS_SERDES	e1000_hw.h	43;"	d
E1000_DEV_ID_82576_QUAD_COPPER	e1000_hw.h	40;"	d
E1000_DEV_ID_82576_QUAD_COPPER_ET2	e1000_hw.h	41;"	d
E1000_DEV_ID_82576_SERDES	e1000_hw.h	39;"	d
E1000_DEV_ID_82576_SERDES_QUAD	e1000_hw.h	44;"	d
E1000_DEV_ID_82576_VF	igb_main.c	9038;"	d	file:
E1000_DEV_ID_82580_COPPER	e1000_hw.h	48;"	d
E1000_DEV_ID_82580_COPPER_DUAL	e1000_hw.h	52;"	d
E1000_DEV_ID_82580_FIBER	e1000_hw.h	49;"	d
E1000_DEV_ID_82580_QUAD_FIBER	e1000_hw.h	53;"	d
E1000_DEV_ID_82580_SERDES	e1000_hw.h	50;"	d
E1000_DEV_ID_82580_SGMII	e1000_hw.h	51;"	d
E1000_DEV_ID_DH89XXCC_BACKPLANE	e1000_hw.h	73;"	d
E1000_DEV_ID_DH89XXCC_SERDES	e1000_hw.h	72;"	d
E1000_DEV_ID_DH89XXCC_SFP	e1000_hw.h	74;"	d
E1000_DEV_ID_DH89XXCC_SGMII	e1000_hw.h	71;"	d
E1000_DEV_ID_I210_COPPER	e1000_hw.h	59;"	d
E1000_DEV_ID_I210_COPPER_FLASHLESS	e1000_hw.h	65;"	d
E1000_DEV_ID_I210_COPPER_IT	e1000_hw.h	61;"	d
E1000_DEV_ID_I210_COPPER_OEM1	e1000_hw.h	60;"	d
E1000_DEV_ID_I210_FIBER	e1000_hw.h	62;"	d
E1000_DEV_ID_I210_SERDES	e1000_hw.h	63;"	d
E1000_DEV_ID_I210_SERDES_FLASHLESS	e1000_hw.h	66;"	d
E1000_DEV_ID_I210_SGMII	e1000_hw.h	64;"	d
E1000_DEV_ID_I211_COPPER	e1000_hw.h	67;"	d
E1000_DEV_ID_I350_COPPER	e1000_hw.h	54;"	d
E1000_DEV_ID_I350_DA4	e1000_hw.h	58;"	d
E1000_DEV_ID_I350_FIBER	e1000_hw.h	55;"	d
E1000_DEV_ID_I350_SERDES	e1000_hw.h	56;"	d
E1000_DEV_ID_I350_SGMII	e1000_hw.h	57;"	d
E1000_DEV_ID_I354_BACKPLANE_1GBPS	e1000_hw.h	68;"	d
E1000_DEV_ID_I354_BACKPLANE_2_5GBPS	e1000_hw.h	70;"	d
E1000_DEV_ID_I354_SGMII	e1000_hw.h	69;"	d
E1000_DIVIDE_ROUND_UP	e1000_api.h	155;"	d
E1000_DMACR	e1000_regs.h	610;"	d
E1000_DMACR_DC_BMC2OSW_EN	e1000_defines.h	1330;"	d
E1000_DMACR_DMACTHR_MASK	e1000_defines.h	1323;"	d
E1000_DMACR_DMACTHR_SHIFT	e1000_defines.h	1324;"	d
E1000_DMACR_DMACWT_MASK	e1000_defines.h	1321;"	d
E1000_DMACR_DMAC_EN	e1000_defines.h	1328;"	d
E1000_DMACR_DMAC_LX_MASK	e1000_defines.h	1326;"	d
E1000_DMACR_DMAC_LX_SHIFT	e1000_defines.h	1327;"	d
E1000_DMCCNT	e1000_regs.h	614;"	d
E1000_DMCCNT_CCOUNT_MASK	e1000_defines.h	1343;"	d
E1000_DMCRTRH	e1000_regs.h	613;"	d
E1000_DMCRTRH_LRPRCW	e1000_defines.h	1340;"	d
E1000_DMCRTRH_UTRESH_MASK	e1000_defines.h	1338;"	d
E1000_DMCTLX	e1000_regs.h	612;"	d
E1000_DMCTLX_TTLX_MASK	e1000_defines.h	1335;"	d
E1000_DMCTXTH	e1000_regs.h	611;"	d
E1000_DMCTXTH_DMCTTHR_MASK	e1000_defines.h	1333;"	d
E1000_DTXCTL	e1000_regs.h	273;"	d
E1000_DTXCTL_8023LL	e1000_82575.h	456;"	d
E1000_DTXCTL_MDP_EN	e1000_82575.h	459;"	d
E1000_DTXCTL_OOS_ENABLE	e1000_82575.h	458;"	d
E1000_DTXCTL_SPOOF_INT	e1000_82575.h	460;"	d
E1000_DTXCTL_VLAN_ADDED	e1000_82575.h	457;"	d
E1000_DTXMXSZRQ	e1000_regs.h	277;"	d
E1000_DTXSWC	e1000_regs.h	514;"	d
E1000_DTXSWC_LLE_MASK	e1000_82575.h	400;"	d
E1000_DTXSWC_LLE_SHIFT	e1000_82575.h	402;"	d
E1000_DTXSWC_MAC_SPOOF_MASK	e1000_82575.h	398;"	d
E1000_DTXSWC_VLAN_SPOOF_MASK	e1000_82575.h	399;"	d
E1000_DTXSWC_VLAN_SPOOF_SHIFT	e1000_82575.h	401;"	d
E1000_DTXSWC_VMDQ_LOOPBACK_EN	e1000_82575.h	403;"	d
E1000_DTXTCPFLGH	e1000_regs.h	275;"	d
E1000_DTXTCPFLGL	e1000_regs.h	274;"	d
E1000_DVMOLR	e1000_regs.h	537;"	d
E1000_DVMOLR_HIDVLAN	e1000_82575.h	428;"	d
E1000_DVMOLR_STRCRC	e1000_82575.h	430;"	d
E1000_DVMOLR_STRVLAN	e1000_82575.h	429;"	d
E1000_ECOL	e1000_regs.h	286;"	d
E1000_EEARBC	e1000_regs.h	89;"	d
E1000_EECD	e1000_regs.h	33;"	d
E1000_EECD_ABORT	e1000_defines.h	932;"	d
E1000_EECD_ADDR_BITS	e1000_defines.h	936;"	d
E1000_EECD_AUPDEN	e1000_defines.h	942;"	d
E1000_EECD_AUTO_RD	e1000_defines.h	938;"	d
E1000_EECD_BLOCKED	e1000_defines.h	931;"	d
E1000_EECD_CS	e1000_defines.h	924;"	d
E1000_EECD_DI	e1000_defines.h	925;"	d
E1000_EECD_DO	e1000_defines.h	926;"	d
E1000_EECD_ERROR_CLR	e1000_defines.h	934;"	d
E1000_EECD_FLASH_DETECTED_I210	e1000_defines.h	947;"	d
E1000_EECD_FLUDONE_I210	e1000_defines.h	946;"	d
E1000_EECD_FLUPD	e1000_defines.h	941;"	d
E1000_EECD_FLUPD_I210	e1000_defines.h	945;"	d
E1000_EECD_GNT	e1000_defines.h	928;"	d
E1000_EECD_PRES	e1000_defines.h	929;"	d
E1000_EECD_REQ	e1000_defines.h	927;"	d
E1000_EECD_SEC1VAL	e1000_defines.h	943;"	d
E1000_EECD_SEC1VAL_I210	e1000_defines.h	948;"	d
E1000_EECD_SEC1VAL_VALID_MASK	e1000_defines.h	944;"	d
E1000_EECD_SIZE	e1000_defines.h	930;"	d
E1000_EECD_SIZE_EX_MASK	e1000_defines.h	939;"	d
E1000_EECD_SIZE_EX_SHIFT	e1000_defines.h	940;"	d
E1000_EECD_SK	e1000_defines.h	923;"	d
E1000_EECD_TIMEOUT	e1000_defines.h	933;"	d
E1000_EEER	e1000_regs.h	633;"	d
E1000_EEER_EEE_NEG	e1000_defines.h	764;"	d
E1000_EEER_LPI_FC	e1000_defines.h	762;"	d
E1000_EEER_RX_LPI_EN	e1000_defines.h	761;"	d
E1000_EEER_RX_LPI_STATUS	e1000_defines.h	765;"	d
E1000_EEER_TX_LPI_EN	e1000_defines.h	760;"	d
E1000_EEER_TX_LPI_STATUS	e1000_defines.h	766;"	d
E1000_EEE_ADV_1000_SUPPORTED	e1000_defines.h	774;"	d
E1000_EEE_ADV_100_SUPPORTED	e1000_defines.h	773;"	d
E1000_EEE_ADV_ADDR_I354	e1000_defines.h	772;"	d
E1000_EEE_ADV_DEV_I354	e1000_defines.h	771;"	d
E1000_EEE_LP_ADV_ADDR_I210	e1000_defines.h	781;"	d
E1000_EEE_LP_ADV_ADDR_I350	e1000_defines.h	767;"	d
E1000_EEE_LP_ADV_DEV_I210	e1000_defines.h	780;"	d
E1000_EEE_SU	e1000_regs.h	634;"	d
E1000_EEE_SU_LPI_CLK_STP	e1000_defines.h	779;"	d
E1000_EEMNGCTL	e1000_regs.h	88;"	d
E1000_EEPROM_FLASH_SIZE_WORD	e1000_i210.h	49;"	d
E1000_EEPROM_INIT_CTRL_WORD_2	e1000_regs.h	40;"	d
E1000_EEPROM_PCIE_CTRL_WORD_2	e1000_regs.h	41;"	d
E1000_EEPROM_PCS_AUTONEG_DISABLE_BIT	e1000_82575.h	462;"	d
E1000_EERD	e1000_regs.h	34;"	d
E1000_EERD_EEWR_MAX_COUNT	e1000_defines.h	950;"	d
E1000_EEWR	e1000_regs.h	90;"	d
E1000_EIAC	e1000_regs.h	72;"	d
E1000_EIAM	e1000_regs.h	73;"	d
E1000_EICR	e1000_regs.h	67;"	d
E1000_EICR_OTHER	e1000_defines.h	519;"	d
E1000_EICR_RX_QUEUE	e1000_82575.h	157;"	d
E1000_EICR_RX_QUEUE0	e1000_defines.h	510;"	d
E1000_EICR_RX_QUEUE1	e1000_defines.h	511;"	d
E1000_EICR_RX_QUEUE2	e1000_defines.h	512;"	d
E1000_EICR_RX_QUEUE3	e1000_defines.h	513;"	d
E1000_EICR_TCP_TIMER	e1000_defines.h	518;"	d
E1000_EICR_TX_QUEUE	e1000_82575.h	151;"	d
E1000_EICR_TX_QUEUE0	e1000_defines.h	514;"	d
E1000_EICR_TX_QUEUE1	e1000_defines.h	515;"	d
E1000_EICR_TX_QUEUE2	e1000_defines.h	516;"	d
E1000_EICR_TX_QUEUE3	e1000_defines.h	517;"	d
E1000_EICS	e1000_regs.h	69;"	d
E1000_EICS_OTHER	e1000_defines.h	585;"	d
E1000_EICS_RX_QUEUE0	e1000_defines.h	576;"	d
E1000_EICS_RX_QUEUE1	e1000_defines.h	577;"	d
E1000_EICS_RX_QUEUE2	e1000_defines.h	578;"	d
E1000_EICS_RX_QUEUE3	e1000_defines.h	579;"	d
E1000_EICS_TCP_TIMER	e1000_defines.h	584;"	d
E1000_EICS_TX_QUEUE0	e1000_defines.h	580;"	d
E1000_EICS_TX_QUEUE1	e1000_defines.h	581;"	d
E1000_EICS_TX_QUEUE2	e1000_defines.h	582;"	d
E1000_EICS_TX_QUEUE3	e1000_defines.h	583;"	d
E1000_EIMC	e1000_regs.h	71;"	d
E1000_EIMS	e1000_regs.h	70;"	d
E1000_EIMS_OTHER	e1000_defines.h	568;"	d
E1000_EIMS_RX_QUEUE	e1000_82575.h	163;"	d
E1000_EIMS_RX_QUEUE0	e1000_defines.h	559;"	d
E1000_EIMS_RX_QUEUE1	e1000_defines.h	560;"	d
E1000_EIMS_RX_QUEUE2	e1000_defines.h	561;"	d
E1000_EIMS_RX_QUEUE3	e1000_defines.h	562;"	d
E1000_EIMS_TCP_TIMER	e1000_defines.h	567;"	d
E1000_EIMS_TX_QUEUE	e1000_82575.h	164;"	d
E1000_EIMS_TX_QUEUE0	e1000_defines.h	563;"	d
E1000_EIMS_TX_QUEUE1	e1000_defines.h	564;"	d
E1000_EIMS_TX_QUEUE2	e1000_defines.h	565;"	d
E1000_EIMS_TX_QUEUE3	e1000_defines.h	566;"	d
E1000_EITR	e1000_regs.h	68;"	d
E1000_EITR_CNT_IGNR	e1000_defines.h	589;"	d
E1000_EITR_INTERVAL	e1000_defines.h	590;"	d
E1000_EITR_ITR_INT_MASK	e1000_defines.h	587;"	d
E1000_EMC_DIODE1_DATA	e1000_82575.h	481;"	d
E1000_EMC_DIODE1_THERM_LIMIT	e1000_82575.h	482;"	d
E1000_EMC_DIODE2_DATA	e1000_82575.h	483;"	d
E1000_EMC_DIODE2_THERM_LIMIT	e1000_82575.h	484;"	d
E1000_EMC_DIODE3_DATA	e1000_82575.h	485;"	d
E1000_EMC_DIODE3_THERM_LIMIT	e1000_82575.h	486;"	d
E1000_EMC_INTERNAL_DATA	e1000_82575.h	479;"	d
E1000_EMC_INTERNAL_THERM_LIMIT	e1000_82575.h	480;"	d
E1000_EMIADD	e1000_regs.h	135;"	d
E1000_EMIDATA	e1000_regs.h	136;"	d
E1000_ENABLE_SERDES_LOOPBACK	e1000_defines.h	285;"	d
E1000_ERR_CONFIG	e1000_defines.h	629;"	d
E1000_ERR_HOST_INTERFACE_COMMAND	e1000_defines.h	635;"	d
E1000_ERR_I2C	e1000_defines.h	643;"	d
E1000_ERR_INVALID_ARGUMENT	e1000_defines.h	640;"	d
E1000_ERR_INVM_VALUE_NOT_FOUND	e1000_defines.h	644;"	d
E1000_ERR_MAC_INIT	e1000_defines.h	631;"	d
E1000_ERR_MASTER_REQUESTS_PENDING	e1000_defines.h	634;"	d
E1000_ERR_MBX	e1000_defines.h	639;"	d
E1000_ERR_NO_SPACE	e1000_defines.h	641;"	d
E1000_ERR_NVM	e1000_defines.h	627;"	d
E1000_ERR_NVM_PBA_SECTION	e1000_defines.h	642;"	d
E1000_ERR_PARAM	e1000_defines.h	630;"	d
E1000_ERR_PHY	e1000_defines.h	628;"	d
E1000_ERR_PHY_TYPE	e1000_defines.h	632;"	d
E1000_ERR_RESET	e1000_defines.h	633;"	d
E1000_ERR_SWFW_SYNC	e1000_defines.h	637;"	d
E1000_ERT	e1000_regs.h	112;"	d
E1000_ETQF	e1000_regs.h	565;"	d
E1000_ETQF_1588	e1000_82575.h	375;"	d
E1000_ETQF_FILTER_EAPOL	e1000_82575.h	385;"	d
E1000_ETQF_FILTER_ENABLE	e1000_82575.h	373;"	d
E1000_ETQF_IMM_INT	e1000_82575.h	374;"	d
E1000_ETQF_QUEUE_ENABLE	e1000_82575.h	376;"	d
E1000_EXTCNF_CTRL	e1000_regs.h	83;"	d
E1000_EXTCNF_CTRL_EXT_CNF_POINTER_MASK	e1000_defines.h	435;"	d
E1000_EXTCNF_CTRL_EXT_CNF_POINTER_SHIFT	e1000_defines.h	436;"	d
E1000_EXTCNF_CTRL_GATE_PHY_CFG	e1000_defines.h	432;"	d
E1000_EXTCNF_CTRL_LCD_WRITE_ENABLE	e1000_defines.h	429;"	d
E1000_EXTCNF_CTRL_MDIO_SW_OWNERSHIP	e1000_defines.h	428;"	d
E1000_EXTCNF_CTRL_OEM_WRITE_ENABLE	e1000_defines.h	430;"	d
E1000_EXTCNF_CTRL_SWFLAG	e1000_defines.h	431;"	d
E1000_EXTCNF_SIZE	e1000_regs.h	84;"	d
E1000_EXTCNF_SIZE_EXT_PCIE_LENGTH_MASK	e1000_defines.h	433;"	d
E1000_EXTCNF_SIZE_EXT_PCIE_LENGTH_SHIFT	e1000_defines.h	434;"	d
E1000_FACTPS	e1000_regs.h	483;"	d
E1000_FACTPS_MNGCG	e1000_manage.h	53;"	d
E1000_FCAH	e1000_regs.h	53;"	d
E1000_FCAL	e1000_regs.h	52;"	d
E1000_FCRTC	e1000_regs.h	615;"	d
E1000_FCRTC_RTH_COAL_MASK	e1000_defines.h	1346;"	d
E1000_FCRTC_RTH_COAL_SHIFT	e1000_defines.h	1347;"	d
E1000_FCRTH	e1000_regs.h	114;"	d
E1000_FCRTH_RTH	e1000_defines.h	661;"	d
E1000_FCRTL	e1000_regs.h	113;"	d
E1000_FCRTL_RTL	e1000_defines.h	662;"	d
E1000_FCRTL_XONE	e1000_defines.h	663;"	d
E1000_FCRTV	e1000_regs.h	122;"	d
E1000_FCRUC	e1000_regs.h	299;"	d
E1000_FCT	e1000_regs.h	54;"	d
E1000_FCTTV	e1000_regs.h	64;"	d
E1000_FFLT	e1000_regs.h	458;"	d
E1000_FFLT_DBG	e1000_regs.h	491;"	d
E1000_FFLT_REG	e1000_regs.h	257;"	d
E1000_FFMT	e1000_regs.h	460;"	d
E1000_FFMT_REG	e1000_regs.h	255;"	d
E1000_FFVT	e1000_regs.h	461;"	d
E1000_FFVT_REG	e1000_regs.h	256;"	d
E1000_FHFT	e1000_regs.h	464;"	d
E1000_FHFT_EXT	e1000_regs.h	466;"	d
E1000_FLA	e1000_regs.h	36;"	d
E1000_FLASH_UPDATES	e1000_defines.h	969;"	d
E1000_FLOP	e1000_regs.h	91;"	d
E1000_FLUDONE_ATTEMPTS	e1000_defines.h	949;"	d
E1000_FRTIMER	e1000_regs.h	104;"	d
E1000_FTQF	e1000_regs.h	562;"	d
E1000_FTQF_1588_TIME_STAMP	e1000_82575.h	388;"	d
E1000_FTQF_MASK	e1000_82575.h	389;"	d
E1000_FTQF_MASK_DEST_ADDR_BP	e1000_82575.h	392;"	d
E1000_FTQF_MASK_PROTO_BP	e1000_82575.h	390;"	d
E1000_FTQF_MASK_SOURCE_ADDR_BP	e1000_82575.h	391;"	d
E1000_FTQF_MASK_SOURCE_PORT_BP	e1000_82575.h	393;"	d
E1000_FTQF_VF_BP	e1000_82575.h	387;"	d
E1000_FUNC_0	e1000_hw.h	82;"	d
E1000_FUNC_1	e1000_hw.h	83;"	d
E1000_FUNC_2	e1000_hw.h	84;"	d
E1000_FUNC_3	e1000_hw.h	85;"	d
E1000_FWSM	e1000_regs.h	485;"	d
E1000_FWSM_FW_VALID	e1000_manage.h	57;"	d
E1000_FWSM_HI_EN_ONLY_MODE	e1000_manage.h	58;"	d
E1000_FWSM_MODE_MASK	e1000_manage.h	55;"	d
E1000_FWSM_MODE_SHIFT	e1000_manage.h	56;"	d
E1000_FWSTS	e1000_regs.h	493;"	d
E1000_FWSTS_FWRI	e1000_defines.h	1369;"	d
E1000_GCR	e1000_regs.h	477;"	d
E1000_GCR2	e1000_regs.h	478;"	d
E1000_GCR_CAP_VER2	e1000_defines.h	792;"	d
E1000_GCR_CMPL_TMOUT_10ms	e1000_defines.h	790;"	d
E1000_GCR_CMPL_TMOUT_MASK	e1000_defines.h	789;"	d
E1000_GCR_CMPL_TMOUT_RESEND	e1000_defines.h	791;"	d
E1000_GCR_RXDSCR_NO_SNOOP	e1000_defines.h	785;"	d
E1000_GCR_RXDSCW_NO_SNOOP	e1000_defines.h	784;"	d
E1000_GCR_RXD_NO_SNOOP	e1000_defines.h	783;"	d
E1000_GCR_TXDSCR_NO_SNOOP	e1000_defines.h	788;"	d
E1000_GCR_TXDSCW_NO_SNOOP	e1000_defines.h	787;"	d
E1000_GCR_TXD_NO_SNOOP	e1000_defines.h	786;"	d
E1000_GEN_CTL_ADDRESS_SHIFT	e1000_defines.h	1285;"	d
E1000_GEN_CTL_READY	e1000_defines.h	1284;"	d
E1000_GEN_POLL_TIMEOUT	e1000_defines.h	1286;"	d
E1000_GIOCTL	e1000_regs.h	475;"	d
E1000_GORCH	e1000_regs.h	311;"	d
E1000_GORCL	e1000_regs.h	310;"	d
E1000_GOTCH	e1000_regs.h	313;"	d
E1000_GOTCL	e1000_regs.h	312;"	d
E1000_GPIE	e1000_regs.h	74;"	d
E1000_GPIE_EIAME	e1000_defines.h	97;"	d
E1000_GPIE_MSIX_MODE	e1000_defines.h	96;"	d
E1000_GPIE_NSICR	e1000_defines.h	95;"	d
E1000_GPIE_PBA	e1000_defines.h	98;"	d
E1000_GPRC	e1000_regs.h	306;"	d
E1000_GPTC	e1000_regs.h	309;"	d
E1000_GSCL_1	e1000_regs.h	479;"	d
E1000_GSCL_2	e1000_regs.h	480;"	d
E1000_GSCL_3	e1000_regs.h	481;"	d
E1000_GSCL_4	e1000_regs.h	482;"	d
E1000_HGORCH	e1000_regs.h	426;"	d
E1000_HGORCL	e1000_regs.h	425;"	d
E1000_HGOTCH	e1000_regs.h	428;"	d
E1000_HGOTCL	e1000_regs.h	427;"	d
E1000_HGPTC	e1000_regs.h	423;"	d
E1000_HIBBA	e1000_regs.h	462;"	d
E1000_HICR	e1000_regs.h	492;"	d
E1000_HICR_C	e1000_manage.h	81;"	d
E1000_HICR_EN	e1000_manage.h	79;"	d
E1000_HICR_FW_RESET	e1000_manage.h	84;"	d
E1000_HICR_FW_RESET_ENABLE	e1000_manage.h	83;"	d
E1000_HICR_MEMORY_BASE_EN	e1000_manage.h	78;"	d
E1000_HICR_SV	e1000_manage.h	82;"	d
E1000_HI_COMMAND_TIMEOUT	e1000_manage.h	74;"	d
E1000_HI_FW_BASE_ADDRESS	e1000_manage.h	75;"	d
E1000_HI_FW_BLOCK_DWORD_LENGTH	e1000_manage.h	77;"	d
E1000_HI_FW_MAX_LENGTH	e1000_manage.h	76;"	d
E1000_HI_MAX_BLOCK_BYTE_LENGTH	e1000_manage.h	72;"	d
E1000_HI_MAX_BLOCK_DWORD_LENGTH	e1000_manage.h	73;"	d
E1000_HI_MAX_DATA_LENGTH	e1000_hw.h	472;"	d
E1000_HI_MAX_MNG_DATA_LENGTH	e1000_hw.h	487;"	d
E1000_HOST_IF	e1000_regs.h	459;"	d
E1000_HRMPC	e1000_regs.h	431;"	d
E1000_HTCBDPC	e1000_regs.h	424;"	d
E1000_HTDPMC	e1000_regs.h	419;"	d
E1000_I210_FIFO_SEL_BMC2OS_RX	e1000_defines.h	955;"	d
E1000_I210_FIFO_SEL_BMC2OS_TX	e1000_defines.h	954;"	d
E1000_I210_FIFO_SEL_RX	e1000_defines.h	951;"	d
E1000_I210_FIFO_SEL_TX_LEGACY	e1000_defines.h	953;"	d
E1000_I210_FIFO_SEL_TX_QAV	e1000_defines.h	952;"	d
E1000_I210_FLA	e1000_regs.h	146;"	d
E1000_I210_FLASH_SECTOR_SIZE	e1000_defines.h	957;"	d
E1000_I210_FLMNGCNT	e1000_regs.h	140;"	d
E1000_I210_FLMNGCTL	e1000_regs.h	138;"	d
E1000_I210_FLMNGDATA	e1000_regs.h	139;"	d
E1000_I210_FLSWCNT	e1000_regs.h	144;"	d
E1000_I210_FLSWCTL	e1000_regs.h	142;"	d
E1000_I210_FLSWDATA	e1000_regs.h	143;"	d
E1000_I210_FW_PTR_MASK	e1000_defines.h	959;"	d
E1000_I210_FW_VER_OFFSET	e1000_defines.h	961;"	d
E1000_I210_NVM_FW_MODULE_PTR	e1000_defines.h	975;"	d
E1000_I210_TQAVARBCTRL	e1000_regs.h	176;"	d
E1000_I210_TQAVCC	e1000_regs.h	180;"	d
E1000_I210_TQAVCTRL	e1000_regs.h	152;"	d
E1000_I210_TQAVHC	e1000_regs.h	173;"	d
E1000_I210_TXPBS_SIZE	e1000_regs.h	191;"	d
E1000_I2CBB_EN	e1000_regs.h	94;"	d
E1000_I2CCMD	e1000_regs.h	92;"	d
E1000_I2CCMD_ERROR	e1000_defines.h	89;"	d
E1000_I2CCMD_OPCODE_READ	e1000_defines.h	86;"	d
E1000_I2CCMD_OPCODE_WRITE	e1000_defines.h	87;"	d
E1000_I2CCMD_PHY_ADDR_SHIFT	e1000_defines.h	85;"	d
E1000_I2CCMD_PHY_TIMEOUT	e1000_defines.h	93;"	d
E1000_I2CCMD_READY	e1000_defines.h	88;"	d
E1000_I2CCMD_REG_ADDR_SHIFT	e1000_defines.h	84;"	d
E1000_I2CCMD_SFP_DATA_ADDR	e1000_defines.h	90;"	d
E1000_I2CCMD_SFP_DIAG_ADDR	e1000_defines.h	91;"	d
E1000_I2CPARAMS	e1000_regs.h	93;"	d
E1000_I2C_CLK_IN	e1000_regs.h	100;"	d
E1000_I2C_CLK_OE_N	e1000_regs.h	99;"	d
E1000_I2C_CLK_OUT	e1000_regs.h	95;"	d
E1000_I2C_CLK_STRETCH_DIS	e1000_regs.h	101;"	d
E1000_I2C_DATA_IN	e1000_regs.h	98;"	d
E1000_I2C_DATA_OE_N	e1000_regs.h	97;"	d
E1000_I2C_DATA_OUT	e1000_regs.h	96;"	d
E1000_I2C_THERMAL_SENSOR_ADDR	e1000_82575.h	478;"	d
E1000_I2C_T_BUF	e1000_82575.h	501;"	d
E1000_I2C_T_FALL	e1000_82575.h	499;"	d
E1000_I2C_T_HD_DATA	e1000_82575.h	496;"	d
E1000_I2C_T_HD_STA	e1000_82575.h	492;"	d
E1000_I2C_T_HIGH	e1000_82575.h	494;"	d
E1000_I2C_T_LOW	e1000_82575.h	493;"	d
E1000_I2C_T_RISE	e1000_82575.h	498;"	d
E1000_I2C_T_SU_DATA	e1000_82575.h	497;"	d
E1000_I2C_T_SU_STA	e1000_82575.h	495;"	d
E1000_I2C_T_SU_STO	e1000_82575.h	500;"	d
E1000_I350_BARCTRL	e1000_regs.h	49;"	d
E1000_I350_DTXMXPKTSZ	e1000_regs.h	50;"	d
E1000_I350_NVM_FW_LOADER_PATCH_PTR_OFFSET	e1000_defines.h	1000;"	d
E1000_I350_NVM_FW_MODULE_PTR	e1000_defines.h	976;"	d
E1000_I350_NVM_FW_VER_WORD1_OFFSET	e1000_defines.h	1002;"	d
E1000_I350_NVM_FW_VER_WORD2_OFFSET	e1000_defines.h	1004;"	d
E1000_I350_NVM_FW_VER_WORD3_OFFSET	e1000_defines.h	1006;"	d
E1000_I350_NVM_FW_VER_WORD4_OFFSET	e1000_defines.h	1008;"	d
E1000_IAC	e1000_regs.h	338;"	d
E1000_IAM	e1000_regs.h	62;"	d
E1000_IAMT_SIGNATURE	e1000_manage.h	87;"	d
E1000_IAM_V2	e1000_regs.h	111;"	d
E1000_ICR	e1000_regs.h	57;"	d
E1000_ICRXATC	e1000_regs.h	340;"	d
E1000_ICRXDMTC	e1000_regs.h	345;"	d
E1000_ICRXOC	e1000_regs.h	346;"	d
E1000_ICRXPTC	e1000_regs.h	339;"	d
E1000_ICR_DOUTSYNC	e1000_defines.h	502;"	d
E1000_ICR_DRSTA	e1000_defines.h	499;"	d
E1000_ICR_FER	e1000_defines.h	503;"	d
E1000_ICR_GPI_EN0	e1000_defines.h	492;"	d
E1000_ICR_GPI_EN1	e1000_defines.h	493;"	d
E1000_ICR_GPI_EN2	e1000_defines.h	494;"	d
E1000_ICR_GPI_EN3	e1000_defines.h	495;"	d
E1000_ICR_INT_ASSERTED	e1000_defines.h	501;"	d
E1000_ICR_LSC	e1000_defines.h	485;"	d
E1000_ICR_LSECPNS	e1000_82575.h	368;"	d
E1000_ICR_MDDET	e1000_defines.h	506;"	d
E1000_ICR_MNG	e1000_defines.h	497;"	d
E1000_ICR_RXCFG	e1000_defines.h	491;"	d
E1000_ICR_RXDMT0	e1000_defines.h	487;"	d
E1000_ICR_RXO	e1000_defines.h	488;"	d
E1000_ICR_RXSEQ	e1000_defines.h	486;"	d
E1000_ICR_RXT0	e1000_defines.h	489;"	d
E1000_ICR_THS	e1000_defines.h	505;"	d
E1000_ICR_TS	e1000_defines.h	498;"	d
E1000_ICR_TXDW	e1000_defines.h	483;"	d
E1000_ICR_TXD_LOW	e1000_defines.h	496;"	d
E1000_ICR_TXQE	e1000_defines.h	484;"	d
E1000_ICR_V2	e1000_regs.h	107;"	d
E1000_ICR_VMMB	e1000_defines.h	490;"	d
E1000_ICS	e1000_regs.h	59;"	d
E1000_ICS_LSC	e1000_defines.h	571;"	d
E1000_ICS_LSECPNS	e1000_82575.h	370;"	d
E1000_ICS_RXDMT0	e1000_defines.h	573;"	d
E1000_ICS_RXSEQ	e1000_defines.h	572;"	d
E1000_ICS_V2	e1000_regs.h	108;"	d
E1000_ICTXATC	e1000_regs.h	342;"	d
E1000_ICTXPTC	e1000_regs.h	341;"	d
E1000_ICTXQEC	e1000_regs.h	343;"	d
E1000_ICTXQMTC	e1000_regs.h	344;"	d
E1000_IMC	e1000_regs.h	61;"	d
E1000_IMC_V2	e1000_regs.h	110;"	d
E1000_IMIR	e1000_regs.h	498;"	d
E1000_IMIREXT	e1000_regs.h	499;"	d
E1000_IMIREXT_CLEAR_MASK	e1000_defines.h	733;"	d
E1000_IMIREXT_CTRL_ACK	e1000_82575.h	177;"	d
E1000_IMIREXT_CTRL_BP	e1000_82575.h	182;"	d
E1000_IMIREXT_CTRL_FIN	e1000_82575.h	181;"	d
E1000_IMIREXT_CTRL_PSH	e1000_82575.h	178;"	d
E1000_IMIREXT_CTRL_RST	e1000_82575.h	179;"	d
E1000_IMIREXT_CTRL_SYN	e1000_82575.h	180;"	d
E1000_IMIREXT_CTRL_URG	e1000_82575.h	176;"	d
E1000_IMIREXT_SIZE_BP	e1000_82575.h	175;"	d
E1000_IMIRVP	e1000_regs.h	500;"	d
E1000_IMIR_CLEAR_MASK	e1000_defines.h	730;"	d
E1000_IMIR_PORT_BP	e1000_82575.h	174;"	d
E1000_IMIR_PORT_BYPASS	e1000_defines.h	731;"	d
E1000_IMIR_PORT_IM_EN	e1000_82575.h	173;"	d
E1000_IMIR_PRIORITY_SHIFT	e1000_defines.h	732;"	d
E1000_IMS	e1000_regs.h	60;"	d
E1000_IMS_DOUTSYNC	e1000_defines.h	553;"	d
E1000_IMS_DRSTA	e1000_defines.h	552;"	d
E1000_IMS_FER	e1000_defines.h	554;"	d
E1000_IMS_LSC	e1000_defines.h	544;"	d
E1000_IMS_LSECPNS	e1000_82575.h	369;"	d
E1000_IMS_MDDET	e1000_defines.h	557;"	d
E1000_IMS_RXDMT0	e1000_defines.h	547;"	d
E1000_IMS_RXO	e1000_defines.h	548;"	d
E1000_IMS_RXSEQ	e1000_defines.h	546;"	d
E1000_IMS_RXT0	e1000_defines.h	549;"	d
E1000_IMS_THS	e1000_defines.h	556;"	d
E1000_IMS_TS	e1000_defines.h	551;"	d
E1000_IMS_TXDW	e1000_defines.h	542;"	d
E1000_IMS_TXD_LOW	e1000_defines.h	550;"	d
E1000_IMS_TXQE	e1000_defines.h	543;"	d
E1000_IMS_V2	e1000_regs.h	109;"	d
E1000_IMS_VMMB	e1000_defines.h	545;"	d
E1000_INVM_CSR_AUTOLOAD_DATA_SIZE_IN_DWORDS	e1000_i210.h	68;"	d
E1000_INVM_CSR_AUTOLOAD_STRUCTURE	e1000_i210.h	/^	E1000_INVM_CSR_AUTOLOAD_STRUCTURE		= 0x02,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_DATA_REG	e1000_regs.h	148;"	d
E1000_INVM_IMGTYPE_FIELD	e1000_i210.h	73;"	d
E1000_INVM_INVALIDATED_STRUCTURE	e1000_i210.h	/^	E1000_INVM_INVALIDATED_STRUCTURE		= 0x0F,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_MAJOR_MASK	e1000_i210.h	75;"	d
E1000_INVM_MAJOR_SHIFT	e1000_i210.h	77;"	d
E1000_INVM_MINOR_MASK	e1000_i210.h	76;"	d
E1000_INVM_PHY_REGISTER_AUTOLOAD_STRUCTURE	e1000_i210.h	/^	E1000_INVM_PHY_REGISTER_AUTOLOAD_STRUCTURE	= 0x03,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_RECORD_SIZE_IN_BYTES	e1000_i210.h	70;"	d
E1000_INVM_RSA_KEY_SHA256_DATA_SIZE_IN_DWORDS	e1000_i210.h	67;"	d
E1000_INVM_RSA_KEY_SHA256_STRUCTURE	e1000_i210.h	/^	E1000_INVM_RSA_KEY_SHA256_STRUCTURE		= 0x04,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_SIZE	e1000_regs.h	149;"	d
E1000_INVM_STRUCTURE_TYPE	e1000_i210.h	/^enum E1000_INVM_STRUCTURE_TYPE {$/;"	g
E1000_INVM_ULT_BYTES_SIZE	e1000_i210.h	69;"	d
E1000_INVM_UNINITIALIZED_STRUCTURE	e1000_i210.h	/^	E1000_INVM_UNINITIALIZED_STRUCTURE		= 0x00,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_VER_FIELD_ONE	e1000_i210.h	71;"	d
E1000_INVM_VER_FIELD_TWO	e1000_i210.h	72;"	d
E1000_INVM_WORD_AUTOLOAD_STRUCTURE	e1000_i210.h	/^	E1000_INVM_WORD_AUTOLOAD_STRUCTURE		= 0x01,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_IOVCTL	e1000_82575.h	447;"	d
E1000_IOVCTL_REUSE_VFQ	e1000_82575.h	448;"	d
E1000_IOVTCL	e1000_regs.h	518;"	d
E1000_IP4AT	e1000_regs.h	453;"	d
E1000_IP4AT_REG	e1000_regs.h	252;"	d
E1000_IP6AT	e1000_regs.h	454;"	d
E1000_IP6AT_REG	e1000_regs.h	253;"	d
E1000_IPAV	e1000_regs.h	452;"	d
E1000_IPCNFG	e1000_regs.h	631;"	d
E1000_IPCNFG_EEE_100M_AN	e1000_defines.h	759;"	d
E1000_IPCNFG_EEE_1G_AN	e1000_defines.h	758;"	d
E1000_IPSCTRL	e1000_regs.h	402;"	d
E1000_IPSRXCMD	e1000_regs.h	403;"	d
E1000_IPSRXIDX	e1000_regs.h	404;"	d
E1000_IPSRXIPADDR	e1000_regs.h	406;"	d
E1000_IPSRXKEY	e1000_regs.h	408;"	d
E1000_IPSRXSALT	e1000_regs.h	409;"	d
E1000_IPSRXSPI	e1000_regs.h	410;"	d
E1000_IPSTXIDX	e1000_regs.h	414;"	d
E1000_IPSTXKEY	e1000_regs.h	412;"	d
E1000_IPSTXSALT	e1000_regs.h	413;"	d
E1000_IRPBS	e1000_regs.h	131;"	d
E1000_ITPBS	e1000_regs.h	262;"	d
E1000_ITR	e1000_regs.h	58;"	d
E1000_IVAR0	e1000_regs.h	75;"	d
E1000_IVAR_MISC	e1000_regs.h	76;"	d
E1000_IVAR_VALID	e1000_defines.h	94;"	d
E1000_KABGTXD	e1000_regs.h	244;"	d
E1000_KABGTXD_BGSQLBIAS	e1000_defines.h	443;"	d
E1000_KMRNCTRLSTA	e1000_regs.h	469;"	d
E1000_KMRNCTRLSTA_DIAG_NELPBK	e1000_phy.h	208;"	d
E1000_KMRNCTRLSTA_DIAG_OFFSET	e1000_phy.h	204;"	d
E1000_KMRNCTRLSTA_IBIST_DISABLE	e1000_phy.h	207;"	d
E1000_KMRNCTRLSTA_INBAND_PARAM	e1000_phy.h	206;"	d
E1000_KMRNCTRLSTA_OFFSET	e1000_phy.h	201;"	d
E1000_KMRNCTRLSTA_OFFSET_SHIFT	e1000_phy.h	202;"	d
E1000_KMRNCTRLSTA_REN	e1000_phy.h	203;"	d
E1000_KMRNCTRLSTA_TIMEOUTS	e1000_phy.h	205;"	d
E1000_LATECOL	e1000_regs.h	288;"	d
E1000_LEDCTL	e1000_regs.h	81;"	d
E1000_LEDCTL_LED0_BLINK	e1000_defines.h	343;"	d
E1000_LEDCTL_LED0_IVRT	e1000_defines.h	342;"	d
E1000_LEDCTL_LED0_MODE_MASK	e1000_defines.h	340;"	d
E1000_LEDCTL_LED0_MODE_SHIFT	e1000_defines.h	341;"	d
E1000_LEDCTL_MODE_LED_OFF	e1000_defines.h	346;"	d
E1000_LEDCTL_MODE_LED_ON	e1000_defines.h	345;"	d
E1000_LEDMUX	e1000_regs.h	82;"	d
E1000_LENERRS	e1000_regs.h	429;"	d
E1000_LSECRXBAD	e1000_regs.h	368;"	d
E1000_LSECRXCAP	e1000_regs.h	380;"	d
E1000_LSECRXCAP_SUM_MASK	e1000_defines.h	1291;"	d
E1000_LSECRXCAP_SUM_SHIFT	e1000_defines.h	1292;"	d
E1000_LSECRXCTRL	e1000_regs.h	382;"	d
E1000_LSECRXCTRL_CHECK	e1000_defines.h	1305;"	d
E1000_LSECRXCTRL_DISABLE	e1000_defines.h	1304;"	d
E1000_LSECRXCTRL_DROP	e1000_defines.h	1307;"	d
E1000_LSECRXCTRL_EN_MASK	e1000_defines.h	1302;"	d
E1000_LSECRXCTRL_EN_SHIFT	e1000_defines.h	1303;"	d
E1000_LSECRXCTRL_PLSH	e1000_defines.h	1308;"	d
E1000_LSECRXCTRL_RP	e1000_defines.h	1309;"	d
E1000_LSECRXCTRL_RSV_MASK	e1000_defines.h	1310;"	d
E1000_LSECRXCTRL_STRICT	e1000_defines.h	1306;"	d
E1000_LSECRXDELAY	e1000_regs.h	372;"	d
E1000_LSECRXINV	e1000_regs.h	375;"	d
E1000_LSECRXKEY	e1000_regs.h	399;"	d
E1000_LSECRXLATE	e1000_regs.h	373;"	d
E1000_LSECRXNOSCI	e1000_regs.h	369;"	d
E1000_LSECRXNUSA	e1000_regs.h	378;"	d
E1000_LSECRXNV	e1000_regs.h	376;"	d
E1000_LSECRXOCTD	e1000_regs.h	366;"	d
E1000_LSECRXOCTV	e1000_regs.h	367;"	d
E1000_LSECRXOK	e1000_regs.h	374;"	d
E1000_LSECRXPN	e1000_regs.h	395;"	d
E1000_LSECRXSA	e1000_regs.h	394;"	d
E1000_LSECRXSCH	e1000_regs.h	389;"	d
E1000_LSECRXSCL	e1000_regs.h	388;"	d
E1000_LSECRXUNCH	e1000_regs.h	371;"	d
E1000_LSECRXUNSA	e1000_regs.h	377;"	d
E1000_LSECRXUNSCI	e1000_regs.h	370;"	d
E1000_LSECRXUT	e1000_regs.h	365;"	d
E1000_LSECTXCAP	e1000_regs.h	379;"	d
E1000_LSECTXCAP_SUM_MASK	e1000_defines.h	1289;"	d
E1000_LSECTXCAP_SUM_SHIFT	e1000_defines.h	1290;"	d
E1000_LSECTXCTRL	e1000_regs.h	381;"	d
E1000_LSECTXCTRL_AISCI	e1000_defines.h	1298;"	d
E1000_LSECTXCTRL_AUTH	e1000_defines.h	1296;"	d
E1000_LSECTXCTRL_AUTH_ENCRYPT	e1000_defines.h	1297;"	d
E1000_LSECTXCTRL_DISABLE	e1000_defines.h	1295;"	d
E1000_LSECTXCTRL_EN_MASK	e1000_defines.h	1294;"	d
E1000_LSECTXCTRL_PNTHRSH_MASK	e1000_defines.h	1299;"	d
E1000_LSECTXCTRL_RSV_MASK	e1000_defines.h	1300;"	d
E1000_LSECTXKEY0	e1000_regs.h	391;"	d
E1000_LSECTXKEY1	e1000_regs.h	393;"	d
E1000_LSECTXOCTE	e1000_regs.h	363;"	d
E1000_LSECTXOCTP	e1000_regs.h	364;"	d
E1000_LSECTXPKTE	e1000_regs.h	361;"	d
E1000_LSECTXPKTP	e1000_regs.h	362;"	d
E1000_LSECTXPN0	e1000_regs.h	386;"	d
E1000_LSECTXPN1	e1000_regs.h	387;"	d
E1000_LSECTXSA	e1000_regs.h	385;"	d
E1000_LSECTXSCH	e1000_regs.h	384;"	d
E1000_LSECTXSCL	e1000_regs.h	383;"	d
E1000_LSECTXUT	e1000_regs.h	360;"	d
E1000_LTRC	e1000_regs.h	632;"	d
E1000_LVMMC	e1000_regs.h	523;"	d
E1000_M88E1112_AUTO_COPPER_BASEX	e1000_defines.h	743;"	d
E1000_M88E1112_AUTO_COPPER_SGMII	e1000_defines.h	742;"	d
E1000_M88E1112_MAC_CTRL_1	e1000_defines.h	745;"	d
E1000_M88E1112_MAC_CTRL_1_MODE_MASK	e1000_defines.h	746;"	d
E1000_M88E1112_MAC_CTRL_1_MODE_SHIFT	e1000_defines.h	747;"	d
E1000_M88E1112_PAGE_ADDR	e1000_defines.h	748;"	d
E1000_M88E1112_STATUS	e1000_defines.h	749;"	d
E1000_M88E1112_STATUS_LINK	e1000_defines.h	744;"	d
E1000_M88E1543_EEE_CTRL_1	e1000_defines.h	769;"	d
E1000_M88E1543_EEE_CTRL_1_MS	e1000_defines.h	770;"	d
E1000_M88E1543_PAGE_ADDR	e1000_defines.h	768;"	d
E1000_MANC	e1000_regs.h	451;"	d
E1000_MANC2H	e1000_regs.h	470;"	d
E1000_MANC2H_PORT_623	e1000_defines.h	167;"	d
E1000_MANC2H_PORT_664	e1000_defines.h	168;"	d
E1000_MANC_ARP_EN	e1000_defines.h	159;"	d
E1000_MANC_ASF_EN	e1000_defines.h	158;"	d
E1000_MANC_BLK_PHY_RST_ON_IDE	e1000_defines.h	161;"	d
E1000_MANC_EN_MAC_ADDR_FILTER	e1000_defines.h	163;"	d
E1000_MANC_EN_MNG2HOST	e1000_defines.h	165;"	d
E1000_MANC_RCV_TCO_EN	e1000_defines.h	160;"	d
E1000_MANC_SMBUS_EN	e1000_defines.h	157;"	d
E1000_MAX	e1000_api.h	152;"	d
E1000_MAX_PHY_ADDR	e1000_phy.h	104;"	d
E1000_MAX_SENSORS	e1000_hw.h	587;"	d
E1000_MAX_SGMII_PHY_REG_ADDR	e1000_defines.h	92;"	d
E1000_MBVFICR	e1000_regs.h	508;"	d
E1000_MBVFICR_VFACK_MASK	e1000_mbx.h	41;"	d
E1000_MBVFICR_VFACK_VF1	e1000_mbx.h	42;"	d
E1000_MBVFICR_VFREQ_MASK	e1000_mbx.h	39;"	d
E1000_MBVFICR_VFREQ_VF1	e1000_mbx.h	40;"	d
E1000_MBVFIMR	e1000_regs.h	509;"	d
E1000_MCC	e1000_regs.h	287;"	d
E1000_MDEF	e1000_regs.h	472;"	d
E1000_MDEF_PORT_623	e1000_defines.h	169;"	d
E1000_MDEF_PORT_664	e1000_defines.h	170;"	d
E1000_MDFB	e1000_regs.h	522;"	d
E1000_MDIC	e1000_regs.h	37;"	d
E1000_MDICNFG	e1000_regs.h	38;"	d
E1000_MDICNFG_COM_MDIO	e1000_defines.h	736;"	d
E1000_MDICNFG_EXT_MDIO	e1000_defines.h	735;"	d
E1000_MDICNFG_PHY_MASK	e1000_defines.h	737;"	d
E1000_MDICNFG_PHY_SHIFT	e1000_defines.h	738;"	d
E1000_MDIC_DEST	e1000_defines.h	1281;"	d
E1000_MDIC_ERROR	e1000_defines.h	1280;"	d
E1000_MDIC_OP_READ	e1000_defines.h	1278;"	d
E1000_MDIC_OP_WRITE	e1000_defines.h	1277;"	d
E1000_MDIC_PHY_MASK	e1000_defines.h	1275;"	d
E1000_MDIC_PHY_SHIFT	e1000_defines.h	1276;"	d
E1000_MDIC_READY	e1000_defines.h	1279;"	d
E1000_MDIC_REG_MASK	e1000_defines.h	1273;"	d
E1000_MDIC_REG_SHIFT	e1000_defines.h	1274;"	d
E1000_MEDIA_PORT_COPPER	e1000_defines.h	740;"	d
E1000_MEDIA_PORT_OTHER	e1000_defines.h	741;"	d
E1000_MGTPDC	e1000_regs.h	320;"	d
E1000_MGTPRC	e1000_regs.h	319;"	d
E1000_MGTPTC	e1000_regs.h	321;"	d
E1000_MMDAAD	e1000_regs.h	194;"	d
E1000_MMDAC	e1000_regs.h	193;"	d
E1000_MMDAC_FUNC_DATA	e1000_defines.h	801;"	d
E1000_MNG_DHCP_COMMAND_TIMEOUT	e1000_manage.h	63;"	d
E1000_MNG_DHCP_COOKIE_LENGTH	e1000_manage.h	61;"	d
E1000_MNG_DHCP_COOKIE_OFFSET	e1000_manage.h	62;"	d
E1000_MNG_DHCP_COOKIE_STATUS_PARSING	e1000_manage.h	65;"	d
E1000_MNG_DHCP_COOKIE_STATUS_VLAN	e1000_manage.h	66;"	d
E1000_MNG_DHCP_TX_PAYLOAD_CMD	e1000_manage.h	64;"	d
E1000_MNG_IAMT_MODE	e1000_manage.h	60;"	d
E1000_MPC	e1000_regs.h	284;"	d
E1000_MPHY_ADDRESS_FNC_OVERRIDE	e1000_phy.h	167;"	d
E1000_MPHY_ADDRESS_MASK	e1000_phy.h	168;"	d
E1000_MPHY_ADDR_CTL	e1000_defines.h	804;"	d
E1000_MPHY_ADDR_CTL_OFFSET_MASK	e1000_defines.h	805;"	d
E1000_MPHY_ADDR_CTRL	e1000_regs.h	45;"	d
E1000_MPHY_BUSY	e1000_phy.h	166;"	d
E1000_MPHY_DATA	e1000_defines.h	806;"	d
E1000_MPHY_DATA	e1000_regs.h	46;"	d
E1000_MPHY_DIS_ACCESS	e1000_phy.h	164;"	d
E1000_MPHY_ENA_ACCESS	e1000_phy.h	165;"	d
E1000_MPHY_PCS_CLK_REG_DIGINELBEN	e1000_defines.h	811;"	d
E1000_MPHY_PCS_CLK_REG_OFFSET	e1000_defines.h	809;"	d
E1000_MPHY_STAT	e1000_regs.h	47;"	d
E1000_MPRC	e1000_regs.h	308;"	d
E1000_MPTC	e1000_regs.h	334;"	d
E1000_MRQC	e1000_regs.h	497;"	d
E1000_MRQC_ENABLE_RSS_4Q	e1000_82575.h	136;"	d
E1000_MRQC_ENABLE_RSS_8Q	e1000_82575.h	142;"	d
E1000_MRQC_ENABLE_VMDQ	e1000_82575.h	137;"	d
E1000_MRQC_ENABLE_VMDQ_RSS_2Q	e1000_82575.h	138;"	d
E1000_MRQC_RSS_FIELD_IPV4	e1000_defines.h	149;"	d
E1000_MRQC_RSS_FIELD_IPV4_TCP	e1000_defines.h	148;"	d
E1000_MRQC_RSS_FIELD_IPV4_UDP	e1000_82575.h	139;"	d
E1000_MRQC_RSS_FIELD_IPV6	e1000_defines.h	151;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP	e1000_defines.h	152;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP_EX	e1000_defines.h	150;"	d
E1000_MRQC_RSS_FIELD_IPV6_UDP	e1000_82575.h	140;"	d
E1000_MRQC_RSS_FIELD_IPV6_UDP_EX	e1000_82575.h	141;"	d
E1000_MRQC_RSS_FIELD_MASK	e1000_defines.h	147;"	d
E1000_MSCTRH	e1000_regs.h	527;"	d
E1000_MSIXBM	e1000_regs.h	501;"	d
E1000_MTA	e1000_regs.h	439;"	d
E1000_NOT_IMPLEMENTED	e1000_defines.h	638;"	d
E1000_NVM_APME_82575	e1000_82575.h	395;"	d
E1000_NVM_CFG_DONE_PORT_0	e1000_defines.h	1046;"	d
E1000_NVM_CFG_DONE_PORT_1	e1000_defines.h	1047;"	d
E1000_NVM_CFG_DONE_PORT_2	e1000_defines.h	1048;"	d
E1000_NVM_CFG_DONE_PORT_3	e1000_defines.h	1049;"	d
E1000_NVM_GRANT_ATTEMPTS	e1000_defines.h	937;"	d
E1000_NVM_POLL_READ	e1000_defines.h	968;"	d
E1000_NVM_POLL_WRITE	e1000_defines.h	967;"	d
E1000_NVM_RW_ADDR_SHIFT	e1000_defines.h	966;"	d
E1000_NVM_RW_REG_DATA	e1000_defines.h	963;"	d
E1000_NVM_RW_REG_DONE	e1000_defines.h	964;"	d
E1000_NVM_RW_REG_START	e1000_defines.h	965;"	d
E1000_O2BGPTC	e1000_regs.h	641;"	d
E1000_O2BSPC	e1000_regs.h	642;"	d
E1000_P2VMAILBOX	e1000_regs.h	530;"	d
E1000_P2VMAILBOX_ACK	e1000_mbx.h	34;"	d
E1000_P2VMAILBOX_PFU	e1000_mbx.h	36;"	d
E1000_P2VMAILBOX_RVFU	e1000_mbx.h	37;"	d
E1000_P2VMAILBOX_STS	e1000_mbx.h	33;"	d
E1000_P2VMAILBOX_VFU	e1000_mbx.h	35;"	d
E1000_PBA	e1000_regs.h	86;"	d
E1000_PBACL	e1000_regs.h	457;"	d
E1000_PBANUM_LENGTH	e1000_defines.h	1074;"	d
E1000_PBA_10K	e1000_defines.h	447;"	d
E1000_PBA_12K	e1000_defines.h	448;"	d
E1000_PBA_14K	e1000_defines.h	449;"	d
E1000_PBA_16K	e1000_defines.h	450;"	d
E1000_PBA_18K	e1000_defines.h	451;"	d
E1000_PBA_20K	e1000_defines.h	452;"	d
E1000_PBA_22K	e1000_defines.h	453;"	d
E1000_PBA_24K	e1000_defines.h	454;"	d
E1000_PBA_26K	e1000_defines.h	455;"	d
E1000_PBA_30K	e1000_defines.h	456;"	d
E1000_PBA_32K	e1000_defines.h	457;"	d
E1000_PBA_34K	e1000_defines.h	458;"	d
E1000_PBA_35K	e1000_defines.h	459;"	d
E1000_PBA_38K	e1000_defines.h	460;"	d
E1000_PBA_40K	e1000_defines.h	461;"	d
E1000_PBA_48K	e1000_defines.h	462;"	d
E1000_PBA_64K	e1000_defines.h	463;"	d
E1000_PBA_8K	e1000_defines.h	446;"	d
E1000_PBA_RXA_MASK	e1000_defines.h	465;"	d
E1000_PBDIAG	e1000_regs.h	129;"	d
E1000_PBRTH	e1000_regs.h	121;"	d
E1000_PBRWAC	e1000_regs.h	132;"	d
E1000_PBRWAC_PBE	e1000_82575.h	433;"	d
E1000_PBRWAC_WALPB	e1000_82575.h	432;"	d
E1000_PBS	e1000_regs.h	87;"	d
E1000_PBSLAC	e1000_regs.h	258;"	d
E1000_PBSLAD	e1000_regs.h	259;"	d
E1000_PBS_16K	e1000_defines.h	467;"	d
E1000_PCIEERRSTS	e1000_regs.h	619;"	d
E1000_PCIEMISC	e1000_regs.h	616;"	d
E1000_PCIEMISC_LX_DECISION	e1000_defines.h	1349;"	d
E1000_PCS_ANADV	e1000_regs.h	432;"	d
E1000_PCS_CFG0	e1000_regs.h	415;"	d
E1000_PCS_CFG_IGN_SD	igb.h	840;"	d
E1000_PCS_CFG_PCS_EN	e1000_defines.h	273;"	d
E1000_PCS_LCTL	e1000_regs.h	416;"	d
E1000_PCS_LCTL_AN_ENABLE	e1000_defines.h	282;"	d
E1000_PCS_LCTL_AN_RESTART	e1000_defines.h	283;"	d
E1000_PCS_LCTL_AN_TIMEOUT	e1000_defines.h	284;"	d
E1000_PCS_LCTL_FDV_FULL	e1000_defines.h	278;"	d
E1000_PCS_LCTL_FLV_LINK_UP	e1000_defines.h	274;"	d
E1000_PCS_LCTL_FORCE_FCTRL	e1000_defines.h	281;"	d
E1000_PCS_LCTL_FORCE_LINK	e1000_defines.h	280;"	d
E1000_PCS_LCTL_FSD	e1000_defines.h	279;"	d
E1000_PCS_LCTL_FSV_10	e1000_defines.h	275;"	d
E1000_PCS_LCTL_FSV_100	e1000_defines.h	276;"	d
E1000_PCS_LCTL_FSV_1000	e1000_defines.h	277;"	d
E1000_PCS_LPAB	e1000_regs.h	433;"	d
E1000_PCS_LPABNP	e1000_regs.h	435;"	d
E1000_PCS_LSTAT	e1000_regs.h	417;"	d
E1000_PCS_LSTS_AN_COMPLETE	e1000_defines.h	292;"	d
E1000_PCS_LSTS_DUPLEX_FULL	e1000_defines.h	290;"	d
E1000_PCS_LSTS_LINK_OK	e1000_defines.h	287;"	d
E1000_PCS_LSTS_SPEED_100	e1000_defines.h	288;"	d
E1000_PCS_LSTS_SPEED_1000	e1000_defines.h	289;"	d
E1000_PCS_LSTS_SYNK_OK	e1000_defines.h	291;"	d
E1000_PCS_NPTX	e1000_regs.h	434;"	d
E1000_PCS_STATUS_ADDR_I354	e1000_defines.h	776;"	d
E1000_PCS_STATUS_DEV_I354	e1000_defines.h	775;"	d
E1000_PCS_STATUS_RX_LPI_RCVD	e1000_defines.h	777;"	d
E1000_PCS_STATUS_TX_LPI_RCVD	e1000_defines.h	778;"	d
E1000_PFCTOP	e1000_regs.h	604;"	d
E1000_PFVFGORC	e1000_regs.h	351;"	d
E1000_PFVFGORLBC	e1000_regs.h	356;"	d
E1000_PFVFGOTC	e1000_regs.h	352;"	d
E1000_PFVFGOTLBC	e1000_regs.h	357;"	d
E1000_PFVFGPRC	e1000_regs.h	349;"	d
E1000_PFVFGPRLBC	e1000_regs.h	354;"	d
E1000_PFVFGPTC	e1000_regs.h	350;"	d
E1000_PFVFGPTLBC	e1000_regs.h	355;"	d
E1000_PFVFMPRC	e1000_regs.h	353;"	d
E1000_PF_CONTROL_MSG	e1000_mbx.h	72;"	d
E1000_PHY_CTRL	e1000_regs.h	85;"	d
E1000_PHY_CTRL_D0A_LPLU	e1000_defines.h	438;"	d
E1000_PHY_CTRL_GBE_DISABLE	e1000_defines.h	441;"	d
E1000_PHY_CTRL_NOND0A_GBE_DISABLE	e1000_defines.h	440;"	d
E1000_PHY_CTRL_NOND0A_LPLU	e1000_defines.h	439;"	d
E1000_PPHY_CTRL	e1000_regs.h	48;"	d
E1000_PQGPTC	e1000_regs.h	188;"	d
E1000_PRC1023	e1000_regs.h	304;"	d
E1000_PRC127	e1000_regs.h	301;"	d
E1000_PRC1522	e1000_regs.h	305;"	d
E1000_PRC255	e1000_regs.h	302;"	d
E1000_PRC511	e1000_regs.h	303;"	d
E1000_PRC64	e1000_regs.h	300;"	d
E1000_PROXYFC	e1000_regs.h	622;"	d
E1000_PROXYFC_ARP	e1000_defines.h	1364;"	d
E1000_PROXYFC_ARP_DIRECTED	e1000_defines.h	1360;"	d
E1000_PROXYFC_BC	e1000_defines.h	1359;"	d
E1000_PROXYFC_D0	e1000_defines.h	1356;"	d
E1000_PROXYFC_EX	e1000_defines.h	1357;"	d
E1000_PROXYFC_IPV4	e1000_defines.h	1361;"	d
E1000_PROXYFC_IPV6	e1000_defines.h	1362;"	d
E1000_PROXYFC_MC	e1000_defines.h	1358;"	d
E1000_PROXYFC_NS	e1000_defines.h	1363;"	d
E1000_PROXYS	e1000_regs.h	621;"	d
E1000_PROXYS_CLEAR	e1000_defines.h	1366;"	d
E1000_PSRCTL	e1000_regs.h	115;"	d
E1000_PSRCTL_BSIZE0_MASK	e1000_defines.h	220;"	d
E1000_PSRCTL_BSIZE0_SHIFT	e1000_defines.h	225;"	d
E1000_PSRCTL_BSIZE1_MASK	e1000_defines.h	221;"	d
E1000_PSRCTL_BSIZE1_SHIFT	e1000_defines.h	226;"	d
E1000_PSRCTL_BSIZE2_MASK	e1000_defines.h	222;"	d
E1000_PSRCTL_BSIZE2_SHIFT	e1000_defines.h	227;"	d
E1000_PSRCTL_BSIZE3_MASK	e1000_defines.h	223;"	d
E1000_PSRCTL_BSIZE3_SHIFT	e1000_defines.h	228;"	d
E1000_PSRTYPE	e1000_regs.h	245;"	d
E1000_PTC1023	e1000_regs.h	332;"	d
E1000_PTC127	e1000_regs.h	329;"	d
E1000_PTC1522	e1000_regs.h	333;"	d
E1000_PTC255	e1000_regs.h	330;"	d
E1000_PTC511	e1000_regs.h	331;"	d
E1000_PTC64	e1000_regs.h	328;"	d
E1000_QDE	e1000_regs.h	513;"	d
E1000_RA	e1000_regs.h	440;"	d
E1000_RA2	e1000_regs.h	441;"	d
E1000_RADV	e1000_regs.h	134;"	d
E1000_RAH	e1000_regs.h	248;"	d
E1000_RAH_AV	e1000_defines.h	619;"	d
E1000_RAH_MAC_ADDR_LEN	e1000_defines.h	621;"	d
E1000_RAH_POOL_1	e1000_defines.h	623;"	d
E1000_RAH_QUEUE_MASK_82575	e1000_defines.h	622;"	d
E1000_RAID	e1000_regs.h	243;"	d
E1000_RAL	e1000_regs.h	246;"	d
E1000_RAL_MAC_ADDR_LEN	e1000_defines.h	620;"	d
E1000_RAR_ENTRIES	e1000_defines.h	618;"	d
E1000_RAR_ENTRIES_82575	e1000_82575.h	45;"	d
E1000_RAR_ENTRIES_82576	e1000_82575.h	46;"	d
E1000_RAR_ENTRIES_82580	e1000_82575.h	47;"	d
E1000_RAR_ENTRIES_I350	e1000_82575.h	48;"	d
E1000_RCTL	e1000_regs.h	63;"	d
E1000_RCTL_BAM	e1000_defines.h	186;"	d
E1000_RCTL_BSEX	e1000_defines.h	201;"	d
E1000_RCTL_CFI	e1000_defines.h	198;"	d
E1000_RCTL_CFIEN	e1000_defines.h	197;"	d
E1000_RCTL_DPF	e1000_defines.h	199;"	d
E1000_RCTL_DTYP_PS	e1000_defines.h	182;"	d
E1000_RCTL_EN	e1000_defines.h	174;"	d
E1000_RCTL_LBM_MAC	e1000_defines.h	180;"	d
E1000_RCTL_LBM_NO	e1000_defines.h	179;"	d
E1000_RCTL_LBM_TCVR	e1000_defines.h	181;"	d
E1000_RCTL_LPE	e1000_defines.h	178;"	d
E1000_RCTL_MO_3	e1000_defines.h	185;"	d
E1000_RCTL_MO_SHIFT	e1000_defines.h	184;"	d
E1000_RCTL_MPE	e1000_defines.h	177;"	d
E1000_RCTL_PMCF	e1000_defines.h	200;"	d
E1000_RCTL_RDMTS_HALF	e1000_defines.h	183;"	d
E1000_RCTL_RST	e1000_defines.h	173;"	d
E1000_RCTL_SBP	e1000_defines.h	175;"	d
E1000_RCTL_SECRC	e1000_defines.h	202;"	d
E1000_RCTL_SZ_1024	e1000_defines.h	189;"	d
E1000_RCTL_SZ_16384	e1000_defines.h	193;"	d
E1000_RCTL_SZ_2048	e1000_defines.h	188;"	d
E1000_RCTL_SZ_256	e1000_defines.h	191;"	d
E1000_RCTL_SZ_4096	e1000_defines.h	195;"	d
E1000_RCTL_SZ_512	e1000_defines.h	190;"	d
E1000_RCTL_SZ_8192	e1000_defines.h	194;"	d
E1000_RCTL_UPE	e1000_defines.h	176;"	d
E1000_RCTL_VFE	e1000_defines.h	196;"	d
E1000_RDBAH	e1000_regs.h	205;"	d
E1000_RDBAL	e1000_regs.h	203;"	d
E1000_RDFH	e1000_regs.h	116;"	d
E1000_RDFHS	e1000_regs.h	118;"	d
E1000_RDFPC	e1000_regs.h	120;"	d
E1000_RDFT	e1000_regs.h	117;"	d
E1000_RDFTS	e1000_regs.h	119;"	d
E1000_RDH	e1000_regs.h	211;"	d
E1000_RDLEN	e1000_regs.h	207;"	d
E1000_RDPUAD	e1000_regs.h	125;"	d
E1000_RDPUCTL	e1000_regs.h	128;"	d
E1000_RDPUMB	e1000_regs.h	124;"	d
E1000_RDPURD	e1000_regs.h	127;"	d
E1000_RDPUWD	e1000_regs.h	126;"	d
E1000_RDT	e1000_regs.h	216;"	d
E1000_RDTR	e1000_regs.h	133;"	d
E1000_READ_FLASH_REG	e1000_osdep.h	128;"	d
E1000_READ_FLASH_REG16	e1000_osdep.h	130;"	d
E1000_READ_REG	e1000_osdep.h	93;"	d
E1000_READ_REG_ARRAY	e1000_osdep.h	98;"	d
E1000_READ_REG_ARRAY_BYTE	e1000_osdep.h	113;"	d
E1000_READ_REG_ARRAY_DWORD	e1000_osdep.h	101;"	d
E1000_READ_REG_ARRAY_WORD	e1000_osdep.h	107;"	d
E1000_REGISTER	e1000_osdep.h	88;"	d
E1000_REGISTER_SET_SIZE	e1000_regs.h	39;"	d
E1000_RETA	e1000_regs.h	502;"	d
E1000_REVISION_0	e1000_hw.h	76;"	d
E1000_REVISION_1	e1000_hw.h	77;"	d
E1000_REVISION_2	e1000_hw.h	78;"	d
E1000_REVISION_3	e1000_hw.h	79;"	d
E1000_REVISION_4	e1000_hw.h	80;"	d
E1000_RFC	e1000_regs.h	316;"	d
E1000_RFCTL	e1000_regs.h	438;"	d
E1000_RFCTL_ACK_DIS	e1000_defines.h	396;"	d
E1000_RFCTL_EXTEN	e1000_defines.h	397;"	d
E1000_RFCTL_IPV6_EX_DIS	e1000_defines.h	398;"	d
E1000_RFCTL_LEF	e1000_defines.h	400;"	d
E1000_RFCTL_NEW_IPV6_EXT_DIS	e1000_defines.h	399;"	d
E1000_RFCTL_NFSR_DIS	e1000_defines.h	395;"	d
E1000_RFCTL_NFSW_DIS	e1000_defines.h	394;"	d
E1000_RJC	e1000_regs.h	318;"	d
E1000_RLEC	e1000_regs.h	294;"	d
E1000_RLPIC	e1000_regs.h	636;"	d
E1000_RLPML	e1000_regs.h	437;"	d
E1000_RNBC	e1000_regs.h	314;"	d
E1000_ROC	e1000_regs.h	317;"	d
E1000_RPLOLR	e1000_regs.h	516;"	d
E1000_RPLOLR_STRCRC	e1000_82575.h	451;"	d
E1000_RPLOLR_STRVLAN	e1000_82575.h	450;"	d
E1000_RPTHC	e1000_regs.h	422;"	d
E1000_RQDPC	e1000_regs.h	220;"	d
E1000_RSRPD	e1000_regs.h	242;"	d
E1000_RSSIM	e1000_regs.h	504;"	d
E1000_RSSIR	e1000_regs.h	505;"	d
E1000_RSSRK	e1000_regs.h	503;"	d
E1000_RTRBCNCR	e1000_regs.h	602;"	d
E1000_RTRPCS	e1000_regs.h	569;"	d
E1000_RTRPTCRC	e1000_regs.h	577;"	d
E1000_RTRPTCRM	e1000_regs.h	589;"	d
E1000_RTRPTCRS	e1000_regs.h	587;"	d
E1000_RTRUP2TC	e1000_regs.h	570;"	d
E1000_RTTBCNACH	e1000_regs.h	606;"	d
E1000_RTTBCNACL	e1000_regs.h	607;"	d
E1000_RTTBCNCP	e1000_regs.h	601;"	d
E1000_RTTBCNCR	e1000_regs.h	599;"	d
E1000_RTTBCNIDX	e1000_regs.h	605;"	d
E1000_RTTBCNRC	e1000_regs.h	597;"	d
E1000_RTTBCNRC_RF_DEC_MASK	e1000_defines.h	1314;"	d
E1000_RTTBCNRC_RF_INT_MASK	e1000_defines.h	1316;"	d
E1000_RTTBCNRC_RF_INT_SHIFT	e1000_defines.h	1315;"	d
E1000_RTTBCNRC_RS_ENA	e1000_defines.h	1313;"	d
E1000_RTTBCNRD	e1000_regs.h	603;"	d
E1000_RTTBCNRM	e1000_regs.h	593;"	d
E1000_RTTBCNRS	e1000_regs.h	598;"	d
E1000_RTTBCNTG	e1000_regs.h	600;"	d
E1000_RTTDCS	e1000_regs.h	567;"	d
E1000_RTTDQSEL	e1000_regs.h	594;"	d
E1000_RTTDTCRC	e1000_regs.h	573;"	d
E1000_RTTDTCRM	e1000_regs.h	581;"	d
E1000_RTTDTCRS	e1000_regs.h	579;"	d
E1000_RTTDVMRC	e1000_regs.h	595;"	d
E1000_RTTDVMRM	e1000_regs.h	591;"	d
E1000_RTTDVMRS	e1000_regs.h	596;"	d
E1000_RTTPCS	e1000_regs.h	568;"	d
E1000_RTTPTCRC	e1000_regs.h	575;"	d
E1000_RTTPTCRM	e1000_regs.h	585;"	d
E1000_RTTPTCRS	e1000_regs.h	583;"	d
E1000_RTTUP2TC	e1000_regs.h	571;"	d
E1000_RUC	e1000_regs.h	315;"	d
E1000_RXCSUM	e1000_regs.h	436;"	d
E1000_RXCSUM_CRCOFL	e1000_defines.h	389;"	d
E1000_RXCSUM_IPOFL	e1000_defines.h	387;"	d
E1000_RXCSUM_IPPCSE	e1000_defines.h	390;"	d
E1000_RXCSUM_PCSD	e1000_defines.h	391;"	d
E1000_RXCSUM_TUOFL	e1000_defines.h	388;"	d
E1000_RXCTL	e1000_regs.h	213;"	d
E1000_RXCW	e1000_regs.h	66;"	d
E1000_RXCW_C	e1000_defines.h	675;"	d
E1000_RXCW_CW	e1000_defines.h	673;"	d
E1000_RXCW_IV	e1000_defines.h	674;"	d
E1000_RXCW_SYNCH	e1000_defines.h	676;"	d
E1000_RXDADV_ERR_HBO	e1000_82575.h	224;"	d
E1000_RXDADV_HDRBUFLEN_MASK	e1000_82575.h	218;"	d
E1000_RXDADV_HDRBUFLEN_SHIFT	e1000_82575.h	219;"	d
E1000_RXDADV_IPSEC_ERROR_AUTHENTICATION_FAILED	e1000_82575.h	268;"	d
E1000_RXDADV_IPSEC_ERROR_BIT_MASK	e1000_82575.h	265;"	d
E1000_RXDADV_IPSEC_ERROR_INVALID_LENGTH	e1000_82575.h	267;"	d
E1000_RXDADV_IPSEC_ERROR_INVALID_PROTOCOL	e1000_82575.h	266;"	d
E1000_RXDADV_IPSEC_STATUS_SECP	e1000_82575.h	264;"	d
E1000_RXDADV_LNKSEC_ERROR_BAD_SIG	e1000_82575.h	262;"	d
E1000_RXDADV_LNKSEC_ERROR_BIT_MASK	e1000_82575.h	259;"	d
E1000_RXDADV_LNKSEC_ERROR_NO_SA_MATCH	e1000_82575.h	260;"	d
E1000_RXDADV_LNKSEC_ERROR_REPLAY_ERROR	e1000_82575.h	261;"	d
E1000_RXDADV_LNKSEC_STATUS_SECP	e1000_82575.h	258;"	d
E1000_RXDADV_PKTTYPE_ETQF	e1000_82575.h	252;"	d
E1000_RXDADV_PKTTYPE_ETQF_MASK	e1000_82575.h	253;"	d
E1000_RXDADV_PKTTYPE_ETQF_SHIFT	e1000_82575.h	254;"	d
E1000_RXDADV_PKTTYPE_IPSEC_AH	e1000_82575.h	250;"	d
E1000_RXDADV_PKTTYPE_IPSEC_ESP	e1000_82575.h	249;"	d
E1000_RXDADV_PKTTYPE_IPV4	e1000_82575.h	240;"	d
E1000_RXDADV_PKTTYPE_IPV4_EX	e1000_82575.h	241;"	d
E1000_RXDADV_PKTTYPE_IPV6	e1000_82575.h	242;"	d
E1000_RXDADV_PKTTYPE_IPV6_EX	e1000_82575.h	243;"	d
E1000_RXDADV_PKTTYPE_LINKSEC	e1000_82575.h	251;"	d
E1000_RXDADV_PKTTYPE_NFS	e1000_82575.h	247;"	d
E1000_RXDADV_PKTTYPE_NONE	e1000_82575.h	239;"	d
E1000_RXDADV_PKTTYPE_SCTP	e1000_82575.h	246;"	d
E1000_RXDADV_PKTTYPE_TCP	e1000_82575.h	244;"	d
E1000_RXDADV_PKTTYPE_UDP	e1000_82575.h	245;"	d
E1000_RXDADV_RSSTYPE_IPV4	e1000_82575.h	229;"	d
E1000_RXDADV_RSSTYPE_IPV4_TCP	e1000_82575.h	228;"	d
E1000_RXDADV_RSSTYPE_IPV4_UDP	e1000_82575.h	234;"	d
E1000_RXDADV_RSSTYPE_IPV6	e1000_82575.h	232;"	d
E1000_RXDADV_RSSTYPE_IPV6_EX	e1000_82575.h	231;"	d
E1000_RXDADV_RSSTYPE_IPV6_TCP	e1000_82575.h	230;"	d
E1000_RXDADV_RSSTYPE_IPV6_TCP_EX	e1000_82575.h	233;"	d
E1000_RXDADV_RSSTYPE_IPV6_UDP	e1000_82575.h	235;"	d
E1000_RXDADV_RSSTYPE_IPV6_UDP_EX	e1000_82575.h	236;"	d
E1000_RXDADV_RSSTYPE_MASK	e1000_82575.h	216;"	d
E1000_RXDADV_RSSTYPE_NONE	e1000_82575.h	227;"	d
E1000_RXDADV_RSSTYPE_SHIFT	e1000_82575.h	217;"	d
E1000_RXDADV_SPH	e1000_82575.h	221;"	d
E1000_RXDADV_SPLITHEADER_EN	e1000_82575.h	220;"	d
E1000_RXDADV_STAT_TS	e1000_82575.h	222;"	d
E1000_RXDADV_STAT_TSIP	e1000_82575.h	223;"	d
E1000_RXDCTL	e1000_regs.h	218;"	d
E1000_RXDCTL_QUEUE_ENABLE	e1000_82575.h	340;"	d
E1000_RXDCTL_SWFLSH	e1000_82575.h	341;"	d
E1000_RXDEXT_ERR_FRAME_ERR_MASK	e1000_defines.h	140;"	d
E1000_RXDEXT_STATERR_CE	e1000_defines.h	123;"	d
E1000_RXDEXT_STATERR_CXE	e1000_defines.h	126;"	d
E1000_RXDEXT_STATERR_IPE	e1000_defines.h	128;"	d
E1000_RXDEXT_STATERR_LB	e1000_defines.h	122;"	d
E1000_RXDEXT_STATERR_RXE	e1000_defines.h	129;"	d
E1000_RXDEXT_STATERR_SE	e1000_defines.h	124;"	d
E1000_RXDEXT_STATERR_SEQ	e1000_defines.h	125;"	d
E1000_RXDEXT_STATERR_TCPE	e1000_defines.h	127;"	d
E1000_RXDEXT_STATERR_TST	e1000_defines.h	121;"	d
E1000_RXDPS_HDRSTAT_HDRSP	e1000_defines.h	154;"	d
E1000_RXD_ERR_CE	e1000_defines.h	112;"	d
E1000_RXD_ERR_CXE	e1000_defines.h	115;"	d
E1000_RXD_ERR_FRAME_ERR_MASK	e1000_defines.h	132;"	d
E1000_RXD_ERR_IPE	e1000_defines.h	117;"	d
E1000_RXD_ERR_RXE	e1000_defines.h	118;"	d
E1000_RXD_ERR_SE	e1000_defines.h	113;"	d
E1000_RXD_ERR_SEQ	e1000_defines.h	114;"	d
E1000_RXD_ERR_TCPE	e1000_defines.h	116;"	d
E1000_RXD_SPC_VLAN_MASK	e1000_defines.h	119;"	d
E1000_RXD_STAT_DD	e1000_defines.h	101;"	d
E1000_RXD_STAT_DYNINT	e1000_defines.h	111;"	d
E1000_RXD_STAT_EOP	e1000_defines.h	102;"	d
E1000_RXD_STAT_IPCS	e1000_defines.h	107;"	d
E1000_RXD_STAT_IPIDV	e1000_defines.h	109;"	d
E1000_RXD_STAT_IXSM	e1000_defines.h	103;"	d
E1000_RXD_STAT_PIF	e1000_defines.h	108;"	d
E1000_RXD_STAT_TCPCS	e1000_defines.h	106;"	d
E1000_RXD_STAT_UDPCS	e1000_defines.h	105;"	d
E1000_RXD_STAT_UDPV	e1000_defines.h	110;"	d
E1000_RXD_STAT_VP	e1000_defines.h	104;"	d
E1000_RXERRC	e1000_regs.h	283;"	d
E1000_RXPBS	e1000_regs.h	130;"	d
E1000_RXPBS_CFG_TS_EN	e1000_defines.h	1351;"	d
E1000_RXPBS_SIZE_I210_MASK	e1000_defines.h	1352;"	d
E1000_RXPBS_SIZE_MASK_82576	e1000_82575.h	467;"	d
E1000_RXSATRH	e1000_regs.h	545;"	d
E1000_RXSATRL	e1000_regs.h	544;"	d
E1000_RXSTMPH	e1000_regs.h	543;"	d
E1000_RXSTMPL	e1000_regs.h	542;"	d
E1000_SAQF	e1000_regs.h	559;"	d
E1000_SCC	e1000_regs.h	285;"	d
E1000_SCCRL	e1000_regs.h	525;"	d
E1000_SCCTL	e1000_regs.h	476;"	d
E1000_SCTL	e1000_regs.h	51;"	d
E1000_SCTL_DISABLE_SERDES_LOOPBACK	e1000_defines.h	383;"	d
E1000_SCTL_ENABLE_SERDES_LOOPBACK	e1000_defines.h	384;"	d
E1000_SCVPC	e1000_regs.h	430;"	d
E1000_SEC	e1000_regs.h	292;"	d
E1000_SFF_ETH_FLAGS_OFFSET	e1000_phy.h	237;"	d
E1000_SFF_IDENTIFIER_OFFSET	e1000_phy.h	233;"	d
E1000_SFF_IDENTIFIER_SFF	e1000_phy.h	234;"	d
E1000_SFF_IDENTIFIER_SFP	e1000_phy.h	235;"	d
E1000_SFF_VENDOR_OUI_AVAGO	e1000_phy.h	253;"	d
E1000_SFF_VENDOR_OUI_FTL	e1000_phy.h	252;"	d
E1000_SFF_VENDOR_OUI_INTEL	e1000_phy.h	254;"	d
E1000_SFF_VENDOR_OUI_TYCO	e1000_phy.h	251;"	d
E1000_SHRAH	e1000_regs.h	251;"	d
E1000_SHRAL	e1000_regs.h	250;"	d
E1000_SPQF	e1000_regs.h	561;"	d
E1000_SRRCTL	e1000_regs.h	209;"	d
E1000_SRRCTL_BSIZEHDRSIZE_MASK	e1000_82575.h	118;"	d
E1000_SRRCTL_BSIZEHDRSIZE_SHIFT	e1000_82575.h	119;"	d
E1000_SRRCTL_BSIZEHDR_MASK	e1000_82575.h	131;"	d
E1000_SRRCTL_BSIZEPKT_MASK	e1000_82575.h	130;"	d
E1000_SRRCTL_BSIZEPKT_SHIFT	e1000_82575.h	117;"	d
E1000_SRRCTL_DESCTYPE_ADV_ONEBUF	e1000_82575.h	121;"	d
E1000_SRRCTL_DESCTYPE_HDR_REPLICATION	e1000_82575.h	124;"	d
E1000_SRRCTL_DESCTYPE_HDR_REPLICATION_LARGE_PKT	e1000_82575.h	125;"	d
E1000_SRRCTL_DESCTYPE_HDR_SPLIT	e1000_82575.h	122;"	d
E1000_SRRCTL_DESCTYPE_HDR_SPLIT_ALWAYS	e1000_82575.h	123;"	d
E1000_SRRCTL_DESCTYPE_LEGACY	e1000_82575.h	120;"	d
E1000_SRRCTL_DESCTYPE_MASK	e1000_82575.h	126;"	d
E1000_SRRCTL_DROP_EN	e1000_82575.h	128;"	d
E1000_SRRCTL_TIMESTAMP	e1000_82575.h	127;"	d
E1000_SRWR	e1000_regs.h	137;"	d
E1000_SSVPC	e1000_regs.h	401;"	d
E1000_STATUS	e1000_regs.h	32;"	d
E1000_STATUS_2P5_SKU	e1000_defines.h	308;"	d
E1000_STATUS_2P5_SKU_OVER	e1000_defines.h	309;"	d
E1000_STATUS_FD	e1000_defines.h	295;"	d
E1000_STATUS_FUNC_1	e1000_defines.h	299;"	d
E1000_STATUS_FUNC_MASK	e1000_defines.h	297;"	d
E1000_STATUS_FUNC_SHIFT	e1000_defines.h	298;"	d
E1000_STATUS_GIO_MASTER_ENABLE	e1000_defines.h	307;"	d
E1000_STATUS_LAN_ID_MASK	e1000_defines.h	1373;"	d
E1000_STATUS_LAN_ID_OFFSET	e1000_defines.h	1375;"	d
E1000_STATUS_LAN_INIT_DONE	e1000_defines.h	305;"	d
E1000_STATUS_LU	e1000_defines.h	296;"	d
E1000_STATUS_PHYRA	e1000_defines.h	306;"	d
E1000_STATUS_SPEED_10	e1000_defines.h	302;"	d
E1000_STATUS_SPEED_100	e1000_defines.h	303;"	d
E1000_STATUS_SPEED_1000	e1000_defines.h	304;"	d
E1000_STATUS_SPEED_MASK	e1000_defines.h	301;"	d
E1000_STATUS_TXOFF	e1000_defines.h	300;"	d
E1000_STAT_DEV_RST_SET	e1000_82575.h	50;"	d
E1000_STM_OPCODE	e1000_i210.h	48;"	d
E1000_STM_OPCODE	e1000_nvm.h	73;"	d
E1000_SUCCESS	e1000_defines.h	626;"	d
E1000_SWDSTS	e1000_regs.h	103;"	d
E1000_SWFW_CSR_SM	e1000_defines.h	234;"	d
E1000_SWFW_EEP_SM	e1000_defines.h	231;"	d
E1000_SWFW_PHY0_SM	e1000_defines.h	232;"	d
E1000_SWFW_PHY1_SM	e1000_defines.h	233;"	d
E1000_SWFW_PHY2_SM	e1000_defines.h	235;"	d
E1000_SWFW_PHY3_SM	e1000_defines.h	236;"	d
E1000_SWFW_SW_MNG_SM	e1000_defines.h	237;"	d
E1000_SWPBS	e1000_regs.h	507;"	d
E1000_SWSM	e1000_regs.h	484;"	d
E1000_SWSM2	e1000_regs.h	487;"	d
E1000_SWSM2_LOCK	e1000_defines.h	480;"	d
E1000_SWSM_DRV_LOAD	e1000_defines.h	478;"	d
E1000_SWSM_SMBI	e1000_defines.h	476;"	d
E1000_SWSM_SWESMBI	e1000_defines.h	477;"	d
E1000_SW_FW_SYNC	e1000_regs.h	473;"	d
E1000_SW_SYNCH_MB	e1000_82575.h	49;"	d
E1000_SYMERRS	e1000_regs.h	282;"	d
E1000_SYNQF	e1000_regs.h	564;"	d
E1000_SYSTIMH	e1000_regs.h	549;"	d
E1000_SYSTIML	e1000_regs.h	548;"	d
E1000_SYSTIMR	e1000_regs.h	554;"	d
E1000_TADV	e1000_regs.h	279;"	d
E1000_TARC	e1000_regs.h	241;"	d
E1000_TARC0_ENABLE	e1000_defines.h	380;"	d
E1000_TCPTIMER	e1000_regs.h	105;"	d
E1000_TCPTIMER_COUNT_ENABLE	e1000_defines.h	522;"	d
E1000_TCPTIMER_COUNT_FINISH	e1000_defines.h	523;"	d
E1000_TCPTIMER_KS	e1000_defines.h	521;"	d
E1000_TCPTIMER_LOOP	e1000_defines.h	524;"	d
E1000_TCTL	e1000_regs.h	77;"	d
E1000_TCTL_COLD	e1000_defines.h	375;"	d
E1000_TCTL_CT	e1000_defines.h	374;"	d
E1000_TCTL_EN	e1000_defines.h	372;"	d
E1000_TCTL_EXT	e1000_regs.h	78;"	d
E1000_TCTL_EXT_COLD	e1000_82575.h	453;"	d
E1000_TCTL_EXT_COLD_SHIFT	e1000_82575.h	454;"	d
E1000_TCTL_MULR	e1000_defines.h	377;"	d
E1000_TCTL_PSP	e1000_defines.h	373;"	d
E1000_TCTL_RTLC	e1000_defines.h	376;"	d
E1000_TDBAH	e1000_regs.h	224;"	d
E1000_TDBAL	e1000_regs.h	222;"	d
E1000_TDFH	e1000_regs.h	263;"	d
E1000_TDFHS	e1000_regs.h	265;"	d
E1000_TDFPC	e1000_regs.h	267;"	d
E1000_TDFT	e1000_regs.h	264;"	d
E1000_TDFTS	e1000_regs.h	266;"	d
E1000_TDH	e1000_regs.h	228;"	d
E1000_TDLEN	e1000_regs.h	226;"	d
E1000_TDPUAD	e1000_regs.h	269;"	d
E1000_TDPUCTL	e1000_regs.h	272;"	d
E1000_TDPUMB	e1000_regs.h	268;"	d
E1000_TDPURD	e1000_regs.h	271;"	d
E1000_TDPUWD	e1000_regs.h	270;"	d
E1000_TDT	e1000_regs.h	233;"	d
E1000_TDWBAH	e1000_regs.h	239;"	d
E1000_TDWBAL	e1000_regs.h	237;"	d
E1000_THHIGHTC	e1000_regs.h	627;"	d
E1000_THLOWTC	e1000_regs.h	625;"	d
E1000_THMIDTC	e1000_regs.h	626;"	d
E1000_THMJT	e1000_regs.h	624;"	d
E1000_THSTAT	e1000_regs.h	628;"	d
E1000_THSTAT_HIGH_EVENT	e1000_defines.h	753;"	d
E1000_THSTAT_LINK_THROTTLE	e1000_defines.h	755;"	d
E1000_THSTAT_LOW_EVENT	e1000_defines.h	751;"	d
E1000_THSTAT_MID_EVENT	e1000_defines.h	752;"	d
E1000_THSTAT_PWR_DOWN	e1000_defines.h	754;"	d
E1000_TIDV	e1000_regs.h	278;"	d
E1000_TIMADJH	e1000_regs.h	552;"	d
E1000_TIMADJL	e1000_regs.h	551;"	d
E1000_TIMINCA	e1000_regs.h	550;"	d
E1000_TIMINCA_16NS_SHIFT	e1000_defines.h	710;"	d
E1000_TIMINCA_INCPERIOD_SHIFT	e1000_defines.h	711;"	d
E1000_TIMINCA_INCVALUE_MASK	e1000_defines.h	712;"	d
E1000_TIPG	e1000_regs.h	79;"	d
E1000_TIPG_IPGR1_SHIFT	e1000_defines.h	415;"	d
E1000_TIPG_IPGR2_SHIFT	e1000_defines.h	419;"	d
E1000_TIPG_IPGT_MASK	e1000_defines.h	412;"	d
E1000_TLPIC	e1000_regs.h	635;"	d
E1000_TNCRS	e1000_regs.h	291;"	d
E1000_TORH	e1000_regs.h	323;"	d
E1000_TORL	e1000_regs.h	322;"	d
E1000_TOTH	e1000_regs.h	325;"	d
E1000_TOTL	e1000_regs.h	324;"	d
E1000_TPR	e1000_regs.h	326;"	d
E1000_TPT	e1000_regs.h	327;"	d
E1000_TQAVARBCTRL_QUEUE_PRI	e1000_regs.h	178;"	d
E1000_TQAVCC_IDLE_SLOPE	e1000_regs.h	183;"	d
E1000_TQAVCC_KEEP_CREDITS	e1000_regs.h	184;"	d
E1000_TQAVCC_QUEUE_MODE	e1000_regs.h	185;"	d
E1000_TQAVCTRL_FETCH_ARB	e1000_regs.h	158;"	d
E1000_TQAVCTRL_FETCH_TIMER_DELTA	e1000_regs.h	169;"	d
E1000_TQAVCTRL_FETCH_TIMER_DELTA_OFFSET	e1000_regs.h	168;"	d
E1000_TQAVCTRL_FETCH_TIMER_ENABLE	e1000_regs.h	160;"	d
E1000_TQAVCTRL_LAUNCH_ARB	e1000_regs.h	162;"	d
E1000_TQAVCTRL_LAUNCH_TIMER_ENABLE	e1000_regs.h	164;"	d
E1000_TQAVCTRL_MODE	e1000_regs.h	156;"	d
E1000_TQAVCTRL_SP_WAIT_SR	e1000_regs.h	166;"	d
E1000_TSAUXC	e1000_regs.h	553;"	d
E1000_TSCTC	e1000_regs.h	336;"	d
E1000_TSCTFC	e1000_regs.h	337;"	d
E1000_TSICR	e1000_regs.h	555;"	d
E1000_TSICR_TXTS	e1000_defines.h	714;"	d
E1000_TSIM	e1000_regs.h	556;"	d
E1000_TSIM_TXTS	e1000_defines.h	715;"	d
E1000_TSYNCRXCFG	e1000_regs.h	541;"	d
E1000_TSYNCRXCFG_PTP_V1_CTRLT_MASK	e1000_defines.h	691;"	d
E1000_TSYNCRXCFG_PTP_V1_DELAY_REQ_MESSAGE	e1000_defines.h	693;"	d
E1000_TSYNCRXCFG_PTP_V1_DELAY_RESP_MESSAGE	e1000_defines.h	695;"	d
E1000_TSYNCRXCFG_PTP_V1_FOLLOWUP_MESSAGE	e1000_defines.h	694;"	d
E1000_TSYNCRXCFG_PTP_V1_MANAGEMENT_MESSAGE	e1000_defines.h	696;"	d
E1000_TSYNCRXCFG_PTP_V1_SYNC_MESSAGE	e1000_defines.h	692;"	d
E1000_TSYNCRXCFG_PTP_V2_ANNOUNCE_MESSAGE	e1000_defines.h	706;"	d
E1000_TSYNCRXCFG_PTP_V2_DELAY_REQ_MESSAGE	e1000_defines.h	700;"	d
E1000_TSYNCRXCFG_PTP_V2_DELAY_RESP_MESSAGE	e1000_defines.h	704;"	d
E1000_TSYNCRXCFG_PTP_V2_FOLLOWUP_MESSAGE	e1000_defines.h	703;"	d
E1000_TSYNCRXCFG_PTP_V2_MANAGEMENT_MESSAGE	e1000_defines.h	708;"	d
E1000_TSYNCRXCFG_PTP_V2_MSGID_MASK	e1000_defines.h	698;"	d
E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_FOLLOWUP_MESSAGE	e1000_defines.h	705;"	d
E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_REQ_MESSAGE	e1000_defines.h	701;"	d
E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_RESP_MESSAGE	e1000_defines.h	702;"	d
E1000_TSYNCRXCFG_PTP_V2_SIGNALLING_MESSAGE	e1000_defines.h	707;"	d
E1000_TSYNCRXCFG_PTP_V2_SYNC_MESSAGE	e1000_defines.h	699;"	d
E1000_TSYNCRXCTL	e1000_regs.h	539;"	d
E1000_TSYNCRXCTL_ENABLED	e1000_defines.h	688;"	d
E1000_TSYNCRXCTL_SYSCFI	e1000_defines.h	689;"	d
E1000_TSYNCRXCTL_TYPE_ALL	e1000_defines.h	686;"	d
E1000_TSYNCRXCTL_TYPE_EVENT_V2	e1000_defines.h	687;"	d
E1000_TSYNCRXCTL_TYPE_L2_L4_V2	e1000_defines.h	685;"	d
E1000_TSYNCRXCTL_TYPE_L2_V2	e1000_defines.h	683;"	d
E1000_TSYNCRXCTL_TYPE_L4_V1	e1000_defines.h	684;"	d
E1000_TSYNCRXCTL_TYPE_MASK	e1000_defines.h	682;"	d
E1000_TSYNCRXCTL_VALID	e1000_defines.h	681;"	d
E1000_TSYNCTXCTL	e1000_regs.h	540;"	d
E1000_TSYNCTXCTL_ENABLED	e1000_defines.h	679;"	d
E1000_TSYNCTXCTL_VALID	e1000_defines.h	678;"	d
E1000_TTQF	e1000_regs.h	563;"	d
E1000_TTQF_DISABLE_MASK	e1000_defines.h	717;"	d
E1000_TTQF_MASK_ENABLE	e1000_defines.h	729;"	d
E1000_TTQF_PROTOCOL_MASK	e1000_defines.h	719;"	d
E1000_TTQF_PROTOCOL_SCTP	e1000_defines.h	725;"	d
E1000_TTQF_PROTOCOL_SHIFT	e1000_defines.h	726;"	d
E1000_TTQF_PROTOCOL_TCP	e1000_defines.h	721;"	d
E1000_TTQF_PROTOCOL_UDP	e1000_defines.h	723;"	d
E1000_TTQF_QUEUE_ENABLE	e1000_defines.h	718;"	d
E1000_TTQF_QUEUE_SHIFT	e1000_defines.h	727;"	d
E1000_TTQF_RX_QUEUE_MASK	e1000_defines.h	728;"	d
E1000_TXCTL	e1000_regs.h	230;"	d
E1000_TXCW	e1000_regs.h	65;"	d
E1000_TXCW_ANE	e1000_defines.h	670;"	d
E1000_TXCW_ASM_DIR	e1000_defines.h	668;"	d
E1000_TXCW_FD	e1000_defines.h	666;"	d
E1000_TXCW_PAUSE	e1000_defines.h	667;"	d
E1000_TXCW_PAUSE_MASK	e1000_defines.h	669;"	d
E1000_TXDCTL	e1000_regs.h	235;"	d
E1000_TXDCTL_COUNT_DESC	e1000_defines.h	600;"	d
E1000_TXDCTL_FULL_TX_DESC_WB	e1000_defines.h	597;"	d
E1000_TXDCTL_GRAN	e1000_defines.h	596;"	d
E1000_TXDCTL_HTHRESH	e1000_defines.h	594;"	d
E1000_TXDCTL_MAX_TX_DESC_PREFETCH	e1000_defines.h	598;"	d
E1000_TXDCTL_PRIORITY	e1000_82575.h	337;"	d
E1000_TXDCTL_PTHRESH	e1000_defines.h	593;"	d
E1000_TXDCTL_QUEUE_ENABLE	e1000_82575.h	334;"	d
E1000_TXDCTL_SWFLSH	e1000_82575.h	335;"	d
E1000_TXDCTL_WTHRESH	e1000_defines.h	595;"	d
E1000_TXD_CMD_DEXT	e1000_defines.h	358;"	d
E1000_TXD_CMD_EOP	e1000_defines.h	353;"	d
E1000_TXD_CMD_IC	e1000_defines.h	355;"	d
E1000_TXD_CMD_IDE	e1000_defines.h	360;"	d
E1000_TXD_CMD_IFCS	e1000_defines.h	354;"	d
E1000_TXD_CMD_IP	e1000_defines.h	366;"	d
E1000_TXD_CMD_RPS	e1000_defines.h	357;"	d
E1000_TXD_CMD_RS	e1000_defines.h	356;"	d
E1000_TXD_CMD_TCP	e1000_defines.h	365;"	d
E1000_TXD_CMD_TSE	e1000_defines.h	367;"	d
E1000_TXD_CMD_VLE	e1000_defines.h	359;"	d
E1000_TXD_DTYP_ADV_C	e1000_82575.h	75;"	d
E1000_TXD_DTYP_ADV_D	e1000_82575.h	76;"	d
E1000_TXD_DTYP_C	e1000_defines.h	350;"	d
E1000_TXD_DTYP_D	e1000_defines.h	349;"	d
E1000_TXD_EXTCMD_TSTAMP	e1000_defines.h	369;"	d
E1000_TXD_POPTS_IXSM	e1000_defines.h	351;"	d
E1000_TXD_POPTS_TXSM	e1000_defines.h	352;"	d
E1000_TXD_STAT_DD	e1000_defines.h	361;"	d
E1000_TXD_STAT_EC	e1000_defines.h	362;"	d
E1000_TXD_STAT_LC	e1000_defines.h	363;"	d
E1000_TXD_STAT_TC	e1000_defines.h	368;"	d
E1000_TXD_STAT_TU	e1000_defines.h	364;"	d
E1000_TXPB0S_SIZE_I210_MASK	e1000_defines.h	1353;"	d
E1000_TXPBS	e1000_regs.h	260;"	d
E1000_TXSTMPH	e1000_regs.h	547;"	d
E1000_TXSTMPL	e1000_regs.h	546;"	d
E1000_TXSWC	e1000_regs.h	524;"	d
E1000_TX_HEAD_WB_ENABLE	e1000_82575.h	133;"	d
E1000_TX_SEQNUM_WB_ENABLE	e1000_82575.h	134;"	d
E1000_UFUSE	e1000_regs.h	490;"	d
E1000_UNUSEDARG	e1000_defines.h	1378;"	d
E1000_UTA	e1000_regs.h	517;"	d
E1000_V2PMAILBOX	e1000_regs.h	529;"	d
E1000_VET	e1000_regs.h	56;"	d
E1000_VFLRE	e1000_regs.h	510;"	d
E1000_VFMAILBOX_SIZE	e1000_mbx.h	44;"	d
E1000_VFQA0	e1000_regs.h	446;"	d
E1000_VFQA1	e1000_regs.h	447;"	d
E1000_VFRE	e1000_regs.h	511;"	d
E1000_VFTA	e1000_regs.h	442;"	d
E1000_VFTA_ENTRIES	e1000_defines.h	1376;"	d
E1000_VFTA_ENTRY_BIT_SHIFT_MASK	e1000_manage.h	70;"	d
E1000_VFTA_ENTRY_MASK	e1000_manage.h	69;"	d
E1000_VFTA_ENTRY_SHIFT	e1000_manage.h	68;"	d
E1000_VFTE	e1000_regs.h	512;"	d
E1000_VFVMBMEM	e1000_regs.h	532;"	d
E1000_VF_INIT_TIMEOUT	e1000_82575.h	445;"	d
E1000_VF_MBX_INIT_DELAY	e1000_mbx.h	75;"	d
E1000_VF_MBX_INIT_TIMEOUT	e1000_mbx.h	74;"	d
E1000_VF_RESET	e1000_mbx.h	60;"	d
E1000_VF_SET_LPE	e1000_mbx.h	67;"	d
E1000_VF_SET_MAC_ADDR	e1000_mbx.h	61;"	d
E1000_VF_SET_MULTICAST	e1000_mbx.h	62;"	d
E1000_VF_SET_MULTICAST_COUNT_MASK	e1000_mbx.h	63;"	d
E1000_VF_SET_MULTICAST_OVERFLOW	e1000_mbx.h	64;"	d
E1000_VF_SET_PROMISC	e1000_mbx.h	68;"	d
E1000_VF_SET_PROMISC_MULTICAST	e1000_mbx.h	70;"	d
E1000_VF_SET_PROMISC_UNICAST	e1000_mbx.h	69;"	d
E1000_VF_SET_VLAN	e1000_mbx.h	65;"	d
E1000_VF_SET_VLAN_ADD	e1000_mbx.h	66;"	d
E1000_VLAN_FILTER_TBL_SIZE	e1000_defines.h	609;"	d
E1000_VLVF	e1000_regs.h	535;"	d
E1000_VLVF_ARRAY_SIZE	e1000_82575.h	435;"	d
E1000_VLVF_LVLAN	e1000_82575.h	439;"	d
E1000_VLVF_POOLSEL_MASK	e1000_82575.h	438;"	d
E1000_VLVF_POOLSEL_SHIFT	e1000_82575.h	437;"	d
E1000_VLVF_VLANID_ENABLE	e1000_82575.h	440;"	d
E1000_VLVF_VLANID_MASK	e1000_82575.h	436;"	d
E1000_VMBMEM	e1000_regs.h	531;"	d
E1000_VMOLR	e1000_regs.h	533;"	d
E1000_VMOLR_AUPE	e1000_82575.h	418;"	d
E1000_VMOLR_BAM	e1000_82575.h	421;"	d
E1000_VMOLR_LPE	e1000_82575.h	416;"	d
E1000_VMOLR_MPME	e1000_82575.h	422;"	d
E1000_VMOLR_RLPML_MASK	e1000_82575.h	415;"	d
E1000_VMOLR_ROMPE	e1000_82575.h	419;"	d
E1000_VMOLR_ROPE	e1000_82575.h	420;"	d
E1000_VMOLR_RSSE	e1000_82575.h	417;"	d
E1000_VMOLR_STRCRC	e1000_82575.h	424;"	d
E1000_VMOLR_STRVLAN	e1000_82575.h	423;"	d
E1000_VMOLR_UPE	e1000_82575.h	427;"	d
E1000_VMOLR_UPE	igb_vmdq.c	152;"	d	file:
E1000_VMOLR_VPE	e1000_82575.h	426;"	d
E1000_VMRCTL	e1000_regs.h	519;"	d
E1000_VMRCTL_DOWNLINK_MIRROR_ENABLE	e1000_82575.h	149;"	d
E1000_VMRCTL_MIRROR_DSTPORT_MASK	e1000_82575.h	145;"	d
E1000_VMRCTL_MIRROR_PORT_SHIFT	e1000_82575.h	144;"	d
E1000_VMRCTL_POOL_MIRROR_ENABLE	e1000_82575.h	147;"	d
E1000_VMRCTL_UPLINK_MIRROR_ENABLE	e1000_82575.h	148;"	d
E1000_VMRVLAN	e1000_regs.h	520;"	d
E1000_VMRVM	e1000_regs.h	521;"	d
E1000_VMVIR	e1000_regs.h	536;"	d
E1000_VMVIR_VLANA_DEFAULT	e1000_82575.h	442;"	d
E1000_VMVIR_VLANA_NEVER	e1000_82575.h	443;"	d
E1000_VPDDIAG	e1000_regs.h	106;"	d
E1000_VTCTRL	e1000_regs.h	538;"	d
E1000_VTCTRL_RST	e1000_defines.h	1371;"	d
E1000_VT_CTL	e1000_regs.h	443;"	d
E1000_VT_CTL_DEFAULT_POOL_MASK	e1000_82575.h	407;"	d
E1000_VT_CTL_DEFAULT_POOL_SHIFT	e1000_82575.h	406;"	d
E1000_VT_CTL_DISABLE_DEF_POOL	e1000_82575.h	411;"	d
E1000_VT_CTL_IGNORE_MAC	e1000_82575.h	410;"	d
E1000_VT_CTL_VM_REPL_EN	e1000_82575.h	412;"	d
E1000_VT_MSGINFO_MASK	e1000_mbx.h	58;"	d
E1000_VT_MSGINFO_SHIFT	e1000_mbx.h	56;"	d
E1000_VT_MSGTYPE_ACK	e1000_mbx.h	51;"	d
E1000_VT_MSGTYPE_CTS	e1000_mbx.h	55;"	d
E1000_VT_MSGTYPE_NACK	e1000_mbx.h	53;"	d
E1000_WDSTP	e1000_regs.h	102;"	d
E1000_WRITE_FLASH_REG	e1000_osdep.h	122;"	d
E1000_WRITE_FLASH_REG16	e1000_osdep.h	125;"	d
E1000_WRITE_FLUSH	e1000_osdep.h	120;"	d
E1000_WRITE_REG	e1000_osdep.h	90;"	d
E1000_WRITE_REG_ARRAY	e1000_osdep.h	95;"	d
E1000_WRITE_REG_ARRAY_BYTE	e1000_osdep.h	110;"	d
E1000_WRITE_REG_ARRAY_DWORD	e1000_osdep.h	102;"	d
E1000_WRITE_REG_ARRAY_WORD	e1000_osdep.h	104;"	d
E1000_WRITE_REG_IO	e1000_osdep.h	116;"	d
E1000_WUC	e1000_regs.h	448;"	d
E1000_WUC_APME	e1000_defines.h	37;"	d
E1000_WUC_APMPME	e1000_defines.h	40;"	d
E1000_WUC_PHY_WAKE	e1000_defines.h	41;"	d
E1000_WUC_PME_EN	e1000_defines.h	38;"	d
E1000_WUC_PME_STATUS	e1000_defines.h	39;"	d
E1000_WUFC	e1000_regs.h	449;"	d
E1000_WUFC_ARP	e1000_defines.h	49;"	d
E1000_WUFC_BC	e1000_defines.h	48;"	d
E1000_WUFC_EX	e1000_defines.h	46;"	d
E1000_WUFC_FLX0	e1000_defines.h	51;"	d
E1000_WUFC_IPV4	e1000_defines.h	50;"	d
E1000_WUFC_LNKC	e1000_defines.h	44;"	d
E1000_WUFC_MAG	e1000_defines.h	45;"	d
E1000_WUFC_MC	e1000_defines.h	47;"	d
E1000_WUPL	e1000_regs.h	455;"	d
E1000_WUPM	e1000_regs.h	456;"	d
E1000_WUPM_REG	e1000_regs.h	254;"	d
E1000_WUS	e1000_regs.h	450;"	d
E1000_WUS_BC	e1000_defines.h	58;"	d
E1000_WUS_EX	e1000_defines.h	56;"	d
E1000_WUS_LNKC	e1000_defines.h	54;"	d
E1000_WUS_MAG	e1000_defines.h	55;"	d
E1000_WUS_MC	e1000_defines.h	57;"	d
E1000_WVBR	e1000_regs.h	515;"	d
E1000_XOFFRXC	e1000_regs.h	297;"	d
E1000_XOFFTXC	e1000_regs.h	298;"	d
E1000_XONRXC	e1000_regs.h	295;"	d
E1000_XONTXC	e1000_regs.h	296;"	d
EIMS_ENABLE_MASK	e1000_82575.h	166;"	d
ESTATUS_1000_TFULL	kcompat.h	1740;"	d
ESTATUS_1000_THALF	kcompat.h	1741;"	d
ETHERNET_FCS_SIZE	e1000_defines.h	424;"	d
ETHERNET_IEEE_VLAN_TYPE	e1000_defines.h	422;"	d
ETHTOOL_BUSINFO_LEN	kcompat.h	666;"	d
ETHTOOL_GCOALESCE	kcompat.h	469;"	d
ETHTOOL_GEEPROM	kcompat.h	406;"	d
ETHTOOL_GEEPROM	kcompat.h	463;"	d
ETHTOOL_GLINK	kcompat.h	423;"	d
ETHTOOL_GLINK	kcompat.h	460;"	d
ETHTOOL_GMSGLVL	kcompat.h	451;"	d
ETHTOOL_GPAUSEPARAM	kcompat.h	601;"	d
ETHTOOL_GREGS	kcompat.h	407;"	d
ETHTOOL_GREGS	kcompat.h	439;"	d
ETHTOOL_GRINGPARAM	kcompat.h	572;"	d
ETHTOOL_GRXCSUM	kcompat.h	627;"	d
ETHTOOL_GSG	kcompat.h	639;"	d
ETHTOOL_GSTATS	kcompat.h	348;"	d
ETHTOOL_GSTATS	kcompat.h	656;"	d
ETHTOOL_GSTRINGS	kcompat.h	377;"	d
ETHTOOL_GSTRINGS	kcompat.h	650;"	d
ETHTOOL_GTSO	kcompat.h	659;"	d
ETHTOOL_GTXCSUM	kcompat.h	633;"	d
ETHTOOL_GWOL	kcompat.h	427;"	d
ETHTOOL_NWAY_RST	kcompat.h	457;"	d
ETHTOOL_OPS_COMPAT	kcompat.h	1084;"	d
ETHTOOL_OPS_COMPAT	kcompat_ethtool.c	781;"	d	file:
ETHTOOL_PHYS_ID	kcompat.h	373;"	d
ETHTOOL_PHYS_ID	kcompat.h	653;"	d
ETHTOOL_RXNTUPLE_ACTION_CLEAR	kcompat.h	3159;"	d
ETHTOOL_SCOALESCE	kcompat.h	569;"	d
ETHTOOL_SEEPROM	kcompat.h	466;"	d
ETHTOOL_SMSGLVL	kcompat.h	454;"	d
ETHTOOL_SPAUSEPARAM	kcompat.h	624;"	d
ETHTOOL_SRINGPARAM	kcompat.h	598;"	d
ETHTOOL_SRXCSUM	kcompat.h	630;"	d
ETHTOOL_SRXNTUPLE	kcompat.h	3467;"	d
ETHTOOL_SSG	kcompat.h	643;"	d
ETHTOOL_STSO	kcompat.h	662;"	d
ETHTOOL_STXCSUM	kcompat.h	636;"	d
ETHTOOL_SWOL	kcompat.h	428;"	d
ETHTOOL_TEST	kcompat.h	391;"	d
ETHTOOL_TEST	kcompat.h	647;"	d
ETH_ADDR_LEN	e1000_defines.h	1132;"	d
ETH_ADDR_LEN	e1000_osdep.h	64;"	d
ETH_FCS_LEN	kcompat.h	2127;"	d
ETH_FLAG_LRO	kcompat.h	2214;"	d
ETH_FLAG_NTUPLE	kcompat.h	2845;"	d
ETH_FLAG_RXHASH	kcompat.h	3065;"	d
ETH_FLAG_RXVLAN	kcompat.h	3168;"	d
ETH_FLAG_TXVLAN	kcompat.h	3165;"	d
ETH_GSTRING_LEN	kcompat.h	344;"	d
ETH_P_1588	kcompat.h	2618;"	d
ETH_P_8021Q	kcompat.h	125;"	d
ETH_P_FIP	kcompat.h	2619;"	d
ETH_SS_STATS	kcompat.h	/^	ETH_SS_STATS,$/;"	e	enum:ethtool_stringset
ETH_SS_TEST	kcompat.h	/^	ETH_SS_TEST             = 0,$/;"	e	enum:ethtool_stringset
ETH_TEST_FL_FAILED	kcompat.h	/^	ETH_TEST_FL_FAILED	= (1 << 1),$/;"	e	enum:ethtool_test_flags
ETH_TEST_FL_OFFLINE	kcompat.h	/^	ETH_TEST_FL_OFFLINE	= (1 << 0),$/;"	e	enum:ethtool_test_flags
ETH_TYPE_TRANS_SETS_DEV	kcompat.h	2185;"	d
EXPANSION_ENABLENPAGE	kcompat.h	800;"	d
FALSE	kcompat.h	112;"	d
FALSE	kcompat.h	114;"	d
FAMILYC	Makefile	/^FAMILYC = e1000_82575.c e1000_i210.c$/;"	m
FAMILYH	Makefile	/^FAMILYH = e1000_82575.h e1000_i210.h$/;"	m
FIBER_LINK_UP_LIMIT	e1000_defines.h	647;"	d
FIELD_SIZEOF	kcompat.h	1867;"	d
FLOW_CONTROL_ADDRESS_HIGH	e1000_defines.h	604;"	d
FLOW_CONTROL_ADDRESS_LOW	e1000_defines.h	603;"	d
FLOW_CONTROL_TYPE	e1000_defines.h	605;"	d
FLOW_EXT	kcompat.h	3303;"	d
FULL_DUPLEX	e1000_defines.h	316;"	d
FW_CMD_DRV_INFO	igb.h	726;"	d
FW_CMD_DRV_INFO_LEN	igb.h	727;"	d
FW_CMD_RESERVED	igb.h	728;"	d
FW_FAMILY_DRV_VER	igb.h	733;"	d
FW_HDR_LEN	igb.h	725;"	d
FW_MAX_RETRIES	igb.h	731;"	d
FW_RESP_SUCCESS	igb.h	729;"	d
FW_STATUS_SUCCESS	igb.h	732;"	d
FW_UNUSED_VER	igb.h	730;"	d
GG82563_E_PHY_ID	e1000_defines.h	1152;"	d
GG82563_MIN_ALT_REG	e1000_defines.h	1251;"	d
GG82563_PAGE_SHIFT	e1000_defines.h	1248;"	d
GG82563_PHY_DSP_DISTANCE	e1000_defines.h	1262;"	d
GG82563_PHY_INBAND_CTRL	e1000_defines.h	1270;"	d
GG82563_PHY_KMRN_MODE_CTRL	e1000_defines.h	1266;"	d
GG82563_PHY_MAC_SPEC_CTRL	e1000_defines.h	1260;"	d
GG82563_PHY_PAGE_SELECT	e1000_defines.h	1255;"	d
GG82563_PHY_PAGE_SELECT_ALT	e1000_defines.h	1257;"	d
GG82563_PHY_PWR_MGMT_CTRL	e1000_defines.h	1267;"	d
GG82563_PHY_SPEC_CTRL	e1000_defines.h	1254;"	d
GG82563_PHY_SPEC_CTRL_2	e1000_defines.h	1256;"	d
GG82563_REG	e1000_defines.h	1249;"	d
GS40G_COPPER_SPEC	e1000_phy.h	125;"	d
GS40G_CS_POWER_DOWN	e1000_phy.h	126;"	d
GS40G_MAC_LB	e1000_phy.h	123;"	d
GS40G_MAC_REG2	e1000_phy.h	122;"	d
GS40G_MAC_SPEED_1G	e1000_phy.h	124;"	d
GS40G_OFFSET_MASK	e1000_phy.h	120;"	d
GS40G_PAGE_2	e1000_phy.h	121;"	d
GS40G_PAGE_SELECT	e1000_phy.h	118;"	d
GS40G_PAGE_SHIFT	e1000_phy.h	119;"	d
HALF_DUPLEX	e1000_defines.h	315;"	d
HAVE_8021P_SUPPORT	kcompat.h	3136;"	d
HAVE_8021P_SUPPORT	kcompat.h	3143;"	d
HAVE_ASPM_QUIRKS	kcompat.h	2613;"	d
HAVE_BRIDGE_ATTRIBS	kcompat.h	3738;"	d
HAVE_BRIDGE_FILTER	kcompat.h	3782;"	d
HAVE_CONFIG_HOTPLUG	kcompat.h	3702;"	d
HAVE_CONST_STRUCT_PCI_ERROR_HANDLERS	kcompat.h	3690;"	d
HAVE_DCBNL_IEEE	kcompat.h	3287;"	d
HAVE_DCBNL_IEEE_DELAPP	kcompat.h	3363;"	d
HAVE_DCBNL_OPS_GETAPP	kcompat.h	2738;"	d
HAVE_DEVICE_NUMA_NODE	kcompat.h	2058;"	d
HAVE_EARLY_VMALLOC_NODE	kcompat.h	2031;"	d
HAVE_ENCAP_CSUM_OFFLOAD	kcompat.h	3719;"	d
HAVE_ENCAP_TSO_OFFLOAD	kcompat.h	3813;"	d
HAVE_ETHTOOL_GET_PERM_ADDR	kcompat.h	2207;"	d
HAVE_ETHTOOL_GET_RXNFC_VOID_RULE_LOCS	kcompat.h	3370;"	d
HAVE_ETHTOOL_GET_SSET_COUNT	kcompat.h	2320;"	d
HAVE_ETHTOOL_GET_TS_INFO	kcompat.h	2824;"	d
HAVE_ETHTOOL_GET_TS_INFO	kcompat.h	3519;"	d
HAVE_ETHTOOL_SET_PHYS_ID	kcompat.h	2823;"	d
HAVE_ETHTOOL_SET_PHYS_ID	kcompat.h	3340;"	d
HAVE_FDB_OPS	kcompat.h	3518;"	d
HAVE_I2C_SUPPORT	kcompat.h	1377;"	d
HAVE_I2C_SUPPORT	kcompat.h	1381;"	d
HAVE_IGB_DEBUG_FS	kcompat.h	2516;"	d
HAVE_IGB_DEBUG_FS	kcompat.h	2522;"	d
HAVE_INCLUDE_LINUX_MDIO_H	kcompat.h	2671;"	d
HAVE_INT_NDO_VLAN_RX_ADD_VID	kcompat.h	3465;"	d
HAVE_IRQ_AFFINITY_HINT	kcompat.h	3068;"	d
HAVE_IRQ_AFFINITY_HINT	kcompat.h	3072;"	d
HAVE_IXGBE_DEBUG_FS	kcompat.h	2515;"	d
HAVE_IXGBE_DEBUG_FS	kcompat.h	2521;"	d
HAVE_MQPRIO	kcompat.h	3280;"	d
HAVE_NDO_GET_STATS64	kcompat.h	3144;"	d
HAVE_NDO_SET_FEATURES	kcompat.h	3291;"	d
HAVE_NETDEV_HW_ADDR	kcompat.h	2665;"	d
HAVE_NETDEV_NAPI_LIST	kcompat.h	2321;"	d
HAVE_NETDEV_OPS_FCOE_DDP_TARGET	kcompat.h	3276;"	d
HAVE_NETDEV_OPS_FCOE_ENABLE	kcompat.h	2733;"	d
HAVE_NETDEV_OPS_FCOE_GETWWN	kcompat.h	2762;"	d
HAVE_NETDEV_OPS_FCOE_GETWWN	kcompat.h	2830;"	d
HAVE_NETDEV_SELECT_QUEUE	kcompat.h	2519;"	d
HAVE_NETDEV_STATS_IN_NETDEV	kcompat.h	2186;"	d
HAVE_NETDEV_STORAGE_ADDRESS	kcompat.h	2662;"	d
HAVE_NETDEV_VLAN_FEATURES	kcompat.h	2400;"	d
HAVE_NETIF_MSG	kcompat.h	904;"	d
HAVE_NET_DEVICE_OPS	kcompat.h	2576;"	d
HAVE_PCIE_TYPE	kcompat.h	2743;"	d
HAVE_PCI_DEV_FLAGS_ASSIGNED	kcompat.h	3437;"	d
HAVE_PCI_DEV_FLAGS_ASSIGNED	kcompat.h	3442;"	d
HAVE_PCI_ERS	kcompat.h	1814;"	d
HAVE_PCI_ERS	kcompat.h	1816;"	d
HAVE_PCI_ERS	kcompat.h	1817;"	d
HAVE_PFC_MODE_ENABLE	kcompat.h	2579;"	d
HAVE_PM_QOS_REQUEST_ACTIVE	kcompat.h	3142;"	d
HAVE_PM_QOS_REQUEST_LIST	kcompat.h	3071;"	d
HAVE_PTP_1588_CLOCK	kcompat.h	3508;"	d
HAVE_RHEL6_ETHTOOL_OPS_EXT_STRUCT	kcompat.h	2822;"	d
HAVE_SCTP	kcompat.h	1076;"	d
HAVE_SETUP_TC	kcompat.h	3283;"	d
HAVE_SET_RX_MODE	kcompat.h	3033;"	d
HAVE_SRIOV_CONFIGURE	kcompat.h	3735;"	d
HAVE_SYSTEM_SLEEP_PM_OPS	kcompat.h	2981;"	d
HAVE_SYSTEM_SLEEP_PM_OPS	kcompat.h	3031;"	d
HAVE_TRANS_START_IN_QUEUE	kcompat.h	2668;"	d
HAVE_TX_MQ	kcompat.h	2460;"	d
HAVE_TX_MQ	kcompat.h	2518;"	d
HAVE_VF_SPOOFCHK_CONFIGURE	kcompat.h	3443;"	d
HAVE_VLAN_RX_REGISTER	kcompat.h	3221;"	d
HFILES	Makefile	/^HFILES = igb.h e1000_hw.h e1000_osdep.h e1000_defines.h e1000_mac.h \\$/;"	m
HLIST_HEAD	kcompat.h	1244;"	d
HLIST_HEAD_INIT	kcompat.h	1243;"	d
HV_INTC_FC_PAGE_START	e1000_phy.h	128;"	d
I210_I_PHY_ID	e1000_defines.h	1159;"	d
I2C_BOARD_INFO	kcompat.h	2176;"	d
I347AT4_E_PHY_ID	e1000_defines.h	1150;"	d
I347AT4_PAGE_SELECT	e1000_defines.h	1216;"	d
I347AT4_PCDC	e1000_defines.h	1215;"	d
I347AT4_PCDC_CABLE_LENGTH_UNIT	e1000_defines.h	1235;"	d
I347AT4_PCDL	e1000_defines.h	1214;"	d
I347AT4_PSCR_DOWNSHIFT_1X	e1000_defines.h	1225;"	d
I347AT4_PSCR_DOWNSHIFT_2X	e1000_defines.h	1226;"	d
I347AT4_PSCR_DOWNSHIFT_3X	e1000_defines.h	1227;"	d
I347AT4_PSCR_DOWNSHIFT_4X	e1000_defines.h	1228;"	d
I347AT4_PSCR_DOWNSHIFT_5X	e1000_defines.h	1229;"	d
I347AT4_PSCR_DOWNSHIFT_6X	e1000_defines.h	1230;"	d
I347AT4_PSCR_DOWNSHIFT_7X	e1000_defines.h	1231;"	d
I347AT4_PSCR_DOWNSHIFT_8X	e1000_defines.h	1232;"	d
I347AT4_PSCR_DOWNSHIFT_ENABLE	e1000_defines.h	1223;"	d
I347AT4_PSCR_DOWNSHIFT_MASK	e1000_defines.h	1224;"	d
I350_I_PHY_ID	e1000_defines.h	1158;"	d
I82577_ADDR_REG	e1000_phy.h	130;"	d
I82577_CFG_ASSERT_CRS_ON_TX	e1000_phy.h	132;"	d
I82577_CFG_ENABLE_DOWNSHIFT	e1000_phy.h	133;"	d
I82577_CFG_REG	e1000_phy.h	131;"	d
I82577_CTRL_REG	e1000_phy.h	134;"	d
I82577_DSTATUS_CABLE_LENGTH	e1000_phy.h	154;"	d
I82577_DSTATUS_CABLE_LENGTH_SHIFT	e1000_phy.h	155;"	d
I82577_PHY_CTRL2_AUTO_MDI_MDIX	e1000_phy.h	150;"	d
I82577_PHY_CTRL2_MANUAL_MDIX	e1000_phy.h	149;"	d
I82577_PHY_CTRL2_MDIX_CFG_MASK	e1000_phy.h	151;"	d
I82577_PHY_CTRL_2	e1000_phy.h	137;"	d
I82577_PHY_DIAG_STATUS	e1000_phy.h	140;"	d
I82577_PHY_LBK_CTRL	e1000_phy.h	138;"	d
I82577_PHY_STATUS2_MDIX	e1000_phy.h	144;"	d
I82577_PHY_STATUS2_REV_POLARITY	e1000_phy.h	143;"	d
I82577_PHY_STATUS2_SPEED_1000MBPS	e1000_phy.h	146;"	d
I82577_PHY_STATUS2_SPEED_MASK	e1000_phy.h	145;"	d
I82577_PHY_STATUS_2	e1000_phy.h	139;"	d
I82578_ADDR_REG	e1000_phy.h	129;"	d
I82580_I_PHY_ID	e1000_defines.h	1157;"	d
ID_LED_DEF1_DEF2	e1000_defines.h	1104;"	d
ID_LED_DEF1_OFF2	e1000_defines.h	1106;"	d
ID_LED_DEF1_ON2	e1000_defines.h	1105;"	d
ID_LED_DEFAULT	e1000_defines.h	1100;"	d
ID_LED_DEFAULT_82575_SERDES	e1000_82575.h	31;"	d
ID_LED_DEFAULT_I210	e1000_i210.h	79;"	d
ID_LED_DEFAULT_I210_SERDES	e1000_i210.h	82;"	d
ID_LED_OFF1_DEF2	e1000_defines.h	1110;"	d
ID_LED_OFF1_OFF2	e1000_defines.h	1112;"	d
ID_LED_OFF1_ON2	e1000_defines.h	1111;"	d
ID_LED_ON1_DEF2	e1000_defines.h	1107;"	d
ID_LED_ON1_OFF2	e1000_defines.h	1109;"	d
ID_LED_ON1_ON2	e1000_defines.h	1108;"	d
ID_LED_RESERVED_0000	e1000_defines.h	1098;"	d
ID_LED_RESERVED_FFFF	e1000_defines.h	1099;"	d
IEEE_8021QAZ_MAX_TCS	kcompat.h	3239;"	d
IFE_C_E_PHY_ID	e1000_defines.h	1156;"	d
IFE_E_PHY_ID	e1000_defines.h	1154;"	d
IFE_PESC_POLARITY_REVERSED	e1000_phy.h	216;"	d
IFE_PHY_EXTENDED_STATUS_CONTROL	e1000_phy.h	210;"	d
IFE_PHY_MDIX_CONTROL	e1000_phy.h	213;"	d
IFE_PHY_SPECIAL_CONTROL	e1000_phy.h	211;"	d
IFE_PHY_SPECIAL_CONTROL_LED	e1000_phy.h	212;"	d
IFE_PLUS_E_PHY_ID	e1000_defines.h	1155;"	d
IFE_PMC_AUTO_MDIX	e1000_phy.h	230;"	d
IFE_PMC_FORCE_MDIX	e1000_phy.h	229;"	d
IFE_PMC_MDIX_STATUS	e1000_phy.h	228;"	d
IFE_PSCL_PROBE_LEDS_OFF	e1000_phy.h	224;"	d
IFE_PSCL_PROBE_LEDS_ON	e1000_phy.h	225;"	d
IFE_PSCL_PROBE_MODE	e1000_phy.h	223;"	d
IFE_PSC_AUTO_POLARITY_DISABLE	e1000_phy.h	219;"	d
IFE_PSC_FORCE_POLARITY	e1000_phy.h	220;"	d
IFS_MAX	e1000_defines.h	469;"	d
IFS_MIN	e1000_defines.h	470;"	d
IFS_RATIO	e1000_defines.h	471;"	d
IFS_STEP	e1000_defines.h	472;"	d
IGB_20K_ITR	igb.h	89;"	d
IGB_4K_ITR	igb.h	88;"	d
IGB_70K_ITR	igb.h	90;"	d
IGB_82576_TSYNC_SHIFT	igb.h	720;"	d
IGB_82576_VF_DEV_ID	igb.h	119;"	d
IGB_82580_TSYNC_SHIFT	igb.h	721;"	d
IGB_CB	igb.h	258;"	d
IGB_DCA	igb.h	50;"	d
IGB_DEFAULT_RXD	igb.h	103;"	d
IGB_DEFAULT_TXD	igb.h	98;"	d
IGB_DEFAULT_TX_WORK	igb.h	99;"	d
IGB_DMAC_2000	igb.h	710;"	d
IGB_DMAC_3000	igb.h	711;"	d
IGB_DMAC_4000	igb.h	712;"	d
IGB_DMAC_500	igb.h	708;"	d
IGB_DMAC_5000	igb.h	713;"	d
IGB_DMAC_6000	igb.h	714;"	d
IGB_DMAC_7000	igb.h	715;"	d
IGB_DMAC_8000	igb.h	716;"	d
IGB_DMAC_9000	igb.h	717;"	d
IGB_DMAC_DISABLE	igb.h	706;"	d
IGB_DMAC_EN_DEFAULT	igb.h	709;"	d
IGB_DMAC_MAX	igb.h	718;"	d
IGB_DMAC_MIN	igb.h	707;"	d
IGB_DMCTLX_DCFLUSH_DIS	igb.h	703;"	d
IGB_EEPROM_APME	igb.h	201;"	d
IGB_ERR	igb.h	67;"	d
IGB_FC_PAUSE_TIME	igb.h	196;"	d
IGB_FLAG_DCA_ENABLED	igb.h	678;"	d
IGB_FLAG_DETECT_BAD_DMA	igb.h	684;"	d
IGB_FLAG_DMAC	igb.h	683;"	d
IGB_FLAG_EEE	igb.h	682;"	d
IGB_FLAG_HAS_MSI	igb.h	677;"	d
IGB_FLAG_LLI_PUSH	igb.h	679;"	d
IGB_FLAG_LOOPBACK_ENABLE	igb.h	690;"	d
IGB_FLAG_MAS_ENABLE	igb.h	692;"	d
IGB_FLAG_MEDIA_RESET	igb.h	691;"	d
IGB_FLAG_NEED_LINK_UPDATE	igb.h	689;"	d
IGB_FLAG_PTP	igb.h	685;"	d
IGB_FLAG_QUAD_PORT_A	igb.h	680;"	d
IGB_FLAG_QUEUE_PAIRS	igb.h	681;"	d
IGB_FLAG_RSS_FIELD_IPV4_UDP	igb.h	686;"	d
IGB_FLAG_RSS_FIELD_IPV6_UDP	igb.h	687;"	d
IGB_FLAG_WOL_SUPPORTED	igb.h	688;"	d
IGB_GLOBAL_STATS_LEN	igb_ethtool.c	129;"	d	file:
IGB_HWMON	kcompat.h	2377;"	d
IGB_HWMON_TYPE_CAUTION	igb.h	493;"	d
IGB_HWMON_TYPE_LOC	igb.h	491;"	d
IGB_HWMON_TYPE_MAX	igb.h	494;"	d
IGB_HWMON_TYPE_TEMP	igb.h	492;"	d
IGB_I350_VF_DEV_ID	igb.h	120;"	d
IGB_INT_MODE_LEGACY	igb.h	93;"	d
IGB_INT_MODE_MSI	igb.h	94;"	d
IGB_INT_MODE_MSIX	igb.h	95;"	d
IGB_LRO_MAX	igb.h	212;"	d
IGB_MAC_STATE_DEFAULT	igb.h	433;"	d
IGB_MAC_STATE_IN_USE	igb.h	435;"	d
IGB_MAC_STATE_MODIFIED	igb.h	434;"	d
IGB_MASTER_SLAVE	igb.h	206;"	d
IGB_MAS_ENABLE_0	igb.h	695;"	d
IGB_MAS_ENABLE_1	igb.h	696;"	d
IGB_MAS_ENABLE_2	igb.h	697;"	d
IGB_MAS_ENABLE_3	igb.h	698;"	d
IGB_MAX_DATA_PER_TXD	igb.h	280;"	d
IGB_MAX_ITR_USECS	igb.h	108;"	d
IGB_MAX_LINK_TRIES	igb.h	735;"	d
IGB_MAX_NIC	igb_param.c	37;"	d	file:
IGB_MAX_RXD	igb.h	105;"	d
IGB_MAX_RX_QUEUES	igb.h	114;"	d
IGB_MAX_TXD	igb.h	101;"	d
IGB_MAX_TXD_PWR	igb.h	279;"	d
IGB_MAX_TX_QUEUES	igb.h	115;"	d
IGB_MAX_UTA_ENTRIES	igb.h	121;"	d
IGB_MAX_VF_FUNCTIONS	igb.h	118;"	d
IGB_MAX_VF_MC_ENTRIES	igb.h	117;"	d
IGB_MAX_VMDQ_QUEUES	igb.h	124;"	d
IGB_MIN_ITR_USECS	igb.h	107;"	d
IGB_MIN_RXD	igb.h	104;"	d
IGB_MIN_TXD	igb.h	100;"	d
IGB_MIN_TXPBSIZE	igb.h	700;"	d
IGB_MNG_VLAN_NONE	igb.h	209;"	d
IGB_N0_QUEUE	igb_main.c	485;"	d	file:
IGB_NBITS_82580	igb_ptp.c	91;"	d	file:
IGB_NETDEV_STAT	igb_ethtool.c	112;"	d	file:
IGB_NETDEV_STATS_LEN	igb_ethtool.c	130;"	d	file:
IGB_NO_LRO	kcompat.h	1037;"	d
IGB_PARAM	igb_param.c	61;"	d	file:
IGB_PARAM	igb_param.c	66;"	d	file:
IGB_PARAM_INIT	igb_param.c	49;"	d	file:
IGB_PBA_BYTES_SHIFT	igb.h	192;"	d
IGB_PBA_TX_MASK	igb.h	194;"	d
IGB_PROCFS	kcompat.h	2368;"	d
IGB_PTP_TX_TIMEOUT	igb_ptp.c	87;"	d	file:
IGB_QUEUE_STATS_LEN	igb_ethtool.c	135;"	d	file:
IGB_REGS_LEN	igb_ethtool.c	482;"	d	file:
IGB_RING_FLAG_RX_CSUM	igb.h	/^	IGB_RING_FLAG_RX_CSUM,$/;"	e	enum:e1000_ring_flags_t
IGB_RING_FLAG_RX_LB_VLAN_BSWAP	igb.h	/^	IGB_RING_FLAG_RX_LB_VLAN_BSWAP,$/;"	e	enum:e1000_ring_flags_t
IGB_RING_FLAG_RX_SCTP_CSUM	igb.h	/^	IGB_RING_FLAG_RX_SCTP_CSUM,$/;"	e	enum:e1000_ring_flags_t
IGB_RING_FLAG_TX_CTX_IDX	igb.h	/^	IGB_RING_FLAG_TX_CTX_IDX,$/;"	e	enum:e1000_ring_flags_t
IGB_RING_FLAG_TX_DETECT_HANG	igb.h	/^	IGB_RING_FLAG_TX_DETECT_HANG,$/;"	e	enum:e1000_ring_flags_t
IGB_RXBUFFER_16384	igb.h	182;"	d
IGB_RXBUFFER_2048	igb.h	181;"	d
IGB_RXBUFFER_256	igb.h	180;"	d
IGB_RX_BUFFER_WRITE	igb.h	199;"	d
IGB_RX_BUFSZ	igb.h	185;"	d
IGB_RX_BUFSZ	igb.h	187;"	d
IGB_RX_DESC	igb.h	439;"	d
IGB_RX_HDR_LEN	igb.h	183;"	d
IGB_RX_HTHRESH	igb.h	164;"	d
IGB_RX_PTHRESH	igb.h	163;"	d
IGB_RX_QUEUE_STATS_LEN	igb_ethtool.c	131;"	d	file:
IGB_RX_WTHRESH	igb.h	167;"	d
IGB_SET_FLAG	igb_main.c	5173;"	d	file:
IGB_STAGGERED_QUEUE_OFFSET	igb_main.c	4434;"	d	file:
IGB_START_ITR	igb.h	87;"	d
IGB_STAT	igb_ethtool.c	57;"	d	file:
IGB_STATS_LEN	igb_ethtool.c	140;"	d	file:
IGB_SYSTIM_OVERFLOW_PERIOD	igb_ptp.c	86;"	d	file:
IGB_TEST_LEN	igb_ethtool.c	150;"	d	file:
IGB_TS_HDR_LEN	igb.h	722;"	d
IGB_TXD_DCMD	igb.h	437;"	d
IGB_TX_BUF_4096	igb.h	701;"	d
IGB_TX_CTXTDESC	igb.h	443;"	d
IGB_TX_DESC	igb.h	441;"	d
IGB_TX_FLAGS_CSUM	igb.h	/^	IGB_TX_FLAGS_CSUM	= 0x20,$/;"	e	enum:igb_tx_flags
IGB_TX_FLAGS_IPV4	igb.h	/^	IGB_TX_FLAGS_IPV4	= 0x10,$/;"	e	enum:igb_tx_flags
IGB_TX_FLAGS_TSO	igb.h	/^	IGB_TX_FLAGS_TSO	= 0x02,$/;"	e	enum:igb_tx_flags
IGB_TX_FLAGS_TSTAMP	igb.h	/^	IGB_TX_FLAGS_TSTAMP	= 0x04,$/;"	e	enum:igb_tx_flags
IGB_TX_FLAGS_VLAN	igb.h	/^	IGB_TX_FLAGS_VLAN	= 0x01,$/;"	e	enum:igb_tx_flags
IGB_TX_FLAGS_VLAN_MASK	igb.h	272;"	d
IGB_TX_FLAGS_VLAN_SHIFT	igb.h	273;"	d
IGB_TX_HEAD_ADDR_SHIFT	igb.h	193;"	d
IGB_TX_HTHRESH	igb.h	166;"	d
IGB_TX_PTHRESH	igb.h	165;"	d
IGB_TX_QUEUE_STATS_LEN	igb_ethtool.c	133;"	d	file:
IGB_VF_FLAG_CTS	igb.h	147;"	d
IGB_VF_FLAG_MULTI_PROMISC	igb.h	149;"	d
IGB_VF_FLAG_PF_SET_MAC	igb.h	150;"	d
IGB_VF_FLAG_UNI_PROMISC	igb.h	148;"	d
IGP01E1000_I_PHY_ID	e1000_defines.h	1146;"	d
IGP01E1000_PHY_LINK_HEALTH	e1000_phy.h	110;"	d
IGP01E1000_PHY_PAGE_SELECT	e1000_phy.h	112;"	d
IGP01E1000_PHY_PCS_INIT_REG	e1000_phy.h	170;"	d
IGP01E1000_PHY_POLARITY_MASK	e1000_phy.h	171;"	d
IGP01E1000_PHY_PORT_CONFIG	e1000_phy.h	107;"	d
IGP01E1000_PHY_PORT_CTRL	e1000_phy.h	109;"	d
IGP01E1000_PHY_PORT_STATUS	e1000_phy.h	108;"	d
IGP01E1000_PLHR_SS_DOWNGRADE	e1000_phy.h	182;"	d
IGP01E1000_PSCFR_SMART_SPEED	e1000_phy.h	176;"	d
IGP01E1000_PSCR_AUTO_MDIX	e1000_phy.h	173;"	d
IGP01E1000_PSCR_FORCE_MDI_MDIX	e1000_phy.h	174;"	d
IGP01E1000_PSSR_MDIX	e1000_phy.h	185;"	d
IGP01E1000_PSSR_POLARITY_REVERSED	e1000_phy.h	184;"	d
IGP01E1000_PSSR_SPEED_1000MBPS	e1000_phy.h	187;"	d
IGP01E1000_PSSR_SPEED_MASK	e1000_phy.h	186;"	d
IGP02E1000_AGC_LENGTH_MASK	e1000_phy.h	196;"	d
IGP02E1000_AGC_LENGTH_SHIFT	e1000_phy.h	195;"	d
IGP02E1000_AGC_RANGE	e1000_phy.h	197;"	d
IGP02E1000_CABLE_LENGTH_TABLE_SIZE	e1000_phy.c	47;"	d	file:
IGP02E1000_PHY_AGC_A	e1000_phy.h	190;"	d
IGP02E1000_PHY_AGC_B	e1000_phy.h	191;"	d
IGP02E1000_PHY_AGC_C	e1000_phy.h	192;"	d
IGP02E1000_PHY_AGC_D	e1000_phy.h	193;"	d
IGP02E1000_PHY_CHANNEL_NUM	e1000_phy.h	189;"	d
IGP02E1000_PHY_POWER_MGMT	e1000_phy.h	111;"	d
IGP02E1000_PM_D0_LPLU	e1000_phy.h	179;"	d
IGP02E1000_PM_D3_LPLU	e1000_phy.h	180;"	d
IGP02E1000_PM_SPD	e1000_phy.h	178;"	d
IGP03E1000_E_PHY_ID	e1000_defines.h	1153;"	d
IGP04E1000_E_PHY_ID	e1000_defines.h	1160;"	d
IGP_ACTIVITY_LED_ENABLE	e1000_defines.h	1115;"	d
IGP_ACTIVITY_LED_MASK	e1000_defines.h	1114;"	d
IGP_LED3_MODE	e1000_defines.h	1116;"	d
IGP_PAGE_SHIFT	e1000_phy.h	114;"	d
IMS_ENABLE_MASK	e1000_defines.h	534;"	d
INCPERIOD_82576	igb_ptp.c	88;"	d	file:
INCVALUE_82576	igb_ptp.c	90;"	d	file:
INCVALUE_82576_MASK	igb_ptp.c	89;"	d	file:
INCVALUE_MASK	igb_ptp.c	40;"	d	file:
INIT_HLIST_HEAD	kcompat.h	1245;"	d
INIT_HLIST_NODE	kcompat.h	/^static inline void INIT_HLIST_NODE(struct hlist_node *h)$/;"	f
INIT_TQUEUE	kcompat.h	760;"	d
INIT_WORK	kcompat.h	1268;"	d
INIT_WORK	kcompat.h	1269;"	d
INIT_WORK	kcompat.h	2004;"	d
INIT_WORK	kcompat.h	2005;"	d
INSTDIR	Makefile	/^INSTDIR := \/lib\/modules\/$(KVER)\/kernel\/drivers\/net\/$(DRIVER_NAME)$/;"	m
INVM_DWORD_TO_RECORD_TYPE	e1000_i210.h	51;"	d
INVM_DWORD_TO_WORD_ADDRESS	e1000_i210.h	53;"	d
INVM_DWORD_TO_WORD_DATA	e1000_i210.h	55;"	d
IPPROTO_SCTP	kcompat.h	201;"	d
IPV4_FLOW	kcompat.h	2752;"	d
IPV6_FLOW	kcompat.h	2755;"	d
IRQF_PROBE_SHARED	kcompat.h	1852;"	d
IRQF_PROBE_SHARED	kcompat.h	1854;"	d
IRQF_SHARED	kcompat.h	1859;"	d
IRQ_HANDLED	kcompat.h	1846;"	d
IRQ_NONE	kcompat.h	1847;"	d
ISGN	igb_ptp.c	41;"	d	file:
IS_ALIGNED	kcompat.h	287;"	d
IS_ENABLED	kcompat.h	291;"	d
IS_ENABLED	kcompat.h	305;"	d
KC_USEC_PER_SEC	kcompat.h	1647;"	d
KERNEL_VERSION	kcompat.h	34;"	d
KERN_CONT	kcompat.h	2313;"	d
KOBJ	Makefile	/^  KOBJ :=  $(KSRC)$/;"	m
KOBJ	Makefile	/^  KOBJ :=  \/lib\/modules\/$(BUILD_KERNEL)\/build$/;"	m
KOBJ	Makefile	/^  KOBJ=\/lib\/modules\/$(KVER)\/build$/;"	m
KSP	Makefile	/^KSP :=  \/lib\/modules\/$(BUILD_KERNEL)\/build \\$/;"	m
KSP	Makefile	/^KSP := $(foreach dir, $(KSP), $(test_dir))$/;"	m
KSRC	Makefile	/^  KSRC := $(firstword $(KSP))$/;"	m
KVER	Makefile	/^KVER := $(shell $(CC) $(EXTRA_CFLAGS) -E -dM $(VERSION_FILE) | grep UTS_RELEASE | \\$/;"	m
KVER_CODE	Makefile	/^KVER_CODE := $(shell $(CC) $(EXTRA_CFLAGS) -E -dM $(VSP) 2>\/dev\/null |\\$/;"	m
LPA_1000LOCALRXOK	kcompat.h	1700;"	d
LPA_1000REMRXOK	kcompat.h	1701;"	d
LPA_PAUSE_ASYM	kcompat.h	1695;"	d
LPA_PAUSE_CAP	kcompat.h	1694;"	d
M88E1000_CABLE_LENGTH_TABLE_SIZE	e1000_phy.c	34;"	d	file:
M88E1000_EPSCR_MASTER_DOWNSHIFT_1X	e1000_defines.h	1205;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_MASK	e1000_defines.h	1204;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_1X	e1000_defines.h	1210;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_MASK	e1000_defines.h	1209;"	d
M88E1000_EPSCR_TX_CLK_25	e1000_defines.h	1211;"	d
M88E1000_EXT_PHY_SPEC_CTRL	e1000_defines.h	1166;"	d
M88E1000_E_PHY_ID	e1000_defines.h	1143;"	d
M88E1000_I_PHY_ID	e1000_defines.h	1144;"	d
M88E1000_PHY_GEN_CONTROL	e1000_defines.h	1170;"	d
M88E1000_PHY_PAGE_SELECT	e1000_defines.h	1169;"	d
M88E1000_PHY_SPEC_CTRL	e1000_defines.h	1164;"	d
M88E1000_PHY_SPEC_STATUS	e1000_defines.h	1165;"	d
M88E1000_PSCR_ASSERT_CRS_ON_TX	e1000_defines.h	1181;"	d
M88E1000_PSCR_AUTO_X_1000T	e1000_defines.h	1178;"	d
M88E1000_PSCR_AUTO_X_MODE	e1000_defines.h	1180;"	d
M88E1000_PSCR_MDIX_MANUAL_MODE	e1000_defines.h	1176;"	d
M88E1000_PSCR_MDI_MANUAL_MODE	e1000_defines.h	1175;"	d
M88E1000_PSCR_POLARITY_REVERSAL	e1000_defines.h	1173;"	d
M88E1000_PSSR_1000MBS	e1000_defines.h	1197;"	d
M88E1000_PSSR_CABLE_LENGTH	e1000_defines.h	1193;"	d
M88E1000_PSSR_CABLE_LENGTH_SHIFT	e1000_defines.h	1199;"	d
M88E1000_PSSR_DOWNSHIFT	e1000_defines.h	1185;"	d
M88E1000_PSSR_LINK	e1000_defines.h	1194;"	d
M88E1000_PSSR_MDIX	e1000_defines.h	1186;"	d
M88E1000_PSSR_REV_POLARITY	e1000_defines.h	1184;"	d
M88E1000_PSSR_SPD_DPLX_RESOLVED	e1000_defines.h	1195;"	d
M88E1000_PSSR_SPEED	e1000_defines.h	1196;"	d
M88E1000_RX_ERR_CNTR	e1000_defines.h	1167;"	d
M88E1011_I_PHY_ID	e1000_defines.h	1145;"	d
M88E1111_I_PHY_ID	e1000_defines.h	1147;"	d
M88E1112_E_PHY_ID	e1000_defines.h	1149;"	d
M88E1112_VCT_DSP_DISTANCE	e1000_defines.h	1238;"	d
M88E1340M_E_PHY_ID	e1000_defines.h	1151;"	d
M88E1543_E_PHY_ID	e1000_defines.h	1148;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_5X	e1000_defines.h	1242;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_MASK	e1000_defines.h	1241;"	d
M88_VENDOR	e1000_defines.h	1161;"	d
MAJ	igb_main.c	65;"	d	file:
MANDIR	Makefile	/^  MANDIR := $(firstword $(MANDIR))$/;"	m
MANDIR	Makefile	/^  MANDIR := $(foreach dir, $(MANDIR), $(test_dir))$/;"	m
MANDIR	Makefile	/^  MANDIR := \/usr\/man$/;"	m
MANDIR	Makefile	/^  MANDIR := \/usr\/share\/man \/usr\/man$/;"	m
MANFILE	Makefile	/^MANFILE = $(TARGET:.ko=.$(MANSECTION))$/;"	m
MANFILE	Makefile	/^MANFILE = $(TARGET:.o=.$(MANSECTION))$/;"	m
MANPATH	Makefile	/^  MANPATH := $(shell (manpath 2>\/dev\/null || echo $MANPATH) | sed 's\/:\/ \/g')$/;"	m
MANSECTION	Makefile	/^MANSECTION = 7$/;"	m
MASTER_DISABLE_TIMEOUT	e1000_defines.h	652;"	d
MAXIMUM_ETHERNET_VLAN_SIZE	igb.h	171;"	d
MAX_EMULATION_MAC_ADDRS	igb.h	122;"	d
MAX_INTMODE	igb_param.c	90;"	d	file:
MAX_ITR	igb_param.c	80;"	d	file:
MAX_JUMBO_FRAME_SIZE	e1000_defines.h	425;"	d
MAX_LLIPORT	igb_param.c	104;"	d	file:
MAX_LLIPUSH	igb_param.c	116;"	d	file:
MAX_LLISIZE	igb_param.c	128;"	d	file:
MAX_MTA_REG	e1000_hw.h	624;"	d
MAX_NUMNODES	kcompat.h	1315;"	d
MAX_NUMNODES	kcompat.h	1317;"	d
MAX_NUM_LIST_OPTS	igb_param.c	42;"	d	file:
MAX_NUM_VFS	e1000_82575.h	396;"	d
MAX_PHY_MULTI_PAGE_REG	e1000_defines.h	1137;"	d
MAX_PHY_REG_ADDRESS	e1000_defines.h	1136;"	d
MAX_PS_BUFFERS	e1000_hw.h	256;"	d
MAX_QUEUE_PAIRS	igb_param.c	207;"	d	file:
MAX_Q_VECTORS	igb.h	111;"	d
MAX_RSS	igb_param.c	140;"	d	file:
MAX_SRIOV	igb_param.c	164;"	d	file:
MAX_STD_JUMBO_FRAME_SIZE	igb_main.c	5586;"	d	file:
MAX_VMDQ	igb_param.c	152;"	d	file:
MDIO_EEE_1000KX	kcompat.h	3536;"	d
MDIO_EEE_1000T	kcompat.h	3530;"	d
MDIO_EEE_100TX	kcompat.h	3527;"	d
MDIO_EEE_10GKR	kcompat.h	3542;"	d
MDIO_EEE_10GKX4	kcompat.h	3539;"	d
MDIO_EEE_10GT	kcompat.h	3533;"	d
MDIO_OWNERSHIP_TIMEOUT	e1000_defines.h	656;"	d
MDIO_PHY_ID_DEVAD	kcompat.h	2634;"	d
MDIO_PHY_ID_PRTAD	kcompat.h	2631;"	d
MII_ADVERTISE	kcompat.h	778;"	d
MII_BMCR	kcompat.h	774;"	d
MII_BMSR	kcompat.h	775;"	d
MII_CR_AUTO_NEG_EN	e1000_defines.h	820;"	d
MII_CR_COLL_TEST_ENABLE	e1000_defines.h	815;"	d
MII_CR_FULL_DUPLEX	e1000_defines.h	816;"	d
MII_CR_ISOLATE	e1000_defines.h	818;"	d
MII_CR_LOOPBACK	e1000_defines.h	822;"	d
MII_CR_POWER_DOWN	e1000_defines.h	819;"	d
MII_CR_RESET	e1000_defines.h	823;"	d
MII_CR_RESTART_AUTO_NEG	e1000_defines.h	817;"	d
MII_CR_SPEED_10	e1000_defines.h	826;"	d
MII_CR_SPEED_100	e1000_defines.h	825;"	d
MII_CR_SPEED_1000	e1000_defines.h	824;"	d
MII_CR_SPEED_SELECT_LSB	e1000_defines.h	821;"	d
MII_CR_SPEED_SELECT_MSB	e1000_defines.h	814;"	d
MII_CTRL1000	kcompat.h	1688;"	d
MII_ESTATUS	kcompat.h	1736;"	d
MII_EXPANSION	kcompat.h	780;"	d
MII_LPA	kcompat.h	779;"	d
MII_PHYSID1	kcompat.h	776;"	d
MII_PHYSID2	kcompat.h	777;"	d
MII_RESV1	kcompat.h	214;"	d
MII_SR_100T2_FD_CAPS	e1000_defines.h	838;"	d
MII_SR_100T2_HD_CAPS	e1000_defines.h	837;"	d
MII_SR_100T4_CAPS	e1000_defines.h	843;"	d
MII_SR_100X_FD_CAPS	e1000_defines.h	842;"	d
MII_SR_100X_HD_CAPS	e1000_defines.h	841;"	d
MII_SR_10T_FD_CAPS	e1000_defines.h	840;"	d
MII_SR_10T_HD_CAPS	e1000_defines.h	839;"	d
MII_SR_AUTONEG_CAPS	e1000_defines.h	832;"	d
MII_SR_AUTONEG_COMPLETE	e1000_defines.h	834;"	d
MII_SR_EXTENDED_CAPS	e1000_defines.h	829;"	d
MII_SR_EXTENDED_STATUS	e1000_defines.h	836;"	d
MII_SR_JABBER_DETECT	e1000_defines.h	830;"	d
MII_SR_LINK_STATUS	e1000_defines.h	831;"	d
MII_SR_PREAMBLE_SUPPRESS	e1000_defines.h	835;"	d
MII_SR_REMOTE_FAULT	e1000_defines.h	833;"	d
MII_STAT1000	kcompat.h	1689;"	d
MIN	igb_main.c	66;"	d	file:
MIN_INTMODE	igb_param.c	91;"	d	file:
MIN_ITR	igb_param.c	82;"	d	file:
MIN_LLIPORT	igb_param.c	105;"	d	file:
MIN_LLIPUSH	igb_param.c	117;"	d	file:
MIN_LLISIZE	igb_param.c	129;"	d	file:
MIN_NUM_XMITS	e1000_defines.h	473;"	d
MIN_QUEUE_PAIRS	igb_param.c	208;"	d	file:
MIN_RSS	igb_param.c	141;"	d	file:
MIN_SRIOV	igb_param.c	165;"	d	file:
MIN_VMDQ	igb_param.c	153;"	d	file:
MODULE_INFO	kcompat.h	1289;"	d
MODULE_LICENSE	kcompat.h	844;"	d
MODULE_VERSION	kcompat.h	1399;"	d
MSEC_PER_SEC	kcompat.h	1496;"	d
NAPI	kcompat.h	1014;"	d
NAPI	kcompat.h	59;"	d
NAPI	kcompat.h	63;"	d
NETDEV_CLASS_DEV	kcompat.h	2064;"	d
NETDEV_TX_BUSY	kcompat.h	1590;"	d
NETDEV_TX_LOCKED	kcompat.h	1593;"	d
NETDEV_TX_OK	kcompat.h	1587;"	d
NETIF_F_FCOE_MTU	kcompat.h	2681;"	d
NETIF_F_LLTX	kcompat.h	1637;"	d
NETIF_F_LRO	kcompat.h	193;"	d
NETIF_F_MULTI_QUEUE	kcompat.h	2496;"	d
NETIF_F_NTUPLE	kcompat.h	197;"	d
NETIF_F_RXALL	kcompat.h	3477;"	d
NETIF_F_RXCSUM	kcompat.h	3265;"	d
NETIF_F_RXFCS	kcompat.h	3474;"	d
NETIF_F_SCTP_CSUM	kcompat.h	189;"	d
NETIF_MSG_DRV	kcompat.h	/^	NETIF_MSG_DRV		= 0x0001,$/;"	e	enum:__anon11
NETIF_MSG_HW	kcompat.h	/^	NETIF_MSG_HW		= 0x2000,$/;"	e	enum:__anon11
NETIF_MSG_HW	kcompat.h	995;"	d
NETIF_MSG_IFDOWN	kcompat.h	/^	NETIF_MSG_IFDOWN	= 0x0010,$/;"	e	enum:__anon11
NETIF_MSG_IFUP	kcompat.h	/^	NETIF_MSG_IFUP		= 0x0020,$/;"	e	enum:__anon11
NETIF_MSG_INTR	kcompat.h	/^	NETIF_MSG_INTR		= 0x0200,$/;"	e	enum:__anon11
NETIF_MSG_LINK	kcompat.h	/^	NETIF_MSG_LINK		= 0x0004,$/;"	e	enum:__anon11
NETIF_MSG_PKTDATA	kcompat.h	/^	NETIF_MSG_PKTDATA	= 0x1000,$/;"	e	enum:__anon11
NETIF_MSG_PROBE	kcompat.h	/^	NETIF_MSG_PROBE		= 0x0002,$/;"	e	enum:__anon11
NETIF_MSG_RX_ERR	kcompat.h	/^	NETIF_MSG_RX_ERR	= 0x0040,$/;"	e	enum:__anon11
NETIF_MSG_RX_STATUS	kcompat.h	/^	NETIF_MSG_RX_STATUS	= 0x0800,$/;"	e	enum:__anon11
NETIF_MSG_TIMER	kcompat.h	/^	NETIF_MSG_TIMER		= 0x0008,$/;"	e	enum:__anon11
NETIF_MSG_TX_DONE	kcompat.h	/^	NETIF_MSG_TX_DONE	= 0x0400,$/;"	e	enum:__anon11
NETIF_MSG_TX_ERR	kcompat.h	/^	NETIF_MSG_TX_ERR	= 0x0080,$/;"	e	enum:__anon11
NETIF_MSG_TX_QUEUED	kcompat.h	/^	NETIF_MSG_TX_QUEUED	= 0x0100,$/;"	e	enum:__anon11
NETIF_MSG_WOL	kcompat.h	/^	NETIF_MSG_WOL		= 0x4000,$/;"	e	enum:__anon11
NETIF_MSG_WOL	kcompat.h	996;"	d
NET_IP_ALIGN	kcompat.h	1644;"	d
NET_IP_ALIGN	kcompat.h	3084;"	d
NET_IP_ALIGN	kcompat.h	3086;"	d
NET_SKB_PAD	kcompat.h	1837;"	d
NET_SKB_PAD	kcompat.h	3090;"	d
NET_SKB_PAD	kcompat.h	3094;"	d
NET_SKB_PAD	kcompat.h	3096;"	d
NEWER_PM	kcompat.h	2428;"	d
NON_Q_VECTORS	igb.h	110;"	d
NSEC_PER_SEC	kcompat.h	1374;"	d
NUMTCS_RETURNS_U8	kcompat.h	3481;"	d
NVM_82580_LAN_FUNC_OFFSET	e1000_defines.h	1051;"	d
NVM_A8_OPCODE_SPI	e1000_defines.h	1090;"	d
NVM_ALT_MAC_ADDR_PTR	e1000_defines.h	1041;"	d
NVM_CFG	e1000_defines.h	1040;"	d
NVM_CHECKSUM_REG	e1000_defines.h	1042;"	d
NVM_COMB_VER_MASK	e1000_defines.h	987;"	d
NVM_COMB_VER_OFF	e1000_defines.h	980;"	d
NVM_COMB_VER_PTR	e1000_defines.h	981;"	d
NVM_COMB_VER_SHFT	e1000_defines.h	990;"	d
NVM_COMPAT	e1000_defines.h	972;"	d
NVM_COMPATIBILITY_BIT_MASK	e1000_defines.h	1044;"	d
NVM_COMPATIBILITY_REG_3	e1000_defines.h	1043;"	d
NVM_COMPAT_LOM	e1000_defines.h	1071;"	d
NVM_COMPAT_VALID_CSUM	e1000_defines.h	1020;"	d
NVM_DEV_ID	e1000_defines.h	1013;"	d
NVM_ETRACK_HIWORD	e1000_defines.h	979;"	d
NVM_ETRACK_SHIFT	e1000_defines.h	992;"	d
NVM_ETRACK_VALID	e1000_defines.h	993;"	d
NVM_ETRACK_WORD	e1000_defines.h	978;"	d
NVM_ETS_CFG	e1000_defines.h	1023;"	d
NVM_ETS_DATA_HTHRESH_MASK	e1000_defines.h	1034;"	d
NVM_ETS_DATA_INDEX_MASK	e1000_defines.h	1032;"	d
NVM_ETS_DATA_INDEX_SHIFT	e1000_defines.h	1033;"	d
NVM_ETS_DATA_LOC_MASK	e1000_defines.h	1030;"	d
NVM_ETS_DATA_LOC_SHIFT	e1000_defines.h	1031;"	d
NVM_ETS_LTHRES_DELTA_MASK	e1000_defines.h	1024;"	d
NVM_ETS_LTHRES_DELTA_SHIFT	e1000_defines.h	1025;"	d
NVM_ETS_NUM_SENSORS_MASK	e1000_defines.h	1029;"	d
NVM_ETS_TYPE_EMC	e1000_defines.h	1028;"	d
NVM_ETS_TYPE_MASK	e1000_defines.h	1026;"	d
NVM_ETS_TYPE_SHIFT	e1000_defines.h	1027;"	d
NVM_FUTURE_INIT_WORD1	e1000_defines.h	977;"	d
NVM_FUTURE_INIT_WORD1_VALID_CSUM	e1000_defines.h	1021;"	d
NVM_HEX_CONV	e1000_defines.h	995;"	d
NVM_HEX_TENS	e1000_defines.h	996;"	d
NVM_ID_LED_SETTINGS	e1000_defines.h	973;"	d
NVM_IMAGE_ID_MASK	e1000_defines.h	986;"	d
NVM_INIT_3GIO_3	e1000_defines.h	1037;"	d
NVM_INIT_CONTROL2_REG	e1000_defines.h	1035;"	d
NVM_INIT_CONTROL3_PORT_A	e1000_defines.h	1039;"	d
NVM_INIT_CONTROL3_PORT_B	e1000_defines.h	1036;"	d
NVM_INIT_CTRL_2	e1000_defines.h	1015;"	d
NVM_INIT_CTRL_2_DEFAULT_I211	e1000_i210.h	87;"	d
NVM_INIT_CTRL_4	e1000_defines.h	1016;"	d
NVM_INIT_CTRL_4_DEFAULT_I211	e1000_i210.h	88;"	d
NVM_LED_0_2_CFG	e1000_defines.h	1018;"	d
NVM_LED_0_2_CFG_DEFAULT_I211	e1000_i210.h	90;"	d
NVM_LED_1_CFG	e1000_defines.h	1017;"	d
NVM_LED_1_CFG_DEFAULT_I211	e1000_i210.h	89;"	d
NVM_MAC_ADDR	e1000_defines.h	1010;"	d
NVM_MAJOR_MASK	e1000_defines.h	984;"	d
NVM_MAJOR_SHIFT	e1000_defines.h	988;"	d
NVM_MAX_RETRY_SPI	e1000_defines.h	1087;"	d
NVM_MINOR_MASK	e1000_defines.h	985;"	d
NVM_MINOR_SHIFT	e1000_defines.h	989;"	d
NVM_NEW_DEC_MASK	e1000_defines.h	994;"	d
NVM_PBA_OFFSET_0	e1000_defines.h	1080;"	d
NVM_PBA_OFFSET_1	e1000_defines.h	1081;"	d
NVM_PBA_PTR_GUARD	e1000_defines.h	1082;"	d
NVM_RDSR_OPCODE_SPI	e1000_defines.h	1092;"	d
NVM_READ_OPCODE_SPI	e1000_defines.h	1088;"	d
NVM_RESERVED_WORD	e1000_defines.h	1083;"	d
NVM_STATUS_RDY_SPI	e1000_defines.h	1095;"	d
NVM_SUB_DEV_ID	e1000_defines.h	1011;"	d
NVM_SUB_VEN_ID	e1000_defines.h	1012;"	d
NVM_SUM	e1000_defines.h	1077;"	d
NVM_SWDEF_PINS_CTRL_PORT_0	e1000_defines.h	1038;"	d
NVM_VEN_ID	e1000_defines.h	1014;"	d
NVM_VERSION	e1000_defines.h	974;"	d
NVM_VER_INVALID	e1000_defines.h	991;"	d
NVM_WORD0F_ASM_DIR	e1000_defines.h	1065;"	d
NVM_WORD0F_PAUSE	e1000_defines.h	1064;"	d
NVM_WORD0F_PAUSE_MASK	e1000_defines.h	1063;"	d
NVM_WORD1A_ASPM_MASK	e1000_defines.h	1068;"	d
NVM_WORD24_82580_LNK_MODE_OFFSET	e1000_defines.h	1059;"	d
NVM_WORD24_COM_MDIO	e1000_defines.h	1054;"	d
NVM_WORD24_EXT_MDIO	e1000_defines.h	1055;"	d
NVM_WORD24_LNK_MODE_OFFSET	e1000_defines.h	1057;"	d
NVM_WORD_SIZE_BASE_SHIFT	e1000_defines.h	1084;"	d
NVM_WREN_OPCODE_SPI	e1000_defines.h	1091;"	d
NVM_WRITE_OPCODE_SPI	e1000_defines.h	1089;"	d
NWAY_AR_100T4_CAPS	e1000_defines.h	851;"	d
NWAY_AR_100TX_FD_CAPS	e1000_defines.h	850;"	d
NWAY_AR_100TX_HD_CAPS	e1000_defines.h	849;"	d
NWAY_AR_10T_FD_CAPS	e1000_defines.h	848;"	d
NWAY_AR_10T_HD_CAPS	e1000_defines.h	847;"	d
NWAY_AR_ASM_DIR	e1000_defines.h	853;"	d
NWAY_AR_NEXT_PAGE	e1000_defines.h	855;"	d
NWAY_AR_PAUSE	e1000_defines.h	852;"	d
NWAY_AR_REMOTE_FAULT	e1000_defines.h	854;"	d
NWAY_AR_SELECTOR_FIELD	e1000_defines.h	846;"	d
NWAY_ER_LP_NEXT_PAGE_CAPS	e1000_defines.h	874;"	d
NWAY_ER_LP_NWAY_CAPS	e1000_defines.h	871;"	d
NWAY_ER_NEXT_PAGE_CAPS	e1000_defines.h	873;"	d
NWAY_ER_PAGE_RXD	e1000_defines.h	872;"	d
NWAY_ER_PAR_DETECT_FAULT	e1000_defines.h	875;"	d
NWAY_LPAR_100T4_CAPS	e1000_defines.h	863;"	d
NWAY_LPAR_100TX_FD_CAPS	e1000_defines.h	862;"	d
NWAY_LPAR_100TX_HD_CAPS	e1000_defines.h	861;"	d
NWAY_LPAR_10T_FD_CAPS	e1000_defines.h	860;"	d
NWAY_LPAR_10T_HD_CAPS	e1000_defines.h	859;"	d
NWAY_LPAR_ACKNOWLEDGE	e1000_defines.h	867;"	d
NWAY_LPAR_ASM_DIR	e1000_defines.h	865;"	d
NWAY_LPAR_NEXT_PAGE	e1000_defines.h	868;"	d
NWAY_LPAR_PAUSE	e1000_defines.h	864;"	d
NWAY_LPAR_REMOTE_FAULT	e1000_defines.h	866;"	d
NWAY_LPAR_SELECTOR_FIELD	e1000_defines.h	858;"	d
OPTION_DISABLED	igb_param.c	40;"	d	file:
OPTION_ENABLED	igb_param.c	41;"	d	file:
OPTION_UNSET	igb_param.c	39;"	d	file:
OUI_LEN	igb.h	123;"	d
PATTERN_TEST	igb_regtest.h	48;"	d
PCI	Makefile	/^PCI := $(shell $(CC) $(EXTRA_CFLAGS) -E -dM $(CONFIG_FILE) | \\$/;"	m
PCIE_CONFIG_SPACE_LEN	kcompat.h	1965;"	d
PCIE_DEVICE_CONTROL2	e1000_defines.h	1121;"	d
PCIE_DEVICE_CONTROL2_16ms	e1000_defines.h	1129;"	d
PCIE_LINK_SPEED_2500	e1000_defines.h	1127;"	d
PCIE_LINK_SPEED_5000	e1000_defines.h	1128;"	d
PCIE_LINK_SPEED_MASK	e1000_defines.h	1126;"	d
PCIE_LINK_STATE_L0S	kcompat.h	145;"	d
PCIE_LINK_STATE_L1	kcompat.h	148;"	d
PCIE_LINK_STATUS	e1000_defines.h	1120;"	d
PCIE_LINK_STATUS	kcompat.h	1967;"	d
PCIE_LINK_WIDTH_MASK	e1000_defines.h	1124;"	d
PCIE_LINK_WIDTH_SHIFT	e1000_defines.h	1125;"	d
PCIE_NO_SNOOP_ALL	e1000_defines.h	794;"	d
PCI_CAP_ID_EXP	kcompat.h	141;"	d
PCI_COMMAND_REGISTER	e1000_osdep.h	62;"	d
PCI_CONFIG_SPACE_LEN	kcompat.h	1966;"	d
PCI_D0	kcompat.h	1627;"	d
PCI_D1	kcompat.h	1628;"	d
PCI_D2	kcompat.h	1629;"	d
PCI_D3cold	kcompat.h	1631;"	d
PCI_D3hot	kcompat.h	1630;"	d
PCI_DEVICE	kcompat.h	227;"	d
PCI_DRAM_OFFSET	kcompat.c	390;"	d	file:
PCI_EXP_DEVCAP	kcompat.h	1479;"	d
PCI_EXP_DEVCAP2	kcompat.h	2544;"	d
PCI_EXP_DEVCTL	kcompat.h	1466;"	d
PCI_EXP_DEVCTL2	kcompat.h	2545;"	d
PCI_EXP_DEVCTL_CERE	kcompat.h	1469;"	d
PCI_EXP_DEVSTA	kcompat.h	1480;"	d
PCI_EXP_FLAGS	kcompat.h	1471;"	d
PCI_EXP_FLAGS_SLOT	kcompat.h	1478;"	d
PCI_EXP_FLAGS_TYPE	kcompat.h	1473;"	d
PCI_EXP_FLAGS_VERS	kcompat.h	1472;"	d
PCI_EXP_LNKCAP	kcompat.h	1672;"	d
PCI_EXP_LNKCAP2	kcompat.h	3524;"	d
PCI_EXP_LNKCAP_ASPMS	kcompat.h	2402;"	d
PCI_EXP_LNKCTL	kcompat.h	1635;"	d
PCI_EXP_LNKCTL2	kcompat.h	2610;"	d
PCI_EXP_LNKCTL_ASPMC	kcompat.h	2572;"	d
PCI_EXP_LNKCTL_ASPM_L0S	kcompat.h	3697;"	d
PCI_EXP_LNKCTL_ASPM_L1	kcompat.h	3700;"	d
PCI_EXP_LNKSTA	kcompat.h	1673;"	d
PCI_EXP_LNKSTA2	kcompat.h	3676;"	d
PCI_EXP_RTCAP	kcompat.h	1678;"	d
PCI_EXP_RTCTL	kcompat.h	1677;"	d
PCI_EXP_RTSTA	kcompat.h	1679;"	d
PCI_EXP_SLTCAP	kcompat.h	1674;"	d
PCI_EXP_SLTCTL	kcompat.h	1675;"	d
PCI_EXP_SLTSTA	kcompat.h	1676;"	d
PCI_EXP_SLTSTA_PDS	kcompat.h	2564;"	d
PCI_EXP_TYPE_DOWNSTREAM	kcompat.h	1477;"	d
PCI_EXP_TYPE_ENDPOINT	kcompat.h	1474;"	d
PCI_EXP_TYPE_LEG_END	kcompat.h	1475;"	d
PCI_EXP_TYPE_RC_EC	kcompat.h	3454;"	d
PCI_EXP_TYPE_RC_EC	kcompat.h	3455;"	d
PCI_EXP_TYPE_ROOT_PORT	kcompat.h	1476;"	d
PCI_HEADER_TYPE_MULTIFUNC	e1000_defines.h	1123;"	d
PCI_HEADER_TYPE_REGISTER	e1000_defines.h	1119;"	d
PCI_LTR_SCALE_MASK	kcompat.h	3333;"	d
PCI_LTR_SCALE_SHIFT	kcompat.h	3336;"	d
PCI_LTR_VALUE_MASK	kcompat.h	3330;"	d
PCI_VDEVICE	kcompat.h	2016;"	d
PCI_VENDOR_ID_INTEL	kcompat.h	2022;"	d
PFX	igb.h	69;"	d
PHY_1000T_CTRL	e1000_defines.h	916;"	d
PHY_1000T_STATUS	e1000_defines.h	917;"	d
PHY_AUTONEG_ADV	e1000_defines.h	911;"	d
PHY_AUTONEG_EXP	e1000_defines.h	913;"	d
PHY_AUTO_NEG_LIMIT	e1000_defines.h	649;"	d
PHY_CFG_TIMEOUT	e1000_defines.h	654;"	d
PHY_CONTROL	e1000_defines.h	907;"	d
PHY_CONTROL_LB	e1000_defines.h	920;"	d
PHY_EXT_STATUS	e1000_defines.h	918;"	d
PHY_FORCE_LIMIT	e1000_defines.h	650;"	d
PHY_ID1	e1000_defines.h	909;"	d
PHY_ID2	e1000_defines.h	910;"	d
PHY_IDLE_ERROR_COUNT_MASK	igb_main.c	5645;"	d	file:
PHY_LP_ABILITY	e1000_defines.h	912;"	d
PHY_LP_NEXT_PAGE	e1000_defines.h	915;"	d
PHY_NEXT_PAGE_TX	e1000_defines.h	914;"	d
PHY_REG_MASK	e1000_phy.h	115;"	d
PHY_REVISION_MASK	e1000_defines.h	1135;"	d
PHY_STATUS	e1000_defines.h	908;"	d
PMSG_SUSPEND	kcompat.h	107;"	d
PMSG_SUSPEND	kcompat.h	1634;"	d
PM_QOS_CPU_DMA_LATENCY	kcompat.h	2335;"	d
PM_QOS_DEFAULT_VALUE	kcompat.h	2339;"	d
PM_QOS_DEFAULT_VALUE	kcompat.h	2347;"	d
PORT_DA	kcompat.h	2770;"	d
PORT_NONE	kcompat.h	2773;"	d
PORT_OTHER	kcompat.h	2628;"	d
PS_PAGE_BUFFERS	e1000_hw.h	259;"	d
PTR_ALIGN	kcompat.h	2199;"	d
Q_IDX_82576	igb_main.c	383;"	d	file:
REG_PATTERN_TEST	igb_ethtool.c	1007;"	d	file:
REG_SET_AND_CHECK	igb_ethtool.c	1013;"	d	file:
REQ_RX_DESCRIPTOR_MULTIPLE	e1000_defines.h	33;"	d
REQ_TX_DESCRIPTOR_MULTIPLE	e1000_defines.h	32;"	d
RHC	Makefile	/^RHC := $(KSRC)\/include\/linux\/rhconfig.h$/;"	m
RHEL_RELEASE_CODE	kcompat.h	681;"	d
RHEL_RELEASE_CODE	kcompat.h	683;"	d
RHEL_RELEASE_CODE	kcompat.h	685;"	d
RHEL_RELEASE_CODE	kcompat.h	690;"	d
RHEL_RELEASE_VERSION	kcompat.h	670;"	d
SET_ETHTOOL_OPS	kcompat_ethtool.c	109;"	d	file:
SET_ETHTOOL_OPS	kcompat_ethtool.c	110;"	d	file:
SET_MODULE_OWNER	kcompat.h	2191;"	d
SET_MODULE_OWNER	kcompat.h	2192;"	d
SET_NETDEV_DEV	kcompat.h	160;"	d
SET_READ_TEST	igb_regtest.h	49;"	d
SKBTX_HW_TSTAMP	kcompat.h	3210;"	d
SKBTX_IN_PROGRESS	kcompat.h	3211;"	d
SKB_SHARED_TX_IS_UNION	kcompat.h	3212;"	d
SLE_VERSION	kcompat.h	695;"	d
SLE_VERSION_CODE	kcompat.h	700;"	d
SLE_VERSION_CODE	kcompat.h	703;"	d
SLE_VERSION_CODE	kcompat.h	707;"	d
SLE_VERSION_CODE	kcompat.h	711;"	d
SMP	Makefile	/^  SMP := 0$/;"	m
SMP	Makefile	/^SMP := $(shell $(CC) $(EXTRA_CFLAGS) -E -dM $(CONFIG_FILE) | \\$/;"	m
SOPASS_MAX	kcompat.h	429;"	d
SPEED_10	e1000_defines.h	311;"	d
SPEED_100	e1000_defines.h	312;"	d
SPEED_1000	e1000_defines.h	313;"	d
SPEED_10000	kcompat_ethtool.c	63;"	d	file:
SPEED_10000	kcompat_ethtool.c	64;"	d	file:
SPEED_2500	e1000_defines.h	314;"	d
SPEED_UNKNOWN	kcompat.h	3430;"	d
SR_1000T_ASYM_PAUSE_DIR	e1000_defines.h	895;"	d
SR_1000T_IDLE_ERROR_CNT	e1000_defines.h	894;"	d
SR_1000T_LOCAL_RX_STATUS	e1000_defines.h	899;"	d
SR_1000T_LP_FD_CAPS	e1000_defines.h	897;"	d
SR_1000T_LP_HD_CAPS	e1000_defines.h	896;"	d
SR_1000T_MS_CONFIG_FAULT	e1000_defines.h	901;"	d
SR_1000T_MS_CONFIG_RES	e1000_defines.h	900;"	d
SR_1000T_PHY_EXCESSIVE_IDLE_ERR_COUNT	e1000_defines.h	903;"	d
SR_1000T_REMOTE_RX_STATUS	e1000_defines.h	898;"	d
SUPPORTED_10000baseKR_Full	kcompat.h	2647;"	d
SUPPORTED_10000baseKX4_Full	kcompat.h	2644;"	d
SUPPORTED_10000baseT_Full	kcompat.h	1025;"	d
SUPPORTED_10000baseT_Full	kcompat_ethtool.c	59;"	d	file:
SUPPORTED_10000baseT_Full	kcompat_ethtool.c	60;"	d	file:
SUPPORTED_1000baseKX_Full	kcompat.h	2641;"	d
SUPPORTED_2500baseX_Full	kcompat.h	2163;"	d
SUPPORTED_40000baseCR4_Full	kcompat.h	3555;"	d
SUPPORTED_40000baseKR4_Full	kcompat.h	3554;"	d
SUPPORTED_40000baseLR4_Full	kcompat.h	3557;"	d
SUPPORTED_40000baseSR4_Full	kcompat.h	3556;"	d
SUPPORTED_Asym_Pause	kcompat.h	1744;"	d
SUPPORTED_Pause	kcompat.h	1743;"	d
TABLE32_TEST	igb_regtest.h	51;"	d
TABLE64_TEST_HI	igb_regtest.h	53;"	d
TABLE64_TEST_LO	igb_regtest.h	52;"	d
TARGET	Makefile	/^TARGET = $(DRIVER_NAME).ko$/;"	m
TARGET	Makefile	/^TARGET = $(DRIVER_NAME).o$/;"	m
TBI_ACCEPT	e1000_api.h	140;"	d
TRUE	kcompat.h	111;"	d
TRUE	kcompat.h	113;"	d
TXD_USE_COUNT	igb.h	283;"	d
TX_WAKE_THRESHOLD	igb_main.c	7073;"	d	file:
UDP_RSS_FLAGS	igb_ethtool.c	2631;"	d	file:
USE_CONST_DEV_UC_CHAR	kcompat.h	3686;"	d
USE_CONST_DEV_UC_CHAR	kcompat.h	3691;"	d
USE_DEFAULT_FDB_DEL_DUMP	kcompat.h	3783;"	d
USE_LEGACY_PM_SUPPORT	kcompat.h	3345;"	d
USE_REBOOT_NOTIFIER	kcompat.h	1685;"	d
VERSION_FILE	Makefile	/^  VERSION_FILE := $(firstword $(VSP))$/;"	m
VERSION_SUFFIX	igb_main.c	63;"	d	file:
VLAN_ETH_FRAME_LEN	kcompat.h	264;"	d
VLAN_ETH_HLEN	kcompat.h	260;"	d
VLAN_HLEN	kcompat.h	256;"	d
VLAN_N_VID	kcompat.h	3162;"	d
VLAN_PRIO_SHIFT	kcompat.h	327;"	d
VLAN_TAG_SIZE	e1000_defines.h	608;"	d
VSP	Makefile	/^VSP :=  $(KOBJ)\/include\/generated\/utsrelease.h \\$/;"	m
VSP	Makefile	/^VSP := $(foreach file, $(VSP), $(test_file))$/;"	m
WAKE_ARP	kcompat.h	1564;"	d
WAKE_BCAST	kcompat.h	1563;"	d
WAKE_MAGIC	kcompat.h	1565;"	d
WAKE_MAGICSECURE	kcompat.h	1566;"	d
WAKE_MCAST	kcompat.h	1562;"	d
WAKE_PHY	kcompat.h	1560;"	d
WAKE_UCAST	kcompat.h	1561;"	d
WARN	kcompat.h	2508;"	d
WARN_ON	kcompat.h	223;"	d
WRITE_NO_TEST	igb_regtest.h	50;"	d
_82575	e1000_hw.h	/^		struct e1000_dev_spec_82575 _82575;$/;"	m	union:e1000_hw::__anon58	typeref:struct:e1000_hw::__anon58::e1000_dev_spec_82575
_Bool	kcompat.h	117;"	d
_Bool	kcompat.h	120;"	d
_E1000_82575_H_	e1000_82575.h	29;"	d
_E1000_API_H_	e1000_api.h	29;"	d
_E1000_DEFINES_H_	e1000_defines.h	29;"	d
_E1000_HW_H_	e1000_hw.h	29;"	d
_E1000_I210_H_	e1000_i210.h	29;"	d
_E1000_MAC_H_	e1000_mac.h	29;"	d
_E1000_MANAGE_H_	e1000_manage.h	29;"	d
_E1000_MBX_H_	e1000_mbx.h	29;"	d
_E1000_NVM_H_	e1000_nvm.h	29;"	d
_E1000_OSDEP_H_	e1000_osdep.h	34;"	d
_E1000_PHY_H_	e1000_phy.h	29;"	d
_E1000_REGS_H_	e1000_regs.h	29;"	d
_IGB_H_	igb.h	31;"	d
_IGB_VMDQ_H_	igb_vmdq.h	29;"	d
_KCOMPAT_H_	kcompat.h	29;"	d
__ALIGN_MASK	kcompat.h	1930;"	d
__ARG_PLACEHOLDER_1	kcompat.h	292;"	d
__ARG_PLACEHOLDER_1	kcompat.h	299;"	d
__GFP_COLD	kcompat.h	332;"	d
__GFP_COMP	kcompat.h	336;"	d
__IGB_DOWN	igb.h	/^	__IGB_DOWN$/;"	e	enum:e1000_state_t
__IGB_RESETTING	igb.h	/^	__IGB_RESETTING,$/;"	e	enum:e1000_state_t
__IGB_TESTING	igb.h	/^	__IGB_TESTING,$/;"	e	enum:e1000_state_t
__WARN_printf	kcompat.h	2504;"	d
____cacheline_aligned_in_smp	kcompat.h	882;"	d
____cacheline_aligned_in_smp	kcompat.h	884;"	d
____cacheline_internodealigned_in_smp	igb.h	/^	struct igb_ring ring[0] ____cacheline_internodealigned_in_smp;$/;"	m	struct:igb_q_vector	typeref:struct:igb_q_vector::ring
____cacheline_internodealigned_in_smp	igb.h	/^} ____cacheline_internodealigned_in_smp;$/;"	v	typeref:struct:igb_ring
____cacheline_internodealigned_in_smp	kcompat.h	1809;"	d
____cacheline_internodealigned_in_smp	kcompat.h	1811;"	d
___config_enabled	kcompat.h	296;"	d
___config_enabled	kcompat.h	303;"	d
__aligned	kcompat.h	2079;"	d
__always_unused	kcompat.h	2807;"	d
__be16	kcompat.h	1545;"	d
__be32	kcompat.h	1548;"	d
__be64	kcompat.h	1551;"	d
__bitwise	kcompat.h	1598;"	d
__config_enabled	kcompat.h	295;"	d
__config_enabled	kcompat.h	302;"	d
__devexit	kcompat.h	3727;"	d
__devexit_p	kcompat.h	3731;"	d
__devexit_p	kcompat.h	988;"	d
__devinit	kcompat.h	3718;"	d
__devinitdata	kcompat.h	3723;"	d
__e1000_access_emi_reg	e1000_82575.c	/^static s32 __e1000_access_emi_reg(struct e1000_hw *hw, u16 address,$/;"	f	file:
__e1000_access_xmdio_reg	e1000_i210.c	/^static s32 __e1000_access_xmdio_reg(struct e1000_hw *hw, u16 address,$/;"	f	file:
__e1000_read_kmrn_reg	e1000_phy.c	/^static s32 __e1000_read_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 *data,$/;"	f	file:
__e1000_read_phy_reg_igp	e1000_phy.c	/^static s32 __e1000_read_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 *data,$/;"	f	file:
__e1000_write_kmrn_reg	e1000_phy.c	/^static s32 __e1000_write_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 data,$/;"	f	file:
__e1000_write_phy_reg_igp	e1000_phy.c	/^static s32 __e1000_write_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 data,$/;"	f	file:
__force	kcompat.h	1459;"	d
__hlist_del	kcompat.h	/^static inline void __hlist_del(struct hlist_node *n)$/;"	f
__igb_close	igb_main.c	/^static int __igb_close(struct net_device *netdev, bool suspending)$/;"	f	file:
__igb_maybe_stop_tx	igb_main.c	/^static int __igb_maybe_stop_tx(struct igb_ring *tx_ring, const u16 size)$/;"	f	file:
__igb_notify_dca	igb_main.c	/^static int __igb_notify_dca(struct device *dev, void *data)$/;"	f	file:
__igb_open	igb_main.c	/^static int __igb_open(struct net_device *netdev, bool resuming)$/;"	f	file:
__igb_shutdown	igb_main.c	/^static int __igb_shutdown(struct pci_dev *pdev, bool *enable_wake,$/;"	f	file:
__iomem	kcompat.h	1490;"	d
__kc__vlan_hwaccel_put_tag	kcompat.h	/^static inline struct sk_buff *__kc__vlan_hwaccel_put_tag(struct sk_buff *skb,$/;"	f
__kc_adapter_clean	kcompat.c	/^int __kc_adapter_clean(struct net_device *netdev, int *budget)$/;"	f
__kc_netif_set_real_num_rx_queues	kcompat.h	/^static inline int __kc_netif_set_real_num_rx_queues(struct net_device *dev,$/;"	f
__kc_pci_set_master	kcompat.c	/^static void __kc_pci_set_master(struct pci_dev *pdev, bool enable)$/;"	f	file:
__kc_pci_vfs_assigned	kcompat.c	/^int __kc_pci_vfs_assigned(struct pci_dev *dev)$/;"	f
__kc_pci_vfs_assigned	kcompat.h	/^static inline int __kc_pci_vfs_assigned(struct pci_dev *dev)$/;"	f
__kc_pcie_cap_has_devctl	kcompat.c	/^static inline bool __kc_pcie_cap_has_devctl(const struct pci_dev __always_unused *dev)$/;"	f	file:
__kc_pcie_cap_has_lnkctl	kcompat.c	/^static inline bool __kc_pcie_cap_has_lnkctl(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_cap_has_rtctl	kcompat.c	/^static inline bool __kc_pcie_cap_has_rtctl(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_cap_has_sltctl	kcompat.c	/^static inline bool __kc_pcie_cap_has_sltctl(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_cap_version	kcompat.c	/^static inline int __kc_pcie_cap_version(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_capability_clear_and_set_word	kcompat.c	/^int __kc_pcie_capability_clear_and_set_word(struct pci_dev *dev, int pos,$/;"	f
__kc_pcie_capability_read_word	kcompat.c	/^int __kc_pcie_capability_read_word(struct pci_dev *dev, int pos, u16 *val)$/;"	f
__kc_pcie_capability_reg_implemented	kcompat.c	/^static bool __kc_pcie_capability_reg_implemented(struct pci_dev *dev, int pos)$/;"	f	file:
__kc_pcie_capability_write_word	kcompat.c	/^int __kc_pcie_capability_write_word(struct pci_dev *dev, int pos, u16 val)$/;"	f
__kc_skb_frag_unref	kcompat.h	/^static inline void __kc_skb_frag_unref(skb_frag_t *frag)$/;"	f
__kc_skb_queue_head_init	kcompat.h	/^static inline void __kc_skb_queue_head_init(struct sk_buff_head *list)$/;"	f
__kc_vlan_get_protocol	kcompat.h	/^static inline __be16 __kc_vlan_get_protocol(const struct sk_buff *skb)$/;"	f
__kc_warn_slowpath	kcompat.c	/^void __kc_warn_slowpath(const char *file, int line, const char *fmt, ...)$/;"	f
__le16	e1000_hw.h	213;"	d
__le16	kcompat.h	1536;"	d
__le32	e1000_hw.h	216;"	d
__le32	kcompat.h	1539;"	d
__le64	e1000_hw.h	219;"	d
__le64	kcompat.h	1542;"	d
__maybe_unused	kcompat.h	2810;"	d
__napi_schedule	kcompat.h	2274;"	d
__netdev_alloc_skb_ip_align	kcompat.h	3351;"	d
__netdev_pick_tx	kcompat.h	3779;"	d
__netif_subqueue_stopped	kcompat.h	2299;"	d
__percpu	kcompat.h	2767;"	d
__read_mostly	kcompat.h	210;"	d
__skb_frag_unref	kcompat.h	3422;"	d
__skb_queue_head_init	kcompat.h	2541;"	d
__sum16	kcompat.h	/^typedef __u16 __bitwise __sum16;$/;"	t
__this_module	igb.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__used	igb.mod.c	/^__used$/;"	v	file:
__user	kcompat.h	1089;"	d
__vlan_hwaccel_put_tag	kcompat.h	3808;"	d
__wsum	kcompat.h	/^typedef __u32 __bitwise __wsum;$/;"	t
_config_enabled	kcompat.h	294;"	d
_config_enabled	kcompat.h	301;"	d
_kc_LARGE	kcompat.c	51;"	d	file:
_kc_LEFT	kcompat.c	49;"	d	file:
_kc_PLUS	kcompat.c	47;"	d	file:
_kc_SIGN	kcompat.c	46;"	d	file:
_kc_SPACE	kcompat.c	48;"	d	file:
_kc_SPECIAL	kcompat.c	50;"	d	file:
_kc_ZEROPAD	kcompat.c	45;"	d	file:
_kc__div64_32	kcompat.c	/^uint32_t __attribute__((weak)) _kc__div64_32(uint64_t *n, uint32_t base)$/;"	f
_kc_alloc_etherdev	kcompat.c	/^_kc_alloc_etherdev(int sizeof_priv)$/;"	f
_kc_bitmap_zero	kcompat.h	/^static inline void _kc_bitmap_zero(unsigned long *dst, int nbits)$/;"	f
_kc_compare_ether_addr	kcompat.h	/^static inline unsigned _kc_compare_ether_addr(const u8 *addr1, const u8 *addr2)$/;"	f
_kc_ethtool_cmd_speed	kcompat.h	/^static inline __u32 _kc_ethtool_cmd_speed(struct ethtool_cmd *ep)$/;"	f
_kc_ethtool_cmd_speed_set	kcompat.h	/^static inline void _kc_ethtool_cmd_speed_set(struct ethtool_cmd *ep,$/;"	f
_kc_ethtool_coalesce	kcompat.h	/^struct _kc_ethtool_coalesce {$/;"	s
_kc_ethtool_flow_ext	kcompat.h	/^struct _kc_ethtool_flow_ext {$/;"	s
_kc_ethtool_flow_union	kcompat.h	/^union _kc_ethtool_flow_union {$/;"	u
_kc_ethtool_op_get_flags	kcompat.c	/^u32 _kc_ethtool_op_get_flags(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_link	kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_link(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_sg	kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_sg(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_tso	kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_tso(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_tx_csum	kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_tx_csum(struct net_device *dev)$/;"	f
_kc_ethtool_op_set_flags	kcompat.c	/^int _kc_ethtool_op_set_flags(struct net_device *dev, u32 data, u32 supported)$/;"	f
_kc_ethtool_op_set_sg	kcompat_ethtool.c	/^int _kc_ethtool_op_set_sg(struct net_device *dev, u32 data)$/;"	f
_kc_ethtool_op_set_tso	kcompat_ethtool.c	/^int _kc_ethtool_op_set_tso(struct net_device *dev, u32 data)$/;"	f
_kc_ethtool_op_set_tx_csum	kcompat_ethtool.c	/^int _kc_ethtool_op_set_tx_csum(struct net_device *dev, u32 data)$/;"	f
_kc_ethtool_ops	kcompat_ethtool.c	/^struct _kc_ethtool_ops {$/;"	s	file:
_kc_ethtool_pauseparam	kcompat.h	/^struct _kc_ethtool_pauseparam {$/;"	s
_kc_ethtool_regs	kcompat.h	/^struct _kc_ethtool_regs {$/;"	s
_kc_ethtool_ringparam	kcompat.h	/^struct _kc_ethtool_ringparam {$/;"	s
_kc_ethtool_rx_flow_spec	kcompat.h	/^struct _kc_ethtool_rx_flow_spec {$/;"	s
_kc_flags_dup_features	kcompat.c	/^static const u32 _kc_flags_dup_features =$/;"	v	file:
_kc_free_netdev	kcompat.c	/^void _kc_free_netdev(struct net_device *netdev)$/;"	f
_kc_generic_mii_ioctl	kcompat_ethtool.c	/^int _kc_generic_mii_ioctl(struct mii_if_info *mii_if,$/;"	f
_kc_hashrnd	kcompat.h	3777;"	d
_kc_hex_dump_to_buffer	kcompat.c	/^static void _kc_hex_dump_to_buffer(const void *buf, size_t len, int rowsize,$/;"	f	file:
_kc_i2c_new_device	kcompat.c	/^_kc_i2c_new_device(struct i2c_adapter *adap, struct i2c_board_info const *info)$/;"	f
_kc_if_mii	kcompat.h	/^static inline struct mii_ioctl_data *_kc_if_mii(struct ifreq *rq)$/;"	f
_kc_is_multicast_ether_addr	kcompat.h	/^static inline int _kc_is_multicast_ether_addr(const u8 *addr)$/;"	f
_kc_is_valid_ether_addr	kcompat.c	/^_kc_is_valid_ether_addr(u8 *addr)$/;"	f
_kc_is_zero_ether_addr	kcompat.h	/^static inline int _kc_is_zero_ether_addr(const u8 *addr)$/;"	f
_kc_jiffies_to_msecs	kcompat.h	/^static inline unsigned int _kc_jiffies_to_msecs(const unsigned long j)$/;"	f
_kc_jiffies_to_usecs	kcompat.h	/^static inline unsigned int _kc_jiffies_to_usecs(const unsigned long j)$/;"	f
_kc_kmemdup	kcompat.c	/^void *_kc_kmemdup(const void *src, size_t len, unsigned gfp)$/;"	f
_kc_kstrdup	kcompat.c	/^char *_kc_kstrdup(const char *s, unsigned int gfp)$/;"	f
_kc_kzalloc	kcompat.c	/^void *_kc_kzalloc(size_t size, int flags)$/;"	f
_kc_mii_check_link	kcompat_ethtool.c	/^void _kc_mii_check_link (struct mii_if_info *mii)$/;"	f
_kc_mii_ethtool_gset	kcompat_ethtool.c	/^int _kc_mii_ethtool_gset(struct mii_if_info *mii, struct ethtool_cmd *ecmd)$/;"	f
_kc_mii_ethtool_sset	kcompat_ethtool.c	/^int _kc_mii_ethtool_sset(struct mii_if_info *mii, struct ethtool_cmd *ecmd)$/;"	f
_kc_mii_if_info	kcompat_ethtool.c	/^struct _kc_mii_if_info {$/;"	s	file:
_kc_mii_link_ok	kcompat_ethtool.c	/^int _kc_mii_link_ok (struct mii_if_info *mii)$/;"	f
_kc_mii_nway_restart	kcompat_ethtool.c	/^int _kc_mii_nway_restart (struct mii_if_info *mii)$/;"	f
_kc_msecs_to_jiffies	kcompat.h	/^static inline unsigned long _kc_msecs_to_jiffies(const unsigned int m)$/;"	f
_kc_msleep_interruptible	kcompat.h	/^static inline unsigned long _kc_msleep_interruptible(unsigned int msecs)$/;"	f
_kc_net_dev_ext	kcompat_ethtool.c	/^struct _kc_net_dev_ext {$/;"	s	file:
_kc_netdev_alloc_skb_ip_align	kcompat.h	/^static inline struct sk_buff *_kc_netdev_alloc_skb_ip_align(struct net_device *dev,$/;"	f
_kc_netdev_name	kcompat.h	/^static inline const char *_kc_netdev_name(const struct net_device *dev)$/;"	f
_kc_netdev_to_pdev	kcompat.c	/^struct pci_dev *_kc_netdev_to_pdev(struct net_device *netdev)$/;"	f
_kc_netif_msg_init	kcompat.h	/^static inline u32 _kc_netif_msg_init(int debug_value, int default_msg_enable_bits)$/;"	f
_kc_netif_poll_disable	kcompat.h	/^static inline void _kc_netif_poll_disable(struct net_device *netdev)$/;"	f
_kc_netif_poll_enable	kcompat.h	/^static inline void _kc_netif_poll_enable(struct net_device *netdev)$/;"	f
_kc_netif_set_real_num_tx_queues	kcompat.c	/^void _kc_netif_set_real_num_tx_queues(struct net_device *dev, unsigned int txq)$/;"	f
_kc_netif_tx_disable	kcompat.h	/^static inline void _kc_netif_tx_disable(struct net_device *dev)$/;"	f
_kc_netif_tx_start_all_queues	kcompat.c	/^void _kc_netif_tx_start_all_queues(struct net_device *netdev)$/;"	f
_kc_netif_tx_stop_all_queues	kcompat.c	/^void _kc_netif_tx_stop_all_queues(struct net_device *netdev)$/;"	f
_kc_netif_tx_wake_all_queues	kcompat.c	/^void _kc_netif_tx_wake_all_queues(struct net_device *netdev)$/;"	f
_kc_pci_clear_master	kcompat.c	/^void _kc_pci_clear_master(struct pci_dev *dev)$/;"	f
_kc_pci_dev_ext	kcompat_ethtool.c	/^struct _kc_pci_dev_ext {$/;"	s	file:
_kc_pci_disable_link_state	kcompat.c	/^void _kc_pci_disable_link_state(struct pci_dev *pdev, int state)$/;"	f
_kc_pci_dma_mapping_error	kcompat.h	/^static inline int _kc_pci_dma_mapping_error(dma_addr_t dma_addr)$/;"	f
_kc_pci_enable_wake	kcompat.c	/^_kc_pci_enable_wake(struct pci_dev *pdev, u32 state, int enable)$/;"	f
_kc_pci_map_page	kcompat.c	/^_kc_pci_map_page(struct pci_dev *dev, struct page *page, unsigned long offset,$/;"	f
_kc_pci_num_vf	kcompat.c	/^int _kc_pci_num_vf(struct pci_dev *dev)$/;"	f
_kc_pci_prepare_to_sleep	kcompat.c	/^_kc_pci_prepare_to_sleep(struct pci_dev *dev)$/;"	f
_kc_pci_release_regions	kcompat.c	/^_kc_pci_release_regions(struct pci_dev *dev)$/;"	f
_kc_pci_request_regions	kcompat.c	/^_kc_pci_request_regions(struct pci_dev *dev, char *res_name)$/;"	f
_kc_pci_restore_state	kcompat.c	/^void _kc_pci_restore_state(struct pci_dev *pdev)$/;"	f
_kc_pci_save_state	kcompat.c	/^int _kc_pci_save_state(struct pci_dev *pdev)$/;"	f
_kc_pci_set_dma_mask	kcompat.c	/^_kc_pci_set_dma_mask(struct pci_dev *dev, dma_addr_t mask)$/;"	f
_kc_pci_set_power_state	kcompat.c	/^_kc_pci_set_power_state(struct pci_dev *dev, int state)$/;"	f
_kc_pci_unmap_page	kcompat.c	/^_kc_pci_unmap_page(struct pci_dev *dev, u64 dma_addr, size_t size,$/;"	f
_kc_pci_wake_from_d3	kcompat.c	/^_kc_pci_wake_from_d3(struct pci_dev *dev, bool enable)$/;"	f
_kc_pm_runtime_get_sync	kcompat.h	/^static inline int _kc_pm_runtime_get_sync()$/;"	f
_kc_pm_runtime_get_sync	kcompat.h	/^static inline int _kc_pm_runtime_get_sync(struct device *dev)$/;"	f
_kc_pm_runtime_suspended	kcompat.h	/^static inline bool _kc_pm_runtime_suspended()$/;"	f
_kc_pm_runtime_suspended	kcompat.h	/^static inline bool _kc_pm_runtime_suspended(struct device *dev)$/;"	f
_kc_print_hex_dump	kcompat.c	/^void _kc_print_hex_dump(const char *level,$/;"	f
_kc_random_ether_addr	kcompat.h	/^static inline void _kc_random_ether_addr(u8 *addr)$/;"	f
_kc_request_irq	kcompat.h	/^static inline irqreturn_t _kc_request_irq(unsigned int irq, new_handler_t handler, unsigned long flags, const char *devname, void *dev_id)$/;"	f
_kc_scnprintf	kcompat.c	/^int _kc_scnprintf(char * buf, size_t size, const char *fmt, ...)$/;"	f
_kc_simple_open	kcompat.c	/^int _kc_simple_open(struct inode *inode, struct file *file)$/;"	f
_kc_simple_write_to_buffer	kcompat.c	/^ssize_t _kc_simple_write_to_buffer(void *to, size_t available, loff_t *ppos,$/;"	f
_kc_skb_add_rx_frag	kcompat.c	/^void _kc_skb_add_rx_frag(struct sk_buff *skb, int i, struct page *page,$/;"	f
_kc_skb_checksum_none_assert	kcompat.h	/^static inline void _kc_skb_checksum_none_assert(struct sk_buff *skb)$/;"	f
_kc_skb_checksum_start_offset	kcompat.h	/^static inline int _kc_skb_checksum_start_offset(const struct sk_buff *skb)$/;"	f
_kc_skb_fill_page_desc	kcompat.c	/^void _kc_skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page,$/;"	f
_kc_skb_frag_address	kcompat.h	/^static inline void *_kc_skb_frag_address(const skb_frag_t *frag)$/;"	f
_kc_skb_frag_dma_map	kcompat.h	/^static inline dma_addr_t _kc_skb_frag_dma_map(struct device *dev,$/;"	f
_kc_skb_frag_page	kcompat.h	/^static inline struct page *_kc_skb_frag_page(const skb_frag_t *frag)$/;"	f
_kc_skb_frag_size	kcompat.h	/^static inline unsigned int _kc_skb_frag_size(const skb_frag_t *frag)$/;"	f
_kc_skb_frag_size_sub	kcompat.h	/^static inline void _kc_skb_frag_size_sub(skb_frag_t *frag, int delta)$/;"	f
_kc_skb_header_pointer	kcompat.h	/^static inline void *_kc_skb_header_pointer(const struct sk_buff *skb,$/;"	f
_kc_skb_is_gso	kcompat.h	/^static inline int _kc_skb_is_gso(const struct sk_buff *skb)$/;"	f
_kc_skb_is_gso_v6	kcompat.h	/^static inline int _kc_skb_is_gso_v6(const struct sk_buff *skb)$/;"	f
_kc_skb_pad	kcompat.c	/^int _kc_skb_pad(struct sk_buff *skb, int pad)$/;"	f
_kc_skb_padto	kcompat.h	/^static inline int _kc_skb_padto(struct sk_buff *skb, unsigned int len)$/;"	f
_kc_snprintf	kcompat.c	/^int _kc_snprintf(char * buf, size_t size, const char *fmt, ...)$/;"	f
_kc_strlcpy	kcompat.c	/^size_t _kc_strlcpy(char *dest, const char *src, size_t size)$/;"	f
_kc_synchronize_irq	kcompat.h	/^static inline void _kc_synchronize_irq(unsigned int a)$/;"	f
_kc_usecs_to_jiffies	kcompat.h	/^static inline unsigned long _kc_usecs_to_jiffies(const unsigned int m)$/;"	f
_kc_vlan_ethhdr	kcompat.h	/^struct _kc_vlan_ethhdr {$/;"	s
_kc_vlan_hdr	kcompat.h	/^struct _kc_vlan_hdr {$/;"	s
_kc_vsnprintf	kcompat.c	/^int _kc_vsnprintf(char *buf, size_t size, const char *fmt, va_list args)$/;"	f
_kc_vzalloc	kcompat.h	/^static inline void *_kc_vzalloc(unsigned long size)$/;"	f
_kc_vzalloc_node	kcompat.h	/^static inline void *_kc_vzalloc_node(unsigned long size, int node)$/;"	f
_udp_hdr	kcompat.h	/^static inline struct udphdr *_udp_hdr(const struct sk_buff *skb)$/;"	f
acks	e1000_hw.h	/^	u32 acks;$/;"	m	struct:e1000_mbx_stats
acquire	e1000_hw.h	/^	s32  (*acquire)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
acquire	e1000_hw.h	/^	s32  (*acquire)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
acquire_swfw_sync	e1000_hw.h	/^	s32  (*acquire_swfw_sync)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mac_operations
active	igb.h	/^	struct sk_buff_head active;$/;"	m	struct:igb_lro_list	typeref:struct:igb_lro_list::sk_buff_head
adapter	igb.h	/^	struct igb_adapter *adapter;	\/* backlink *\/$/;"	m	struct:igb_q_vector	typeref:struct:igb_q_vector::igb_adapter
adapter_q_vector	kcompat.h	62;"	d
adapter_struct	kcompat.h	61;"	d
adaptive_ifs	e1000_hw.h	/^	bool adaptive_ifs;$/;"	m	struct:e1000_mac_info
addr	e1000_hw.h	/^	u32 addr;$/;"	m	struct:e1000_phy_info
addr	e1000_hw.h	/^	u8 addr[ETH_ADDR_LEN];$/;"	m	struct:e1000_mac_info
addr	igb.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:igb_mac_addr
addr	kcompat.h	/^	unsigned short	addr;$/;"	m	struct:i2c_board_info
address_bits	e1000_hw.h	/^	u16 address_bits;$/;"	m	struct:e1000_nvm_info
adv	e1000_82575.h	/^			u32 adv:8;$/;"	m	struct:e1000_adv_context_desc::__anon19::__anon20
advertising	kcompat_ethtool.c	/^	int advertising;$/;"	m	struct:_kc_mii_if_info	file:
algnerrc	e1000_hw.h	/^	u64 algnerrc;$/;"	m	struct:e1000_hw_stats
alloc_etherdev	kcompat.h	747;"	d
alloc_etherdev_mq	kcompat.h	2122;"	d
alloc_failed	igb.h	/^	u64 alloc_failed;$/;"	m	struct:igb_rx_queue_stats
append_cnt	igb.h	/^	u16	append_cnt;		\/* number of skb's appended *\/$/;"	m	struct:igb_cb
arc_subsystem_valid	e1000_hw.h	/^	bool arc_subsystem_valid;$/;"	m	struct:e1000_mac_info
arg	igb_param.c	/^	} arg;$/;"	m	struct:igb_option	typeref:union:igb_option::__anon8	file:
array_len	igb_regtest.h	/^	u16 array_len;$/;"	m	struct:igb_reg_test
asf_firmware_present	e1000_hw.h	/^	bool asf_firmware_present;$/;"	m	struct:e1000_mac_info
autoneg	e1000_hw.h	/^	bool autoneg;$/;"	m	struct:e1000_mac_info
autoneg	kcompat.h	/^	u32	autoneg;$/;"	m	struct:_kc_ethtool_pauseparam
autoneg_advertised	e1000_hw.h	/^	u16 autoneg_advertised;$/;"	m	struct:e1000_phy_info
autoneg_failed	e1000_hw.h	/^	bool autoneg_failed;$/;"	m	struct:e1000_mac_info
autoneg_mask	e1000_hw.h	/^	u16 autoneg_mask;$/;"	m	struct:e1000_phy_info
autoneg_wait_to_complete	e1000_hw.h	/^	bool autoneg_wait_to_complete;$/;"	m	struct:e1000_phy_info
b2ogprc	e1000_hw.h	/^	u64 b2ogprc;$/;"	m	struct:e1000_hw_stats
b2ospc	e1000_hw.h	/^	u64 b2ospc;$/;"	m	struct:e1000_hw_stats
back	e1000_hw.h	/^	void *back;$/;"	m	struct:e1000_hw
bd_number	igb.h	/^	u32 bd_number;$/;"	m	struct:igb_adapter
bitmap_zero	kcompat.h	1427;"	d
bitmap_zero	kcompat.h	1428;"	d
blink_led	e1000_hw.h	/^	s32  (*blink_led)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
bool	kcompat.h	1992;"	d
bprc	e1000_hw.h	/^	u64 bprc;$/;"	m	struct:e1000_hw_stats
bptc	e1000_hw.h	/^	u64 bptc;$/;"	m	struct:e1000_hw_stats
buf_len	igb.h	/^	u8 buf_len;$/;"	m	struct:e1000_fw_hdr
buffer_addr	e1000_82575.h	/^		__le64 buffer_addr;    \/* Address of descriptor's data buf *\/$/;"	m	struct:e1000_adv_tx_desc::__anon29
buffer_addr	e1000_82575.h	/^	__le64 buffer_addr;    \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_adv_data_desc
buffer_addr	e1000_hw.h	/^		__le64 buffer_addr;$/;"	m	struct:e1000_rx_desc_extended::__anon31
buffer_addr	e1000_hw.h	/^		__le64 buffer_addr[MAX_PS_BUFFERS];$/;"	m	struct:e1000_rx_desc_packet_split::__anon37
buffer_addr	e1000_hw.h	/^	__le64 buffer_addr;   \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc
buffer_addr	e1000_hw.h	/^	__le64 buffer_addr;  \/* Address of the descriptor's buffer address *\/$/;"	m	struct:e1000_data_desc
buffer_addr	e1000_hw.h	/^	__le64 buffer_addr; \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_rx_desc
bulk_latency	igb_main.c	/^	bulk_latency = 2,$/;"	e	enum:latency_range	file:
bus	e1000_hw.h	/^	struct e1000_bus_info  bus;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_bus_info
bus_info	kcompat.h	/^	char bus_info[32];$/;"	m	struct:k_ethtool_drvinfo
bytecount	igb.h	/^	unsigned int bytecount;$/;"	m	struct:igb_tx_buffer
bytes	igb.h	/^	u64 bytes;$/;"	m	struct:igb_rx_queue_stats
bytes	igb.h	/^	u64 bytes;$/;"	m	struct:igb_tx_queue_stats
cable_length	e1000_hw.h	/^	u16 cable_length;$/;"	m	struct:e1000_phy_info
cable_polarity	e1000_hw.h	/^	enum e1000_rev_polarity cable_polarity;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_rev_polarity
cancel_work_sync	kcompat.h	1274;"	d
cancel_work_sync	kcompat.h	2129;"	d
carrier	kcompat_ethtool.c	/^	unsigned int carrier;$/;"	m	struct:_kc_net_dev_ext	file:
caution_thresh	e1000_hw.h	/^	u8 caution_thresh;$/;"	m	struct:e1000_thermal_diode_data
cbrdpc	e1000_hw.h	/^	u64 cbrdpc;$/;"	m	struct:e1000_hw_stats
cbrmpc	e1000_hw.h	/^	u64 cbrmpc;$/;"	m	struct:e1000_hw_stats
cbtmpc	e1000_hw.h	/^	u64 cbtmpc;$/;"	m	struct:e1000_hw_stats
cc	igb.h	/^	struct cyclecounter cc;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::cyclecounter
cexterr	e1000_hw.h	/^	u64 cexterr;$/;"	m	struct:e1000_hw_stats
check_for_ack	e1000_hw.h	/^	s32 (*check_for_ack)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mbx_operations
check_for_link	e1000_hw.h	/^	s32  (*check_for_link)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
check_for_msg	e1000_hw.h	/^	s32 (*check_for_msg)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mbx_operations
check_for_rst	e1000_hw.h	/^	s32 (*check_for_rst)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mbx_operations
check_mng_mode	e1000_hw.h	/^	bool (*check_mng_mode)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
check_polarity	e1000_hw.h	/^	s32  (*check_polarity)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
check_reset_block	e1000_hw.h	/^	s32  (*check_reset_block)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
checksum	e1000_hw.h	/^	u8  checksum;$/;"	m	struct:e1000_host_mng_command_header
checksum	e1000_hw.h	/^	u8  checksum;$/;"	m	struct:e1000_host_mng_dhcp_cookie
checksum	e1000_hw.h	/^	u8 checksum;$/;"	m	struct:e1000_host_command_header
checksum	igb.h	/^	u8 checksum;$/;"	m	struct:e1000_fw_hdr
clamp_t	kcompat.h	2386;"	d
cleanup_led	e1000_hw.h	/^	s32  (*cleanup_led)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
clear_hw_cntrs	e1000_hw.h	/^	void (*clear_hw_cntrs)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
clear_semaphore_once	e1000_hw.h	/^	bool clear_semaphore_once;$/;"	m	struct:e1000_dev_spec_82575
clear_vfta	e1000_hw.h	/^	void (*clear_vfta)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
cmd	e1000_hw.h	/^			u8 cmd;  \/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc::__anon44::__anon45
cmd	e1000_hw.h	/^			u8 cmd;$/;"	m	struct:e1000_data_desc::__anon54::__anon55
cmd	igb.h	/^	u8 cmd;$/;"	m	struct:e1000_fw_hdr
cmd	kcompat.h	/^	u32	cmd;	\/* ETHTOOL_{G,S}COALESCE *\/$/;"	m	struct:_kc_ethtool_coalesce
cmd	kcompat.h	/^	u32	cmd;	\/* ETHTOOL_{G,S}PAUSEPARAM *\/$/;"	m	struct:_kc_ethtool_pauseparam
cmd	kcompat.h	/^	u32	cmd;	\/* ETHTOOL_{G,S}RINGPARAM *\/$/;"	m	struct:_kc_ethtool_ringparam
cmd	kcompat.h	/^	u32 cmd;            \/* ETHTOOL_GSTRINGS *\/$/;"	m	struct:ethtool_gstrings
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:_kc_ethtool_regs
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_eeprom
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_stats
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_test
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_value
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_wolinfo
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:k_ethtool_drvinfo
cmd_and_length	e1000_hw.h	/^	__le32 cmd_and_length;$/;"	m	struct:e1000_context_desc
cmd_or_resp	igb.h	/^	} cmd_or_resp;$/;"	m	struct:e1000_fw_hdr	typeref:union:e1000_fw_hdr::__anon6
cmd_resv	igb.h	/^		u8 cmd_resv;$/;"	m	union:e1000_fw_hdr::__anon6
cmd_type_len	e1000_82575.h	/^		__le32 cmd_type_len;$/;"	m	struct:e1000_adv_tx_desc::__anon29
coal	igb.h	/^	u32 coal;$/;"	m	struct:igb_lro_stats
colc	e1000_hw.h	/^	u64 colc;$/;"	m	struct:e1000_hw_stats
collision_delta	e1000_hw.h	/^	u32 collision_delta;$/;"	m	struct:e1000_mac_info
command_data	e1000_hw.h	/^	u8 command_data[E1000_HI_MAX_DATA_LENGTH];$/;"	m	struct:e1000_host_command_info
command_data	e1000_hw.h	/^	u8 command_data[E1000_HI_MAX_MNG_DATA_LENGTH];$/;"	m	struct:e1000_host_mng_command_info
command_header	e1000_hw.h	/^	struct e1000_host_command_header command_header;$/;"	m	struct:e1000_host_command_info	typeref:struct:e1000_host_command_info::e1000_host_command_header
command_header	e1000_hw.h	/^	struct e1000_host_mng_command_header command_header;$/;"	m	struct:e1000_host_mng_command_info	typeref:struct:e1000_host_mng_command_info::e1000_host_mng_command_header
command_id	e1000_hw.h	/^	u8  command_id;$/;"	m	struct:e1000_host_mng_command_header
command_id	e1000_hw.h	/^	u8 command_id;$/;"	m	struct:e1000_host_command_header
command_length	e1000_hw.h	/^	u16 command_length;$/;"	m	struct:e1000_host_mng_command_header
command_length	e1000_hw.h	/^	u8 command_length;$/;"	m	struct:e1000_host_command_header
command_options	e1000_hw.h	/^	u8 command_options;$/;"	m	struct:e1000_host_command_header
commit	e1000_hw.h	/^	s32  (*commit)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
compare_ether_addr	kcompat.h	1796;"	d
compare_ether_addr	kcompat.h	1797;"	d
config	e1000_82575.h	/^		} config;$/;"	m	union:e1000_adv_data_desc::__anon13	typeref:struct:e1000_adv_data_desc::__anon13::__anon14
config_collision_dist	e1000_hw.h	/^	void (*config_collision_dist)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
config_enabled	kcompat.h	293;"	d
config_enabled	kcompat.h	300;"	d
config_space	igb.h	/^	u32 *config_space;$/;"	m	struct:igb_adapter
container_of	kcompat.h	1270;"	d
container_of	kcompat.h	1271;"	d
copper_tries	igb.h	/^	int copper_tries;$/;"	m	struct:igb_adapter
count	igb.h	/^	u16 count;                      \/* number of desc. in the ring *\/$/;"	m	struct:igb_ring
count	igb.h	/^	u8 count;			\/* total number of rings in vector *\/$/;"	m	struct:igb_ring_container
cpu	igb.h	/^	int cpu;			\/* CPU for DCA *\/$/;"	m	struct:igb_q_vector
cpu_online	kcompat.h	241;"	d
cpu_relax	kcompat.h	971;"	d
cpu_to_be16	kcompat.h	2139;"	d
cpu_to_be16	kcompat.h	2141;"	d
crcerrs	e1000_hw.h	/^	u64 crcerrs;$/;"	m	struct:e1000_hw_stats
cso	e1000_hw.h	/^			u8 cso;  \/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc::__anon44::__anon45
css	e1000_hw.h	/^			u8 css;  \/* Checksum start *\/$/;"	m	struct:e1000_tx_desc::__anon46::__anon47
csum	e1000_82575.h	/^					__le16 csum; \/* Packet Checksum *\/$/;"	m	struct:e1000_adv_rx_desc::__anon22::__anon23::__anon26::__anon27
csum	e1000_hw.h	/^					__le16 csum;     \/* Packet Checksum *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon38::__anon39::__anon40::__anon41
csum	e1000_hw.h	/^					__le16 csum;   \/* Packet Checksum *\/$/;"	m	struct:e1000_rx_desc_extended::__anon32::__anon33::__anon34::__anon35
csum	e1000_hw.h	/^	__le16 csum; \/* Packet checksum *\/$/;"	m	struct:e1000_rx_desc
csum_err	igb.h	/^	u64 csum_err;$/;"	m	struct:igb_rx_queue_stats
csum_ip	e1000_82575.h	/^				} csum_ip;$/;"	m	union:e1000_adv_rx_desc::__anon22::__anon23::__anon26	typeref:struct:e1000_adv_rx_desc::__anon22::__anon23::__anon26::__anon27
csum_ip	e1000_hw.h	/^				} csum_ip;$/;"	m	union:e1000_rx_desc_extended::__anon32::__anon33::__anon34	typeref:struct:e1000_rx_desc_extended::__anon32::__anon33::__anon34::__anon35
csum_ip	e1000_hw.h	/^				} csum_ip;$/;"	m	union:e1000_rx_desc_packet_split::__anon38::__anon39::__anon40	typeref:struct:e1000_rx_desc_packet_split::__anon38::__anon39::__anon40::__anon41
csum_offset	kcompat.h	2029;"	d
csum_unfold	kcompat.h	/^static inline __wsum csum_unfold(__sum16 n)$/;"	f
current_ifs_val	e1000_hw.h	/^	u16 current_ifs_val;$/;"	m	struct:e1000_mac_info
current_mode	e1000_hw.h	/^	enum e1000_fc_mode current_mode;  \/* FC mode in effect *\/$/;"	m	struct:e1000_fc_info	typeref:enum:e1000_fc_info::e1000_fc_mode
data	e1000_82575.h	/^				__le32 data;$/;"	m	union:e1000_adv_rx_desc::__anon22::__anon23::__anon24
data	e1000_82575.h	/^		u32 data;$/;"	m	union:e1000_adv_data_desc::__anon13
data	e1000_82575.h	/^		u32 data;$/;"	m	union:e1000_adv_data_desc::__anon15
data	e1000_hw.h	/^		__le32 data;$/;"	m	union:e1000_context_desc::__anon52
data	e1000_hw.h	/^		__le32 data;$/;"	m	union:e1000_data_desc::__anon54
data	e1000_hw.h	/^		__le32 data;$/;"	m	union:e1000_data_desc::__anon56
data	e1000_hw.h	/^		__le32 data;$/;"	m	union:e1000_tx_desc::__anon44
data	e1000_hw.h	/^		__le32 data;$/;"	m	union:e1000_tx_desc::__anon46
data	kcompat.h	/^	__be32	data[2];$/;"	m	struct:_kc_ethtool_flow_ext
data	kcompat.h	/^	u32 data;$/;"	m	struct:ethtool_value
data	kcompat.h	/^	u64 data[0];$/;"	m	struct:ethtool_stats
data	kcompat.h	/^	u64 data[0];$/;"	m	struct:ethtool_test
data	kcompat.h	/^	u8 data[0];$/;"	m	struct:_kc_ethtool_regs
data	kcompat.h	/^	u8 data[0];$/;"	m	struct:ethtool_eeprom
data	kcompat.h	/^	u8 data[0];$/;"	m	struct:ethtool_gstrings
datalen	e1000_82575.h	/^			u32 datalen:16; \/* Data buffer length *\/$/;"	m	struct:e1000_adv_data_desc::__anon13::__anon14
dc	e1000_hw.h	/^	u64 dc;$/;"	m	struct:e1000_hw_stats
dca3_get_tag	kcompat.h	276;"	d
dca_add_requester	kcompat.h	269;"	d
dca_get_tag	kcompat.h	268;"	d
dca_notifier	igb_main.c	/^static struct notifier_block dca_notifier = {$/;"	v	typeref:struct:notifier_block	file:
dca_remove_requester	kcompat.h	270;"	d
dcb_ieee_delapp	kcompat.h	3354;"	d
dcb_ieee_getapp_mask	kcompat.h	3355;"	d
dcb_ieee_setapp	kcompat.h	3353;"	d
dcmd	e1000_82575.h	/^			u32 dcmd:8;  \/* Descriptor command *\/$/;"	m	struct:e1000_adv_data_desc::__anon13::__anon14
debug	igb_main.c	/^static int debug = NETIF_MSG_DRV | NETIF_MSG_PROBE;$/;"	v	file:
def	igb_param.c	/^	int def;$/;"	m	struct:igb_option	file:
default_vf_vlan_id	igb.h	/^	u16 default_vf_vlan_id;$/;"	m	struct:vf_data_storage
delay_usec	e1000_hw.h	/^	u16 delay_usec;$/;"	m	struct:e1000_nvm_info
desc	igb.h	/^	void *desc;                     \/* descriptor ring memory *\/$/;"	m	struct:igb_ring
dev	igb.h	/^	struct device *dev;             \/* device for dma mapping *\/$/;"	m	struct:igb_ring	typeref:struct:igb_ring::device
dev	kcompat.h	/^	struct net_device *dev;$/;"	m	struct:napi_struct	typeref:struct:napi_struct::net_device
dev	kcompat_ethtool.c	/^	struct net_device *dev;$/;"	m	struct:_kc_mii_if_info	typeref:struct:_kc_mii_if_info::net_device	file:
dev	kcompat_ethtool.c	/^	struct net_device *dev;$/;"	m	struct:_kc_net_dev_ext	typeref:struct:_kc_net_dev_ext::net_device	file:
dev	kcompat_ethtool.c	/^	struct pci_dev *dev;$/;"	m	struct:_kc_pci_dev_ext	typeref:struct:_kc_pci_dev_ext::pci_dev	file:
dev_attr	igb.h	/^	struct device_attribute dev_attr;$/;"	m	struct:hwmon_attr	typeref:struct:hwmon_attr::device_attribute
dev_dbg	kcompat.h	1170;"	d
dev_err	kcompat.h	1162;"	d
dev_get_by_name	kcompat.h	2297;"	d
dev_get_by_name	kcompat.h	2298;"	d
dev_info	kcompat.h	1164;"	d
dev_notice	kcompat.h	1168;"	d
dev_notice	kcompat.h	1829;"	d
dev_put	kcompat.h	1299;"	d
dev_put	kcompat.h	1300;"	d
dev_spec	e1000_hw.h	/^	} dev_spec;$/;"	m	struct:e1000_hw	typeref:union:e1000_hw::__anon58
dev_to_node	kcompat.h	2032;"	d
dev_warn	kcompat.h	1166;"	d
device	igb.h	/^	struct device *device;$/;"	m	struct:hwmon_buff	typeref:struct:hwmon_buff::device
device	kcompat.h	/^struct device {$/;"	s
device_can_wakeup	kcompat.h	1781;"	d
device_can_wakeup	kcompat.h	1820;"	d
device_can_wakeup	kcompat.h	1822;"	d
device_id	e1000_hw.h	/^	u16 device_id;$/;"	m	struct:e1000_hw
device_init_wakeup	kcompat.h	1787;"	d
device_set_wakeup_enable	kcompat.h	1784;"	d
device_set_wakeup_enable	kcompat.h	2431;"	d
device_set_wakeup_enable	kcompat.h	2432;"	d
device_wakeup_enable	kcompat.h	3216;"	d
devrc	igb.h	/^	int devrc;$/;"	m	struct:igb_adapter
disable_hw_reset	igb.h	/^	bool disable_hw_reset;$/;"	m	struct:igb_adapter
disable_polarity_correction	e1000_hw.h	/^	bool disable_polarity_correction;$/;"	m	struct:e1000_phy_info
dma	igb.h	/^	dma_addr_t dma;			\/* phys address of the ring *\/$/;"	m	struct:igb_ring
dma	igb.h	/^	dma_addr_t dma;$/;"	m	struct:igb_rx_buffer
dma_alloc_coherent	kcompat.h	1174;"	d
dma_data_direction	kcompat.h	/^enum dma_data_direction {$/;"	g
dma_err_task	igb.h	/^	struct work_struct dma_err_task;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::work_struct
dma_err_timer	igb.h	/^	struct timer_list dma_err_timer;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::timer_list
dma_free_coherent	kcompat.h	1176;"	d
dma_map_page	kcompat.h	1179;"	d
dma_map_sg	kcompat.h	1189;"	d
dma_map_single	kcompat.h	1184;"	d
dma_mapping_error	kcompat.h	2455;"	d
dma_mapping_error	kcompat.h	2457;"	d
dma_pool	kcompat.h	1387;"	d
dma_pool_alloc	kcompat.h	1389;"	d
dma_pool_create	kcompat.h	1392;"	d
dma_pool_destroy	kcompat.h	1388;"	d
dma_pool_free	kcompat.h	1390;"	d
dma_set_coherent_mask	kcompat.h	1297;"	d
dma_set_coherent_mask	kcompat.h	2869;"	d
dma_set_mask	kcompat.h	1201;"	d
dma_sync_single	kcompat.h	1194;"	d
dma_sync_single_for_cpu	kcompat.h	1405;"	d
dma_sync_single_for_device	kcompat.h	1406;"	d
dma_sync_single_range	kcompat.h	1198;"	d
dma_sync_single_range_for_cpu	kcompat.h	1407;"	d
dma_sync_single_range_for_cpu	kcompat.h	1760;"	d
dma_sync_single_range_for_device	kcompat.h	1408;"	d
dma_sync_single_range_for_device	kcompat.h	1762;"	d
dma_unmap_addr	kcompat.h	2784;"	d
dma_unmap_addr	kcompat.h	2785;"	d
dma_unmap_addr	kcompat.h	2994;"	d
dma_unmap_addr_set	kcompat.h	2786;"	d
dma_unmap_addr_set	kcompat.h	2787;"	d
dma_unmap_addr_set	kcompat.h	2995;"	d
dma_unmap_len	kcompat.h	2788;"	d
dma_unmap_len	kcompat.h	2789;"	d
dma_unmap_len	kcompat.h	2996;"	d
dma_unmap_len_set	kcompat.h	2790;"	d
dma_unmap_len_set	kcompat.h	2791;"	d
dma_unmap_len_set	kcompat.h	2997;"	d
dma_unmap_page	kcompat.h	1181;"	d
dma_unmap_sg	kcompat.h	1191;"	d
dma_unmap_single	kcompat.h	1186;"	d
dmac	igb.h	/^	int dmac;$/;"	m	struct:igb_adapter
do_div	kcompat.h	1349;"	d
do_div	kcompat.h	1358;"	d
doosync	e1000_hw.h	/^	u64 doosync;$/;"	m	struct:e1000_hw_stats
driver	kcompat.h	/^	char driver[32];$/;"	m	struct:k_ethtool_drvinfo
driver	kcompat_ethtool.c	/^	struct pci_driver *driver;$/;"	m	struct:_kc_pci_dev_ext	typeref:struct:_kc_pci_dev_ext::pci_driver	file:
driver_name	kcompat.h	/^	char	driver_name[KOBJ_NAME_LEN];$/;"	m	struct:i2c_board_info
drops	igb.h	/^	u64 drops;$/;"	m	struct:igb_rx_queue_stats
drv_version	igb.h	/^	u32 drv_version;$/;"	m	struct:e1000_fw_drv_info
dtyp	e1000_82575.h	/^			u32 dtyp:4;  \/* Descriptor type *\/$/;"	m	struct:e1000_adv_data_desc::__anon13::__anon14
dtyp	e1000_82575.h	/^			u32 dtyp:4;$/;"	m	struct:e1000_adv_context_desc::__anon19::__anon20
e1000_1000t_rx_status	e1000_hw.h	/^enum e1000_1000t_rx_status {$/;"	g
e1000_1000t_rx_status_not_ok	e1000_hw.h	/^	e1000_1000t_rx_status_not_ok = 0,$/;"	e	enum:e1000_1000t_rx_status
e1000_1000t_rx_status_ok	e1000_hw.h	/^	e1000_1000t_rx_status_ok,$/;"	e	enum:e1000_1000t_rx_status
e1000_1000t_rx_status_undefined	e1000_hw.h	/^	e1000_1000t_rx_status_undefined = 0xFF$/;"	e	enum:e1000_1000t_rx_status
e1000_82575	e1000_hw.h	/^	e1000_82575,$/;"	e	enum:e1000_mac_type
e1000_82576	e1000_hw.h	/^	e1000_82576,$/;"	e	enum:e1000_mac_type
e1000_82580	e1000_hw.h	/^	e1000_82580,$/;"	e	enum:e1000_mac_type
e1000_82580_rxpbs_table	e1000_82575.c	/^static const u16 e1000_82580_rxpbs_table[] = {$/;"	v	file:
e1000_acquire_nvm_82575	e1000_82575.c	/^static s32 e1000_acquire_nvm_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_generic	e1000_nvm.c	/^s32 e1000_acquire_nvm_generic(struct e1000_hw *hw)$/;"	f
e1000_acquire_nvm_i210	e1000_i210.c	/^static s32 e1000_acquire_nvm_i210(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_phy	e1000_api.c	/^s32 e1000_acquire_phy(struct e1000_hw *hw)$/;"	f
e1000_acquire_phy_82575	e1000_82575.c	/^static s32 e1000_acquire_phy_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_swfw_sync_82575	e1000_82575.c	/^static s32 e1000_acquire_swfw_sync_82575(struct e1000_hw *hw, u16 mask)$/;"	f	file:
e1000_acquire_swfw_sync_i210	e1000_i210.c	/^s32 e1000_acquire_swfw_sync_i210(struct e1000_hw *hw, u16 mask)$/;"	f
e1000_adv_context_desc	e1000_82575.h	/^struct e1000_adv_context_desc {$/;"	s
e1000_adv_data_desc	e1000_82575.h	/^struct e1000_adv_data_desc {$/;"	s
e1000_adv_rx_desc	e1000_82575.h	/^union e1000_adv_rx_desc {$/;"	u
e1000_adv_tx_context_desc	e1000_82575.h	/^struct e1000_adv_tx_context_desc {$/;"	s
e1000_adv_tx_desc	e1000_82575.h	/^union e1000_adv_tx_desc {$/;"	u
e1000_base_cx	e1000_phy.h	/^	u8 e1000_base_cx:1;$/;"	m	struct:sfp_e1000_flags
e1000_base_lx	e1000_phy.h	/^	u8 e1000_base_lx:1;$/;"	m	struct:sfp_e1000_flags
e1000_base_sx	e1000_phy.h	/^	u8 e1000_base_sx:1;$/;"	m	struct:sfp_e1000_flags
e1000_base_t	e1000_phy.h	/^	u8 e1000_base_t:1;$/;"	m	struct:sfp_e1000_flags
e1000_blink_led	e1000_api.c	/^s32 e1000_blink_led(struct e1000_hw *hw)$/;"	f
e1000_blink_led_generic	e1000_mac.c	/^s32 e1000_blink_led_generic(struct e1000_hw *hw)$/;"	f
e1000_bus_info	e1000_hw.h	/^struct e1000_bus_info {$/;"	s
e1000_bus_speed	e1000_hw.h	/^enum e1000_bus_speed {$/;"	g
e1000_bus_speed_100	e1000_hw.h	/^	e1000_bus_speed_100,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_120	e1000_hw.h	/^	e1000_bus_speed_120,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_133	e1000_hw.h	/^	e1000_bus_speed_133,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_2500	e1000_hw.h	/^	e1000_bus_speed_2500,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_33	e1000_hw.h	/^	e1000_bus_speed_33,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_5000	e1000_hw.h	/^	e1000_bus_speed_5000,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_66	e1000_hw.h	/^	e1000_bus_speed_66,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_reserved	e1000_hw.h	/^	e1000_bus_speed_reserved$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_unknown	e1000_hw.h	/^	e1000_bus_speed_unknown = 0,$/;"	e	enum:e1000_bus_speed
e1000_bus_type	e1000_hw.h	/^enum e1000_bus_type {$/;"	g
e1000_bus_type_pci	e1000_hw.h	/^	e1000_bus_type_pci,$/;"	e	enum:e1000_bus_type
e1000_bus_type_pci_express	e1000_hw.h	/^	e1000_bus_type_pci_express,$/;"	e	enum:e1000_bus_type
e1000_bus_type_pcix	e1000_hw.h	/^	e1000_bus_type_pcix,$/;"	e	enum:e1000_bus_type
e1000_bus_type_reserved	e1000_hw.h	/^	e1000_bus_type_reserved$/;"	e	enum:e1000_bus_type
e1000_bus_type_unknown	e1000_hw.h	/^	e1000_bus_type_unknown = 0,$/;"	e	enum:e1000_bus_type
e1000_bus_width	e1000_hw.h	/^enum e1000_bus_width {$/;"	g
e1000_bus_width_32	e1000_hw.h	/^	e1000_bus_width_32,$/;"	e	enum:e1000_bus_width
e1000_bus_width_64	e1000_hw.h	/^	e1000_bus_width_64,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x1	e1000_hw.h	/^	e1000_bus_width_pcie_x1,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x2	e1000_hw.h	/^	e1000_bus_width_pcie_x2,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x4	e1000_hw.h	/^	e1000_bus_width_pcie_x4 = 4,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x8	e1000_hw.h	/^	e1000_bus_width_pcie_x8 = 8,$/;"	e	enum:e1000_bus_width
e1000_bus_width_reserved	e1000_hw.h	/^	e1000_bus_width_reserved$/;"	e	enum:e1000_bus_width
e1000_bus_width_unknown	e1000_hw.h	/^	e1000_bus_width_unknown = 0,$/;"	e	enum:e1000_bus_width
e1000_calculate_checksum	e1000_manage.c	/^u8 e1000_calculate_checksum(u8 *buffer, u32 length)$/;"	f
e1000_check_alt_mac_addr_generic	e1000_mac.c	/^s32 e1000_check_alt_mac_addr_generic(struct e1000_hw *hw)$/;"	f
e1000_check_downshift_generic	e1000_phy.c	/^s32 e1000_check_downshift_generic(struct e1000_hw *hw)$/;"	f
e1000_check_for_ack	e1000_mbx.c	/^s32 e1000_check_for_ack(struct e1000_hw *hw, u16 mbx_id)$/;"	f
e1000_check_for_ack_pf	e1000_mbx.c	/^static s32 e1000_check_for_ack_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	file:
e1000_check_for_bit_pf	e1000_mbx.c	/^static s32 e1000_check_for_bit_pf(struct e1000_hw *hw, u32 mask)$/;"	f	file:
e1000_check_for_copper_link_generic	e1000_mac.c	/^s32 e1000_check_for_copper_link_generic(struct e1000_hw *hw)$/;"	f
e1000_check_for_fiber_link_generic	e1000_mac.c	/^s32 e1000_check_for_fiber_link_generic(struct e1000_hw *hw)$/;"	f
e1000_check_for_link	e1000_api.c	/^s32 e1000_check_for_link(struct e1000_hw *hw)$/;"	f
e1000_check_for_link_82575	e1000_82575.c	/^static s32 e1000_check_for_link_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_check_for_link_media_swap	e1000_82575.c	/^static s32 e1000_check_for_link_media_swap(struct e1000_hw *hw)$/;"	f	file:
e1000_check_for_msg	e1000_mbx.c	/^s32 e1000_check_for_msg(struct e1000_hw *hw, u16 mbx_id)$/;"	f
e1000_check_for_msg_pf	e1000_mbx.c	/^static s32 e1000_check_for_msg_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	file:
e1000_check_for_rst	e1000_mbx.c	/^s32 e1000_check_for_rst(struct e1000_hw *hw, u16 mbx_id)$/;"	f
e1000_check_for_rst_pf	e1000_mbx.c	/^static s32 e1000_check_for_rst_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	file:
e1000_check_for_serdes_link_generic	e1000_mac.c	/^s32 e1000_check_for_serdes_link_generic(struct e1000_hw *hw)$/;"	f
e1000_check_mng_mode	e1000_api.c	/^bool e1000_check_mng_mode(struct e1000_hw *hw)$/;"	f
e1000_check_mng_mode_generic	e1000_manage.c	/^bool e1000_check_mng_mode_generic(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_82577	e1000_phy.c	/^s32 e1000_check_polarity_82577(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_ife	e1000_phy.c	/^s32 e1000_check_polarity_ife(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_igp	e1000_phy.c	/^s32 e1000_check_polarity_igp(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_m88	e1000_phy.c	/^s32 e1000_check_polarity_m88(struct e1000_hw *hw)$/;"	f
e1000_check_reset_block	e1000_api.c	/^s32 e1000_check_reset_block(struct e1000_hw *hw)$/;"	f
e1000_check_reset_block_generic	e1000_phy.c	/^s32 e1000_check_reset_block_generic(struct e1000_hw *hw)$/;"	f
e1000_cleanup_led	e1000_api.c	/^s32 e1000_cleanup_led(struct e1000_hw *hw)$/;"	f
e1000_cleanup_led_generic	e1000_mac.c	/^s32 e1000_cleanup_led_generic(struct e1000_hw *hw)$/;"	f
e1000_clear_hw_cntrs_82575	e1000_82575.c	/^static void e1000_clear_hw_cntrs_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_base_generic	e1000_mac.c	/^void e1000_clear_hw_cntrs_base_generic(struct e1000_hw *hw)$/;"	f
e1000_clear_vfta	e1000_api.c	/^void e1000_clear_vfta(struct e1000_hw *hw)$/;"	f
e1000_clear_vfta_generic	e1000_mac.c	/^void e1000_clear_vfta_generic(struct e1000_hw *hw)$/;"	f
e1000_clear_vfta_i350	e1000_82575.c	/^void e1000_clear_vfta_i350(struct e1000_hw *hw)$/;"	f
e1000_clock_in_i2c_bit	e1000_82575.c	/^static s32 e1000_clock_in_i2c_bit(struct e1000_hw *hw, bool *data)$/;"	f	file:
e1000_clock_in_i2c_byte	e1000_82575.c	/^static s32 e1000_clock_in_i2c_byte(struct e1000_hw *hw, u8 *data)$/;"	f	file:
e1000_clock_out_i2c_bit	e1000_82575.c	/^static s32 e1000_clock_out_i2c_bit(struct e1000_hw *hw, bool data)$/;"	f	file:
e1000_clock_out_i2c_byte	e1000_82575.c	/^static s32 e1000_clock_out_i2c_byte(struct e1000_hw *hw, u8 data)$/;"	f	file:
e1000_commit_fc_settings_generic	e1000_mac.c	/^static s32 e1000_commit_fc_settings_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_config_collision_dist	e1000_api.c	/^void e1000_config_collision_dist(struct e1000_hw *hw)$/;"	f
e1000_config_collision_dist_82575	e1000_82575.c	/^static void e1000_config_collision_dist_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_config_collision_dist_generic	e1000_mac.c	/^static void e1000_config_collision_dist_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_config_fc_after_link_up_generic	e1000_mac.c	/^s32 e1000_config_fc_after_link_up_generic(struct e1000_hw *hw)$/;"	f
e1000_context_desc	e1000_hw.h	/^struct e1000_context_desc {$/;"	s
e1000_copper_link_autoneg	e1000_phy.c	/^static s32 e1000_copper_link_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_copper_link_setup_82577	e1000_phy.c	/^s32 e1000_copper_link_setup_82577(struct e1000_hw *hw)$/;"	f
e1000_copper_link_setup_igp	e1000_phy.c	/^s32 e1000_copper_link_setup_igp(struct e1000_hw *hw)$/;"	f
e1000_copper_link_setup_m88	e1000_phy.c	/^s32 e1000_copper_link_setup_m88(struct e1000_hw *hw)$/;"	f
e1000_copper_link_setup_m88_gen2	e1000_phy.c	/^s32 e1000_copper_link_setup_m88_gen2(struct e1000_hw *hw)$/;"	f
e1000_data_desc	e1000_hw.h	/^struct e1000_data_desc {$/;"	s
e1000_determine_phy_address	e1000_phy.c	/^s32 e1000_determine_phy_address(struct e1000_hw *hw)$/;"	f
e1000_dev_spec_82575	e1000_hw.h	/^struct e1000_dev_spec_82575 {$/;"	s
e1000_dev_spec_vf	e1000_hw.h	/^struct e1000_dev_spec_vf {$/;"	s
e1000_disable_pcie_master	e1000_api.c	/^s32 e1000_disable_pcie_master(struct e1000_hw *hw)$/;"	f
e1000_disable_pcie_master_generic	e1000_mac.c	/^s32 e1000_disable_pcie_master_generic(struct e1000_hw *hw)$/;"	f
e1000_emc_temp_data	e1000_82575.c	/^static const u8 e1000_emc_temp_data[4] = {$/;"	v	file:
e1000_emc_therm_limit	e1000_82575.c	/^static const u8 e1000_emc_therm_limit[4] = {$/;"	v	file:
e1000_enable_mng_pass_thru	e1000_manage.c	/^bool e1000_enable_mng_pass_thru(struct e1000_hw *hw)$/;"	f
e1000_enable_tx_pkt_filtering	e1000_api.c	/^bool e1000_enable_tx_pkt_filtering(struct e1000_hw *hw)$/;"	f
e1000_enable_tx_pkt_filtering_generic	e1000_manage.c	/^bool e1000_enable_tx_pkt_filtering_generic(struct e1000_hw *hw)$/;"	f
e1000_fc_default	e1000_hw.h	/^	e1000_fc_default = 0xFF$/;"	e	enum:e1000_fc_mode
e1000_fc_full	e1000_hw.h	/^	e1000_fc_full,$/;"	e	enum:e1000_fc_mode
e1000_fc_info	e1000_hw.h	/^struct e1000_fc_info {$/;"	s
e1000_fc_mode	e1000_hw.h	/^enum e1000_fc_mode {$/;"	g
e1000_fc_none	e1000_hw.h	/^	e1000_fc_none = 0,$/;"	e	enum:e1000_fc_mode
e1000_fc_rx_pause	e1000_hw.h	/^	e1000_fc_rx_pause,$/;"	e	enum:e1000_fc_mode
e1000_fc_tx_pause	e1000_hw.h	/^	e1000_fc_tx_pause,$/;"	e	enum:e1000_fc_mode
e1000_force_mac_fc	e1000_api.c	/^s32 e1000_force_mac_fc(struct e1000_hw *hw)$/;"	f
e1000_force_mac_fc_generic	e1000_mac.c	/^s32 e1000_force_mac_fc_generic(struct e1000_hw *hw)$/;"	f
e1000_fw_drv_info	igb.h	/^struct e1000_fw_drv_info {$/;"	s
e1000_fw_hdr	igb.h	/^struct e1000_fw_hdr {$/;"	s
e1000_fw_version	e1000_nvm.h	/^struct e1000_fw_version {$/;"	s
e1000_get_auto_rd_done_generic	e1000_mac.c	/^s32 e1000_get_auto_rd_done_generic(struct e1000_hw *hw)$/;"	f
e1000_get_bus_info	e1000_api.c	/^s32 e1000_get_bus_info(struct e1000_hw *hw)$/;"	f
e1000_get_bus_info_pcie_generic	e1000_mac.c	/^s32 e1000_get_bus_info_pcie_generic(struct e1000_hw *hw)$/;"	f
e1000_get_cable_length	e1000_api.c	/^s32 e1000_get_cable_length(struct e1000_hw *hw)$/;"	f
e1000_get_cable_length_82577	e1000_phy.c	/^s32 e1000_get_cable_length_82577(struct e1000_hw *hw)$/;"	f
e1000_get_cable_length_igp_2	e1000_phy.c	/^s32 e1000_get_cable_length_igp_2(struct e1000_hw *hw)$/;"	f
e1000_get_cable_length_m88	e1000_phy.c	/^s32 e1000_get_cable_length_m88(struct e1000_hw *hw)$/;"	f
e1000_get_cable_length_m88_gen2	e1000_phy.c	/^s32 e1000_get_cable_length_m88_gen2(struct e1000_hw *hw)$/;"	f
e1000_get_cfg_done_82575	e1000_82575.c	/^static s32 e1000_get_cfg_done_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cfg_done_generic	e1000_phy.c	/^s32 e1000_get_cfg_done_generic(struct e1000_hw E1000_UNUSEDARG *hw)$/;"	f
e1000_get_eee_status_i354	e1000_82575.c	/^s32 e1000_get_eee_status_i354(struct e1000_hw *hw, bool *status)$/;"	f
e1000_get_flash_presence_i210	e1000_i210.c	/^bool e1000_get_flash_presence_i210(struct e1000_hw *hw)$/;"	f
e1000_get_fw_version	e1000_nvm.c	/^void e1000_get_fw_version(struct e1000_hw *hw, struct e1000_fw_version *fw_vers)$/;"	f
e1000_get_hw_semaphore_generic	e1000_mac.c	/^s32 e1000_get_hw_semaphore_generic(struct e1000_hw *hw)$/;"	f
e1000_get_hw_semaphore_i210	e1000_i210.c	/^static s32 e1000_get_hw_semaphore_i210(struct e1000_hw *hw)$/;"	f	file:
e1000_get_i2c_ack	e1000_82575.c	/^static s32 e1000_get_i2c_ack(struct e1000_hw *hw)$/;"	f	file:
e1000_get_i2c_data	e1000_82575.c	/^static bool e1000_get_i2c_data(u32 *i2cctl)$/;"	f	file:
e1000_get_link_up_info_82575	e1000_82575.c	/^static s32 e1000_get_link_up_info_82575(struct e1000_hw *hw, u16 *speed,$/;"	f	file:
e1000_get_media_type_82575	e1000_82575.c	/^static s32 e1000_get_media_type_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_get_pcs_speed_and_duplex_82575	e1000_82575.c	/^static s32 e1000_get_pcs_speed_and_duplex_82575(struct e1000_hw *hw,$/;"	f	file:
e1000_get_phy_id	e1000_phy.c	/^s32 e1000_get_phy_id(struct e1000_hw *hw)$/;"	f
e1000_get_phy_id_82575	e1000_82575.c	/^static s32 e1000_get_phy_id_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_get_phy_info	e1000_api.c	/^s32 e1000_get_phy_info(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_82577	e1000_phy.c	/^s32 e1000_get_phy_info_82577(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_ife	e1000_phy.c	/^s32 e1000_get_phy_info_ife(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_igp	e1000_phy.c	/^s32 e1000_get_phy_info_igp(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_m88	e1000_phy.c	/^s32 e1000_get_phy_info_m88(struct e1000_hw *hw)$/;"	f
e1000_get_phy_type_from_id	e1000_phy.c	/^enum e1000_phy_type e1000_get_phy_type_from_id(u32 phy_id)$/;"	f
e1000_get_speed_and_duplex	e1000_api.c	/^s32 e1000_get_speed_and_duplex(struct e1000_hw *hw, u16 *speed, u16 *duplex)$/;"	f
e1000_get_speed_and_duplex_copper_generic	e1000_mac.c	/^s32 e1000_get_speed_and_duplex_copper_generic(struct e1000_hw *hw, u16 *speed,$/;"	f
e1000_get_speed_and_duplex_fiber_serdes_generic	e1000_mac.c	/^s32 e1000_get_speed_and_duplex_fiber_serdes_generic(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_get_thermal_sensor_data	e1000_api.c	/^s32 e1000_get_thermal_sensor_data(struct e1000_hw *hw)$/;"	f
e1000_get_thermal_sensor_data_generic	e1000_82575.c	/^s32 e1000_get_thermal_sensor_data_generic(struct e1000_hw *hw)$/;"	f
e1000_hash_mc_addr	e1000_api.c	/^u32 e1000_hash_mc_addr(struct e1000_hw *hw, u8 *mc_addr)$/;"	f
e1000_hash_mc_addr_generic	e1000_mac.c	/^u32 e1000_hash_mc_addr_generic(struct e1000_hw *hw, u8 *mc_addr)$/;"	f
e1000_host_command_header	e1000_hw.h	/^struct e1000_host_command_header {$/;"	s
e1000_host_command_info	e1000_hw.h	/^struct e1000_host_command_info {$/;"	s
e1000_host_interface_command	e1000_manage.c	/^s32 e1000_host_interface_command(struct e1000_hw *hw, u8 *buffer, u32 length)$/;"	f
e1000_host_mng_command_header	e1000_hw.h	/^struct e1000_host_mng_command_header {$/;"	s
e1000_host_mng_command_info	e1000_hw.h	/^struct e1000_host_mng_command_info {$/;"	s
e1000_host_mng_dhcp_cookie	e1000_hw.h	/^struct e1000_host_mng_dhcp_cookie {$/;"	s
e1000_hw	e1000_hw.h	/^struct e1000_hw {$/;"	s
e1000_hw_stats	e1000_hw.h	/^struct e1000_hw_stats {$/;"	s
e1000_i210	e1000_hw.h	/^	e1000_i210,$/;"	e	enum:e1000_mac_type
e1000_i211	e1000_hw.h	/^	e1000_i211,$/;"	e	enum:e1000_mac_type
e1000_i2c_bus_clear	e1000_82575.c	/^void e1000_i2c_bus_clear(struct e1000_hw *hw)$/;"	f
e1000_i2c_start	e1000_82575.c	/^static void e1000_i2c_start(struct e1000_hw *hw)$/;"	f	file:
e1000_i2c_stop	e1000_82575.c	/^static void e1000_i2c_stop(struct e1000_hw *hw)$/;"	f	file:
e1000_i350	e1000_hw.h	/^	e1000_i350,$/;"	e	enum:e1000_mac_type
e1000_i354	e1000_hw.h	/^	e1000_i354,$/;"	e	enum:e1000_mac_type
e1000_id_led_init	e1000_api.c	/^s32 e1000_id_led_init(struct e1000_hw *hw)$/;"	f
e1000_id_led_init_generic	e1000_mac.c	/^s32 e1000_id_led_init_generic(struct e1000_hw *hw)$/;"	f
e1000_igp_2_cable_length_table	e1000_phy.c	/^static const u16 e1000_igp_2_cable_length_table[] = {$/;"	v	file:
e1000_init_function_pointers_82575	e1000_82575.c	/^void e1000_init_function_pointers_82575(struct e1000_hw *hw)$/;"	f
e1000_init_function_pointers_i210	e1000_i210.c	/^void e1000_init_function_pointers_i210(struct e1000_hw *hw)$/;"	f
e1000_init_hw	e1000_api.c	/^s32 e1000_init_hw(struct e1000_hw *hw)$/;"	f
e1000_init_hw_82575	e1000_82575.c	/^static s32 e1000_init_hw_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_ops_generic	e1000_mac.c	/^void e1000_init_mac_ops_generic(struct e1000_hw *hw)$/;"	f
e1000_init_mac_params	e1000_api.c	/^s32 e1000_init_mac_params(struct e1000_hw *hw)$/;"	f
e1000_init_mac_params_82575	e1000_82575.c	/^static s32 e1000_init_mac_params_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mbx_ops_generic	e1000_mbx.c	/^void e1000_init_mbx_ops_generic(struct e1000_hw *hw)$/;"	f
e1000_init_mbx_params	e1000_api.c	/^s32 e1000_init_mbx_params(struct e1000_hw *hw)$/;"	f
e1000_init_mbx_params_pf	e1000_mbx.c	/^s32 e1000_init_mbx_params_pf(struct e1000_hw *hw)$/;"	f
e1000_init_nvm_ops_generic	e1000_nvm.c	/^void e1000_init_nvm_ops_generic(struct e1000_hw *hw)$/;"	f
e1000_init_nvm_params	e1000_api.c	/^s32 e1000_init_nvm_params(struct e1000_hw *hw)$/;"	f
e1000_init_nvm_params_82575	e1000_82575.c	/^s32 e1000_init_nvm_params_82575(struct e1000_hw *hw)$/;"	f
e1000_init_nvm_params_i210	e1000_i210.c	/^static s32 e1000_init_nvm_params_i210(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_ops_generic	e1000_phy.c	/^void e1000_init_phy_ops_generic(struct e1000_hw *hw)$/;"	f
e1000_init_phy_params	e1000_api.c	/^s32 e1000_init_phy_params(struct e1000_hw *hw)$/;"	f
e1000_init_phy_params_82575	e1000_82575.c	/^static s32 e1000_init_phy_params_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_init_rx_addrs_generic	e1000_mac.c	/^void e1000_init_rx_addrs_generic(struct e1000_hw *hw, u16 rar_count)$/;"	f
e1000_init_thermal_sensor_thresh	e1000_api.c	/^s32 e1000_init_thermal_sensor_thresh(struct e1000_hw *hw)$/;"	f
e1000_init_thermal_sensor_thresh_generic	e1000_82575.c	/^s32 e1000_init_thermal_sensor_thresh_generic(struct e1000_hw *hw)$/;"	f
e1000_is_mphy_ready	e1000_phy.c	/^bool e1000_is_mphy_ready(struct e1000_hw *hw)$/;"	f
e1000_led_off	e1000_api.c	/^s32 e1000_led_off(struct e1000_hw *hw)$/;"	f
e1000_led_off_generic	e1000_mac.c	/^s32 e1000_led_off_generic(struct e1000_hw *hw)$/;"	f
e1000_led_on	e1000_api.c	/^s32 e1000_led_on(struct e1000_hw *hw)$/;"	f
e1000_led_on_generic	e1000_mac.c	/^s32 e1000_led_on_generic(struct e1000_hw *hw)$/;"	f
e1000_load_firmware	e1000_manage.c	/^s32 e1000_load_firmware(struct e1000_hw *hw, u8 *buffer, u32 length)$/;"	f
e1000_lower_eec_clk	e1000_nvm.c	/^static void e1000_lower_eec_clk(struct e1000_hw *hw, u32 *eecd)$/;"	f	file:
e1000_lower_i2c_clk	e1000_82575.c	/^static void e1000_lower_i2c_clk(struct e1000_hw *hw, u32 *i2cctl)$/;"	f	file:
e1000_m88_cable_length_table	e1000_phy.c	/^static const u16 e1000_m88_cable_length_table[] = {$/;"	v	file:
e1000_mac_info	e1000_hw.h	/^struct e1000_mac_info {$/;"	s
e1000_mac_operations	e1000_hw.h	/^struct e1000_mac_operations {$/;"	s
e1000_mac_type	e1000_hw.h	/^enum e1000_mac_type {$/;"	g
e1000_mbx_info	e1000_hw.h	/^struct e1000_mbx_info {$/;"	s
e1000_mbx_operations	e1000_hw.h	/^struct e1000_mbx_operations {$/;"	s
e1000_mbx_stats	e1000_hw.h	/^struct e1000_mbx_stats {$/;"	s
e1000_media_type	e1000_hw.h	/^enum e1000_media_type {$/;"	g
e1000_media_type_copper	e1000_hw.h	/^	e1000_media_type_copper = 1,$/;"	e	enum:e1000_media_type
e1000_media_type_fiber	e1000_hw.h	/^	e1000_media_type_fiber = 2,$/;"	e	enum:e1000_media_type
e1000_media_type_internal_serdes	e1000_hw.h	/^	e1000_media_type_internal_serdes = 3,$/;"	e	enum:e1000_media_type
e1000_media_type_unknown	e1000_hw.h	/^	e1000_media_type_unknown = 0,$/;"	e	enum:e1000_media_type
e1000_mng_enable_host_if	e1000_api.c	/^s32 e1000_mng_enable_host_if(struct e1000_hw *hw)$/;"	f
e1000_mng_enable_host_if_generic	e1000_manage.c	/^s32 e1000_mng_enable_host_if_generic(struct e1000_hw *hw)$/;"	f
e1000_mng_host_if_write	e1000_api.c	/^s32 e1000_mng_host_if_write(struct e1000_hw *hw, u8 *buffer, u16 length,$/;"	f
e1000_mng_host_if_write_generic	e1000_manage.c	/^s32 e1000_mng_host_if_write_generic(struct e1000_hw *hw, u8 *buffer,$/;"	f
e1000_mng_mode	e1000_manage.h	/^enum e1000_mng_mode {$/;"	g
e1000_mng_mode_asf	e1000_manage.h	/^	e1000_mng_mode_asf,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_host_if_only	e1000_manage.h	/^	e1000_mng_mode_host_if_only$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_ipmi	e1000_manage.h	/^	e1000_mng_mode_ipmi,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_none	e1000_manage.h	/^	e1000_mng_mode_none = 0,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_pt	e1000_manage.h	/^	e1000_mng_mode_pt,$/;"	e	enum:e1000_mng_mode
e1000_mng_write_cmd_header	e1000_api.c	/^s32 e1000_mng_write_cmd_header(struct e1000_hw *hw,$/;"	f
e1000_mng_write_cmd_header_generic	e1000_manage.c	/^s32 e1000_mng_write_cmd_header_generic(struct e1000_hw *hw,$/;"	f
e1000_mng_write_dhcp_info	e1000_api.c	/^s32 e1000_mng_write_dhcp_info(struct e1000_hw *hw, u8 *buffer, u16 length)$/;"	f
e1000_mng_write_dhcp_info_generic	e1000_manage.c	/^s32 e1000_mng_write_dhcp_info_generic(struct e1000_hw *hw, u8 *buffer,$/;"	f
e1000_ms_auto	e1000_hw.h	/^	e1000_ms_auto$/;"	e	enum:e1000_ms_type
e1000_ms_force_master	e1000_hw.h	/^	e1000_ms_force_master,$/;"	e	enum:e1000_ms_type
e1000_ms_force_slave	e1000_hw.h	/^	e1000_ms_force_slave,$/;"	e	enum:e1000_ms_type
e1000_ms_hw_default	e1000_hw.h	/^	e1000_ms_hw_default = 0,$/;"	e	enum:e1000_ms_type
e1000_ms_type	e1000_hw.h	/^enum e1000_ms_type {$/;"	g
e1000_null_led_default	e1000_nvm.c	/^s32 e1000_null_led_default(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_null_link_info	e1000_mac.c	/^s32 e1000_null_link_info(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_null_lplu_state	e1000_phy.c	/^s32 e1000_null_lplu_state(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_null_mac_generic	e1000_mac.c	/^void e1000_null_mac_generic(struct e1000_hw E1000_UNUSEDARG *hw)$/;"	f
e1000_null_mbx_check_for_flag	e1000_mbx.c	/^static s32 e1000_null_mbx_check_for_flag(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f	file:
e1000_null_mbx_transact	e1000_mbx.c	/^static s32 e1000_null_mbx_transact(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f	file:
e1000_null_mng_mode	e1000_mac.c	/^bool e1000_null_mng_mode(struct e1000_hw E1000_UNUSEDARG *hw)$/;"	f
e1000_null_nvm_generic	e1000_nvm.c	/^void e1000_null_nvm_generic(struct e1000_hw E1000_UNUSEDARG *hw)$/;"	f
e1000_null_ops_generic	e1000_mac.c	/^s32 e1000_null_ops_generic(struct e1000_hw E1000_UNUSEDARG *hw)$/;"	f
e1000_null_phy_generic	e1000_phy.c	/^void e1000_null_phy_generic(struct e1000_hw E1000_UNUSEDARG *hw)$/;"	f
e1000_null_rar_set	e1000_mac.c	/^void e1000_null_rar_set(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_null_read_nvm	e1000_nvm.c	/^s32 e1000_null_read_nvm(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_null_read_reg	e1000_phy.c	/^s32 e1000_null_read_reg(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_null_set_page	e1000_phy.c	/^s32 e1000_null_set_page(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_null_update_mc	e1000_mac.c	/^void e1000_null_update_mc(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_null_write_nvm	e1000_nvm.c	/^s32 e1000_null_write_nvm(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_null_write_reg	e1000_phy.c	/^s32 e1000_null_write_reg(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_null_write_vfta	e1000_mac.c	/^void e1000_null_write_vfta(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_num_macs	e1000_hw.h	/^	e1000_num_macs  \/* List is 1-based, so subtract 1 for true count. *\/$/;"	e	enum:e1000_mac_type
e1000_num_media_types	e1000_hw.h	/^	e1000_num_media_types$/;"	e	enum:e1000_media_type
e1000_nvm_eeprom_spi	e1000_hw.h	/^	e1000_nvm_eeprom_spi,$/;"	e	enum:e1000_nvm_type
e1000_nvm_flash_hw	e1000_hw.h	/^	e1000_nvm_flash_hw,$/;"	e	enum:e1000_nvm_type
e1000_nvm_flash_sw	e1000_hw.h	/^	e1000_nvm_flash_sw$/;"	e	enum:e1000_nvm_type
e1000_nvm_info	e1000_hw.h	/^struct e1000_nvm_info {$/;"	s
e1000_nvm_invm	e1000_hw.h	/^	e1000_nvm_invm,$/;"	e	enum:e1000_nvm_type
e1000_nvm_none	e1000_hw.h	/^	e1000_nvm_none,$/;"	e	enum:e1000_nvm_type
e1000_nvm_operations	e1000_hw.h	/^struct e1000_nvm_operations {$/;"	s
e1000_nvm_override	e1000_hw.h	/^enum e1000_nvm_override {$/;"	g
e1000_nvm_override_none	e1000_hw.h	/^	e1000_nvm_override_none = 0,$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_spi_large	e1000_hw.h	/^	e1000_nvm_override_spi_large,$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_spi_small	e1000_hw.h	/^	e1000_nvm_override_spi_small,$/;"	e	enum:e1000_nvm_override
e1000_nvm_type	e1000_hw.h	/^enum e1000_nvm_type {$/;"	g
e1000_nvm_unknown	e1000_hw.h	/^	e1000_nvm_unknown = 0,$/;"	e	enum:e1000_nvm_type
e1000_obtain_mbx_lock_pf	e1000_mbx.c	/^static s32 e1000_obtain_mbx_lock_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	file:
e1000_phy_82580	e1000_hw.h	/^	e1000_phy_82580,$/;"	e	enum:e1000_phy_type
e1000_phy_commit	e1000_api.c	/^s32 e1000_phy_commit(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_82577	e1000_phy.c	/^s32 e1000_phy_force_speed_duplex_82577(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_ife	e1000_phy.c	/^s32 e1000_phy_force_speed_duplex_ife(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_igp	e1000_phy.c	/^s32 e1000_phy_force_speed_duplex_igp(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_m88	e1000_phy.c	/^s32 e1000_phy_force_speed_duplex_m88(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_setup	e1000_phy.c	/^void e1000_phy_force_speed_duplex_setup(struct e1000_hw *hw, u16 *phy_ctrl)$/;"	f
e1000_phy_gg82563	e1000_hw.h	/^	e1000_phy_gg82563,$/;"	e	enum:e1000_phy_type
e1000_phy_has_link_generic	e1000_phy.c	/^s32 e1000_phy_has_link_generic(struct e1000_hw *hw, u32 iterations,$/;"	f
e1000_phy_hw_reset	e1000_api.c	/^s32 e1000_phy_hw_reset(struct e1000_hw *hw)$/;"	f
e1000_phy_hw_reset_generic	e1000_phy.c	/^s32 e1000_phy_hw_reset_generic(struct e1000_hw *hw)$/;"	f
e1000_phy_hw_reset_sgmii_82575	e1000_82575.c	/^static s32 e1000_phy_hw_reset_sgmii_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_i210	e1000_hw.h	/^	e1000_phy_i210,$/;"	e	enum:e1000_phy_type
e1000_phy_ife	e1000_hw.h	/^	e1000_phy_ife,$/;"	e	enum:e1000_phy_type
e1000_phy_igp	e1000_hw.h	/^	e1000_phy_igp,$/;"	e	enum:e1000_phy_type
e1000_phy_igp_2	e1000_hw.h	/^	e1000_phy_igp_2,$/;"	e	enum:e1000_phy_type
e1000_phy_igp_3	e1000_hw.h	/^	e1000_phy_igp_3,$/;"	e	enum:e1000_phy_type
e1000_phy_info	e1000_hw.h	/^struct e1000_phy_info {$/;"	s
e1000_phy_init_script_igp3	e1000_phy.c	/^s32 e1000_phy_init_script_igp3(struct e1000_hw *hw)$/;"	f
e1000_phy_m88	e1000_hw.h	/^	e1000_phy_m88,$/;"	e	enum:e1000_phy_type
e1000_phy_none	e1000_hw.h	/^	e1000_phy_none,$/;"	e	enum:e1000_phy_type
e1000_phy_operations	e1000_hw.h	/^struct e1000_phy_operations {$/;"	s
e1000_phy_reset_dsp_generic	e1000_phy.c	/^s32 e1000_phy_reset_dsp_generic(struct e1000_hw *hw)$/;"	f
e1000_phy_setup_autoneg	e1000_phy.c	/^static s32 e1000_phy_setup_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_stats	e1000_hw.h	/^struct e1000_phy_stats {$/;"	s
e1000_phy_sw_reset_generic	e1000_phy.c	/^s32 e1000_phy_sw_reset_generic(struct e1000_hw *hw)$/;"	f
e1000_phy_type	e1000_hw.h	/^enum e1000_phy_type {$/;"	g
e1000_phy_unknown	e1000_hw.h	/^	e1000_phy_unknown = 0,$/;"	e	enum:e1000_phy_type
e1000_phy_vf	e1000_hw.h	/^	e1000_phy_vf,$/;"	e	enum:e1000_phy_type
e1000_poll_eerd_eewr_done	e1000_nvm.c	/^s32 e1000_poll_eerd_eewr_done(struct e1000_hw *hw, int ee_reg)$/;"	f
e1000_poll_fiber_serdes_link_generic	e1000_mac.c	/^static s32 e1000_poll_fiber_serdes_link_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_poll_for_ack	e1000_mbx.c	/^static s32 e1000_poll_for_ack(struct e1000_hw *hw, u16 mbx_id)$/;"	f	file:
e1000_poll_for_msg	e1000_mbx.c	/^static s32 e1000_poll_for_msg(struct e1000_hw *hw, u16 mbx_id)$/;"	f	file:
e1000_pool_flash_update_done_i210	e1000_i210.c	/^s32 e1000_pool_flash_update_done_i210(struct e1000_hw *hw)$/;"	f
e1000_power_down_phy	e1000_api.c	/^void e1000_power_down_phy(struct e1000_hw *hw)$/;"	f
e1000_power_down_phy_copper	e1000_phy.c	/^void e1000_power_down_phy_copper(struct e1000_hw *hw)$/;"	f
e1000_power_down_phy_copper_82575	e1000_82575.c	/^static void e1000_power_down_phy_copper_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_power_up_fiber_serdes_link	e1000_api.c	/^void e1000_power_up_fiber_serdes_link(struct e1000_hw *hw)$/;"	f
e1000_power_up_phy	e1000_api.c	/^void e1000_power_up_phy(struct e1000_hw *hw)$/;"	f
e1000_power_up_phy_copper	e1000_phy.c	/^void e1000_power_up_phy_copper(struct e1000_hw *hw)$/;"	f
e1000_power_up_serdes_link_82575	e1000_82575.c	/^static void e1000_power_up_serdes_link_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_put_hw_semaphore_generic	e1000_mac.c	/^void e1000_put_hw_semaphore_generic(struct e1000_hw *hw)$/;"	f
e1000_raise_eec_clk	e1000_nvm.c	/^static void e1000_raise_eec_clk(struct e1000_hw *hw, u32 *eecd)$/;"	f	file:
e1000_raise_i2c_clk	e1000_82575.c	/^static void e1000_raise_i2c_clk(struct e1000_hw *hw, u32 *i2cctl)$/;"	f	file:
e1000_rar_set	e1000_api.c	/^void e1000_rar_set(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f
e1000_rar_set_generic	e1000_mac.c	/^static void e1000_rar_set_generic(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f	file:
e1000_read_emi_reg	e1000_82575.c	/^s32 e1000_read_emi_reg(struct e1000_hw *hw, u16 addr, u16 *data)$/;"	f
e1000_read_i2c_byte_generic	e1000_82575.c	/^s32 e1000_read_i2c_byte_generic(struct e1000_hw *hw, u8 byte_offset,$/;"	f
e1000_read_i2c_byte_null	e1000_phy.c	/^s32 e1000_read_i2c_byte_null(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_read_invm_i210	e1000_i210.c	/^static s32 e1000_read_invm_i210(struct e1000_hw *hw, u16 offset,$/;"	f	file:
e1000_read_invm_version	e1000_i210.c	/^s32 e1000_read_invm_version(struct e1000_hw *hw,$/;"	f
e1000_read_invm_word_i210	e1000_i210.c	/^static s32 e1000_read_invm_word_i210(struct e1000_hw *hw, u8 address, u16 *data)$/;"	f	file:
e1000_read_kmrn_reg	e1000_api.c	/^s32 e1000_read_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_kmrn_reg_generic	e1000_phy.c	/^s32 e1000_read_kmrn_reg_generic(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_kmrn_reg_locked	e1000_phy.c	/^s32 e1000_read_kmrn_reg_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_mac_addr	e1000_api.c	/^s32 e1000_read_mac_addr(struct e1000_hw *hw)$/;"	f
e1000_read_mac_addr_82575	e1000_82575.c	/^static s32 e1000_read_mac_addr_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_read_mac_addr_generic	e1000_nvm.c	/^s32 e1000_read_mac_addr_generic(struct e1000_hw *hw)$/;"	f
e1000_read_mbx	e1000_mbx.c	/^s32 e1000_read_mbx(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id)$/;"	f
e1000_read_mbx_pf	e1000_mbx.c	/^static s32 e1000_read_mbx_pf(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	f	file:
e1000_read_nvm	e1000_api.c	/^s32 e1000_read_nvm(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000_read_nvm_eerd	e1000_nvm.c	/^s32 e1000_read_nvm_eerd(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000_read_nvm_spi	e1000_nvm.c	/^s32 e1000_read_nvm_spi(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000_read_nvm_srrd_i210	e1000_i210.c	/^s32 e1000_read_nvm_srrd_i210(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f
e1000_read_pba_length	e1000_api.c	/^s32 e1000_read_pba_length(struct e1000_hw *hw, u32 *pba_num_size)$/;"	f
e1000_read_pba_length_generic	e1000_nvm.c	/^s32 e1000_read_pba_length_generic(struct e1000_hw *hw, u32 *pba_num_size)$/;"	f
e1000_read_pba_string	e1000_api.c	/^s32 e1000_read_pba_string(struct e1000_hw *hw, u8 *pba_num, u32 pba_num_size)$/;"	f
e1000_read_pba_string_generic	e1000_nvm.c	/^s32 e1000_read_pba_string_generic(struct e1000_hw *hw, u8 *pba_num,$/;"	f
e1000_read_pcie_cap_reg	igb_main.c	/^s32 e1000_read_pcie_cap_reg(struct e1000_hw *hw, u32 reg, u16 *value)$/;"	f
e1000_read_phy_reg	e1000_api.c	/^s32 e1000_read_phy_reg(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_82580	e1000_82575.c	/^static s32 e1000_read_phy_reg_82580(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f	file:
e1000_read_phy_reg_gs40g	e1000_phy.c	/^s32 e1000_read_phy_reg_gs40g(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_i2c	e1000_phy.c	/^s32 e1000_read_phy_reg_i2c(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_igp	e1000_phy.c	/^s32 e1000_read_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_igp_locked	e1000_phy.c	/^s32 e1000_read_phy_reg_igp_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_m88	e1000_phy.c	/^s32 e1000_read_phy_reg_m88(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_mdic	e1000_phy.c	/^s32 e1000_read_phy_reg_mdic(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_mphy	e1000_phy.c	/^s32 e1000_read_phy_reg_mphy(struct e1000_hw *hw, u32 address, u32 *data)$/;"	f
e1000_read_phy_reg_sgmii_82575	e1000_82575.c	/^static s32 e1000_read_phy_reg_sgmii_82575(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_posted_mbx	e1000_mbx.c	/^s32 e1000_read_posted_mbx(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id)$/;"	f
e1000_read_sfp_data_byte	e1000_phy.c	/^s32 e1000_read_sfp_data_byte(struct e1000_hw *hw, u16 offset, u8 *data)$/;"	f
e1000_read_xmdio_reg	e1000_i210.c	/^s32 e1000_read_xmdio_reg(struct e1000_hw *hw, u16 addr, u8 dev_addr, u16 *data)$/;"	f
e1000_ready_nvm_eeprom	e1000_nvm.c	/^static s32 e1000_ready_nvm_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_82575	e1000_82575.c	/^static void e1000_release_nvm_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_generic	e1000_nvm.c	/^void e1000_release_nvm_generic(struct e1000_hw *hw)$/;"	f
e1000_release_nvm_i210	e1000_i210.c	/^static void e1000_release_nvm_i210(struct e1000_hw *hw)$/;"	f	file:
e1000_release_phy	e1000_api.c	/^void e1000_release_phy(struct e1000_hw *hw)$/;"	f
e1000_release_phy_82575	e1000_82575.c	/^static void e1000_release_phy_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_release_swfw_sync_82575	e1000_82575.c	/^static void e1000_release_swfw_sync_82575(struct e1000_hw *hw, u16 mask)$/;"	f	file:
e1000_release_swfw_sync_i210	e1000_i210.c	/^void e1000_release_swfw_sync_i210(struct e1000_hw *hw, u16 mask)$/;"	f
e1000_reload_nvm	e1000_api.c	/^void e1000_reload_nvm(struct e1000_hw *hw)$/;"	f
e1000_reload_nvm_generic	e1000_nvm.c	/^static void e1000_reload_nvm_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_adaptive	e1000_api.c	/^void e1000_reset_adaptive(struct e1000_hw *hw)$/;"	f
e1000_reset_adaptive_generic	e1000_mac.c	/^void e1000_reset_adaptive_generic(struct e1000_hw *hw)$/;"	f
e1000_reset_hw	e1000_api.c	/^s32 e1000_reset_hw(struct e1000_hw *hw)$/;"	f
e1000_reset_hw_82575	e1000_82575.c	/^static s32 e1000_reset_hw_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_82580	e1000_82575.c	/^static s32 e1000_reset_hw_82580(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_init_script_82575	e1000_82575.c	/^static s32 e1000_reset_init_script_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_mdicnfg_82580	e1000_82575.c	/^static s32 e1000_reset_mdicnfg_82580(struct e1000_hw *hw)$/;"	f	file:
e1000_rev_polarity	e1000_hw.h	/^enum e1000_rev_polarity {$/;"	g
e1000_rev_polarity_normal	e1000_hw.h	/^	e1000_rev_polarity_normal = 0,$/;"	e	enum:e1000_rev_polarity
e1000_rev_polarity_reversed	e1000_hw.h	/^	e1000_rev_polarity_reversed,$/;"	e	enum:e1000_rev_polarity
e1000_rev_polarity_undefined	e1000_hw.h	/^	e1000_rev_polarity_undefined = 0xFF$/;"	e	enum:e1000_rev_polarity
e1000_ring_flags_t	igb.h	/^enum e1000_ring_flags_t {$/;"	g
e1000_rx_desc	e1000_hw.h	/^struct e1000_rx_desc {$/;"	s
e1000_rx_desc_extended	e1000_hw.h	/^union e1000_rx_desc_extended {$/;"	u
e1000_rx_desc_packet_split	e1000_hw.h	/^union e1000_rx_desc_packet_split {$/;"	u
e1000_rx_fifo_flush_82575	e1000_82575.c	/^void e1000_rx_fifo_flush_82575(struct e1000_hw *hw)$/;"	f
e1000_rxpbs_adjust_82580	e1000_82575.c	/^u16 e1000_rxpbs_adjust_82580(u32 data)$/;"	f
e1000_serdes_link_autoneg_complete	e1000_hw.h	/^	e1000_serdes_link_autoneg_complete,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_autoneg_progress	e1000_hw.h	/^	e1000_serdes_link_autoneg_progress,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_down	e1000_hw.h	/^	e1000_serdes_link_down = 0,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_forced_up	e1000_hw.h	/^	e1000_serdes_link_forced_up$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_state	e1000_hw.h	/^enum e1000_serdes_link_state {$/;"	g
e1000_set_d0_lplu_state	e1000_api.c	/^s32 e1000_set_d0_lplu_state(struct e1000_hw *hw, bool active)$/;"	f
e1000_set_d0_lplu_state_82575	e1000_82575.c	/^static s32 e1000_set_d0_lplu_state_82575(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d0_lplu_state_82580	e1000_82575.c	/^static s32 e1000_set_d0_lplu_state_82580(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d3_lplu_state	e1000_api.c	/^s32 e1000_set_d3_lplu_state(struct e1000_hw *hw, bool active)$/;"	f
e1000_set_d3_lplu_state_82580	e1000_82575.c	/^s32 e1000_set_d3_lplu_state_82580(struct e1000_hw *hw, bool active)$/;"	f
e1000_set_d3_lplu_state_generic	e1000_phy.c	/^s32 e1000_set_d3_lplu_state_generic(struct e1000_hw *hw, bool active)$/;"	f
e1000_set_default_fc_generic	e1000_mac.c	/^static s32 e1000_set_default_fc_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_set_eee_i350	e1000_82575.c	/^s32 e1000_set_eee_i350(struct e1000_hw *hw)$/;"	f
e1000_set_eee_i354	e1000_82575.c	/^s32 e1000_set_eee_i354(struct e1000_hw *hw)$/;"	f
e1000_set_fc_watermarks_generic	e1000_mac.c	/^s32 e1000_set_fc_watermarks_generic(struct e1000_hw *hw)$/;"	f
e1000_set_i2c_bb	e1000_82575.c	/^s32 e1000_set_i2c_bb(struct e1000_hw *hw)$/;"	f
e1000_set_i2c_data	e1000_82575.c	/^static s32 e1000_set_i2c_data(struct e1000_hw *hw, u32 *i2cctl, bool data)$/;"	f	file:
e1000_set_lan_id_multi_port_pcie	e1000_mac.c	/^static void e1000_set_lan_id_multi_port_pcie(struct e1000_hw *hw)$/;"	f	file:
e1000_set_lan_id_single_port	e1000_mac.c	/^void e1000_set_lan_id_single_port(struct e1000_hw *hw)$/;"	f
e1000_set_mac_type	e1000_api.c	/^s32 e1000_set_mac_type(struct e1000_hw *hw)$/;"	f
e1000_set_master_slave_mode	e1000_phy.c	/^static s32 e1000_set_master_slave_mode(struct e1000_hw *hw)$/;"	f	file:
e1000_set_page_igp	e1000_phy.c	/^s32 e1000_set_page_igp(struct e1000_hw *hw, u16 page)$/;"	f
e1000_set_pcie_completion_timeout	e1000_82575.c	/^static s32 e1000_set_pcie_completion_timeout(struct e1000_hw *hw)$/;"	f	file:
e1000_set_pcie_no_snoop_generic	e1000_mac.c	/^void e1000_set_pcie_no_snoop_generic(struct e1000_hw *hw, u32 no_snoop)$/;"	f
e1000_set_sfp_media_type_82575	e1000_82575.c	/^static s32 e1000_set_sfp_media_type_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_82575	e1000_82575.c	/^static s32 e1000_setup_copper_link_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_generic	e1000_phy.c	/^s32 e1000_setup_copper_link_generic(struct e1000_hw *hw)$/;"	f
e1000_setup_fiber_serdes_link_generic	e1000_mac.c	/^s32 e1000_setup_fiber_serdes_link_generic(struct e1000_hw *hw)$/;"	f
e1000_setup_init_funcs	e1000_api.c	/^s32 e1000_setup_init_funcs(struct e1000_hw *hw, bool init_device)$/;"	f
e1000_setup_led	e1000_api.c	/^s32 e1000_setup_led(struct e1000_hw *hw)$/;"	f
e1000_setup_led_generic	e1000_mac.c	/^s32 e1000_setup_led_generic(struct e1000_hw *hw)$/;"	f
e1000_setup_link	e1000_api.c	/^s32 e1000_setup_link(struct e1000_hw *hw)$/;"	f
e1000_setup_link_generic	e1000_mac.c	/^s32 e1000_setup_link_generic(struct e1000_hw *hw)$/;"	f
e1000_setup_serdes_link_82575	e1000_82575.c	/^static s32 e1000_setup_serdes_link_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_sgmii_active_82575	e1000_82575.c	/^static bool e1000_sgmii_active_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_sgmii_uses_mdio_82575	e1000_82575.c	/^static bool e1000_sgmii_uses_mdio_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_shift_in_eec_bits	e1000_nvm.c	/^static u16 e1000_shift_in_eec_bits(struct e1000_hw *hw, u16 count)$/;"	f	file:
e1000_shift_out_eec_bits	e1000_nvm.c	/^static void e1000_shift_out_eec_bits(struct e1000_hw *hw, u16 data, u16 count)$/;"	f	file:
e1000_shutdown_fiber_serdes_link	e1000_api.c	/^void e1000_shutdown_fiber_serdes_link(struct e1000_hw *hw)$/;"	f
e1000_shutdown_serdes_link_82575	e1000_82575.c	/^void e1000_shutdown_serdes_link_82575(struct e1000_hw *hw)$/;"	f
e1000_smart_speed	e1000_hw.h	/^enum e1000_smart_speed {$/;"	g
e1000_smart_speed_default	e1000_hw.h	/^	e1000_smart_speed_default = 0,$/;"	e	enum:e1000_smart_speed
e1000_smart_speed_off	e1000_hw.h	/^	e1000_smart_speed_off$/;"	e	enum:e1000_smart_speed
e1000_smart_speed_on	e1000_hw.h	/^	e1000_smart_speed_on,$/;"	e	enum:e1000_smart_speed
e1000_standby_nvm	e1000_nvm.c	/^static void e1000_standby_nvm(struct e1000_hw *hw)$/;"	f	file:
e1000_state_t	igb.h	/^enum e1000_state_t {$/;"	g
e1000_stop_nvm	e1000_nvm.c	/^static void e1000_stop_nvm(struct e1000_hw *hw)$/;"	f	file:
e1000_thermal_diode_data	e1000_hw.h	/^struct e1000_thermal_diode_data {$/;"	s
e1000_thermal_sensor_data	e1000_hw.h	/^struct e1000_thermal_sensor_data {$/;"	s
e1000_tx_desc	e1000_hw.h	/^struct e1000_tx_desc {$/;"	s
e1000_undefined	e1000_hw.h	/^	e1000_undefined = 0,$/;"	e	enum:e1000_mac_type
e1000_update_adaptive	e1000_api.c	/^void e1000_update_adaptive(struct e1000_hw *hw)$/;"	f
e1000_update_adaptive_generic	e1000_mac.c	/^void e1000_update_adaptive_generic(struct e1000_hw *hw)$/;"	f
e1000_update_flash_i210	e1000_i210.c	/^s32 e1000_update_flash_i210(struct e1000_hw *hw)$/;"	f
e1000_update_mc_addr_list	e1000_api.c	/^void e1000_update_mc_addr_list(struct e1000_hw *hw, u8 *mc_addr_list,$/;"	f
e1000_update_mc_addr_list_generic	e1000_mac.c	/^void e1000_update_mc_addr_list_generic(struct e1000_hw *hw,$/;"	f
e1000_update_nvm_checksum	e1000_api.c	/^s32 e1000_update_nvm_checksum(struct e1000_hw *hw)$/;"	f
e1000_update_nvm_checksum_82580	e1000_82575.c	/^static s32 e1000_update_nvm_checksum_82580(struct e1000_hw *hw)$/;"	f	file:
e1000_update_nvm_checksum_generic	e1000_nvm.c	/^s32 e1000_update_nvm_checksum_generic(struct e1000_hw *hw)$/;"	f
e1000_update_nvm_checksum_i210	e1000_i210.c	/^s32 e1000_update_nvm_checksum_i210(struct e1000_hw *hw)$/;"	f
e1000_update_nvm_checksum_i350	e1000_82575.c	/^static s32 e1000_update_nvm_checksum_i350(struct e1000_hw *hw)$/;"	f	file:
e1000_update_nvm_checksum_with_offset	e1000_82575.c	/^s32 e1000_update_nvm_checksum_with_offset(struct e1000_hw *hw, u16 offset)$/;"	f
e1000_valid_led_default_82575	e1000_82575.c	/^static s32 e1000_valid_led_default_82575(struct e1000_hw *hw, u16 *data)$/;"	f	file:
e1000_valid_led_default_generic	e1000_mac.c	/^s32 e1000_valid_led_default_generic(struct e1000_hw *hw, u16 *data)$/;"	f
e1000_valid_led_default_i210	e1000_i210.c	/^static s32 e1000_valid_led_default_i210(struct e1000_hw *hw, u16 *data)$/;"	f	file:
e1000_validate_mdi_setting	e1000_api.c	/^s32 e1000_validate_mdi_setting(struct e1000_hw *hw)$/;"	f
e1000_validate_mdi_setting_crossover_generic	e1000_mac.c	/^s32 e1000_validate_mdi_setting_crossover_generic(struct e1000_hw E1000_UNUSEDARG *hw)$/;"	f
e1000_validate_mdi_setting_generic	e1000_mac.c	/^static s32 e1000_validate_mdi_setting_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_nvm_checksum	e1000_api.c	/^s32 e1000_validate_nvm_checksum(struct e1000_hw *hw)$/;"	f
e1000_validate_nvm_checksum_82580	e1000_82575.c	/^static s32 e1000_validate_nvm_checksum_82580(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_nvm_checksum_generic	e1000_nvm.c	/^s32 e1000_validate_nvm_checksum_generic(struct e1000_hw *hw)$/;"	f
e1000_validate_nvm_checksum_i210	e1000_i210.c	/^s32 e1000_validate_nvm_checksum_i210(struct e1000_hw *hw)$/;"	f
e1000_validate_nvm_checksum_i350	e1000_82575.c	/^static s32 e1000_validate_nvm_checksum_i350(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_nvm_checksum_with_offset	e1000_82575.c	/^s32 e1000_validate_nvm_checksum_with_offset(struct e1000_hw *hw, u16 offset)$/;"	f
e1000_vmdq_set_anti_spoofing_pf	e1000_82575.c	/^void e1000_vmdq_set_anti_spoofing_pf(struct e1000_hw *hw, bool enable, int pf)$/;"	f
e1000_vmdq_set_loopback_pf	e1000_82575.c	/^void e1000_vmdq_set_loopback_pf(struct e1000_hw *hw, bool enable)$/;"	f
e1000_vmdq_set_replication_pf	e1000_82575.c	/^void e1000_vmdq_set_replication_pf(struct e1000_hw *hw, bool enable)$/;"	f
e1000_wait_autoneg	e1000_phy.c	/^static s32 e1000_wait_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_write_8bit_ctrl_reg	e1000_api.c	/^s32 e1000_write_8bit_ctrl_reg(struct e1000_hw *hw, u32 reg, u32 offset,$/;"	f
e1000_write_8bit_ctrl_reg_generic	e1000_mac.c	/^s32 e1000_write_8bit_ctrl_reg_generic(struct e1000_hw *hw, u32 reg,$/;"	f
e1000_write_i2c_byte_generic	e1000_82575.c	/^s32 e1000_write_i2c_byte_generic(struct e1000_hw *hw, u8 byte_offset,$/;"	f
e1000_write_i2c_byte_null	e1000_phy.c	/^s32 e1000_write_i2c_byte_null(struct e1000_hw E1000_UNUSEDARG *hw,$/;"	f
e1000_write_kmrn_reg	e1000_api.c	/^s32 e1000_write_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_kmrn_reg_generic	e1000_phy.c	/^s32 e1000_write_kmrn_reg_generic(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_kmrn_reg_locked	e1000_phy.c	/^s32 e1000_write_kmrn_reg_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_mbx	e1000_mbx.c	/^s32 e1000_write_mbx(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id)$/;"	f
e1000_write_mbx_pf	e1000_mbx.c	/^static s32 e1000_write_mbx_pf(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	f	file:
e1000_write_nvm	e1000_api.c	/^s32 e1000_write_nvm(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000_write_nvm_spi	e1000_nvm.c	/^s32 e1000_write_nvm_spi(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000_write_nvm_srwr	e1000_i210.c	/^static s32 e1000_write_nvm_srwr(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	file:
e1000_write_nvm_srwr_i210	e1000_i210.c	/^s32 e1000_write_nvm_srwr_i210(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f
e1000_write_pcie_cap_reg	igb_main.c	/^s32 e1000_write_pcie_cap_reg(struct e1000_hw *hw, u32 reg, u16 *value)$/;"	f
e1000_write_phy_reg	e1000_api.c	/^s32 e1000_write_phy_reg(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_82580	e1000_82575.c	/^static s32 e1000_write_phy_reg_82580(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f	file:
e1000_write_phy_reg_gs40g	e1000_phy.c	/^s32 e1000_write_phy_reg_gs40g(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_i2c	e1000_phy.c	/^s32 e1000_write_phy_reg_i2c(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_igp	e1000_phy.c	/^s32 e1000_write_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_igp_locked	e1000_phy.c	/^s32 e1000_write_phy_reg_igp_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_m88	e1000_phy.c	/^s32 e1000_write_phy_reg_m88(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_mdic	e1000_phy.c	/^s32 e1000_write_phy_reg_mdic(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_mphy	e1000_phy.c	/^s32 e1000_write_phy_reg_mphy(struct e1000_hw *hw, u32 address, u32 data,$/;"	f
e1000_write_phy_reg_sgmii_82575	e1000_82575.c	/^static s32 e1000_write_phy_reg_sgmii_82575(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_write_posted_mbx	e1000_mbx.c	/^s32 e1000_write_posted_mbx(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id)$/;"	f
e1000_write_sfp_data_byte	e1000_phy.c	/^s32 e1000_write_sfp_data_byte(struct e1000_hw *hw, u16 offset, u8 data)$/;"	f
e1000_write_vfta	e1000_api.c	/^void e1000_write_vfta(struct e1000_hw *hw, u32 offset, u32 value)$/;"	f
e1000_write_vfta_generic	e1000_mac.c	/^void e1000_write_vfta_generic(struct e1000_hw *hw, u32 offset, u32 value)$/;"	f
e1000_write_vfta_i350	e1000_82575.c	/^void e1000_write_vfta_i350(struct e1000_hw *hw, u32 offset, u32 value)$/;"	f
e1000_write_xmdio_reg	e1000_i210.c	/^s32 e1000_write_xmdio_reg(struct e1000_hw *hw, u16 addr, u8 dev_addr, u16 data)$/;"	f
e100_base_fx	e1000_phy.h	/^	u8 e100_base_fx:1;$/;"	m	struct:sfp_e1000_flags
e100_base_lx	e1000_phy.h	/^	u8 e100_base_lx:1;$/;"	m	struct:sfp_e1000_flags
e10_base_bx10	e1000_phy.h	/^	u8 e10_base_bx10:1;$/;"	m	struct:sfp_e1000_flags
e10_base_px	e1000_phy.h	/^	u8 e10_base_px:1;$/;"	m	struct:sfp_e1000_flags
ecol	e1000_hw.h	/^	u64 ecol;$/;"	m	struct:e1000_hw_stats
eedump_len	kcompat.h	/^	u32 eedump_len;$/;"	m	struct:k_ethtool_drvinfo
eee_advert	igb.h	/^	u16 eee_advert;$/;"	m	struct:igb_adapter
eee_disable	e1000_hw.h	/^	bool eee_disable;$/;"	m	struct:e1000_dev_spec_82575
eep_build	e1000_nvm.h	/^	u16 eep_build;$/;"	m	struct:e1000_fw_version
eep_major	e1000_nvm.h	/^	u16 eep_major;$/;"	m	struct:e1000_fw_version
eep_minor	e1000_nvm.h	/^	u16 eep_minor;$/;"	m	struct:e1000_fw_version
eims_enable_mask	igb.h	/^	u32 eims_enable_mask;$/;"	m	struct:igb_adapter
eims_other	igb.h	/^	u32 eims_other;$/;"	m	struct:igb_adapter
eims_value	igb.h	/^	u32 eims_value;			\/* EIMS mask value *\/$/;"	m	struct:igb_q_vector
em_mac_addresses	igb.h	/^	unsigned char em_mac_addresses[MAX_EMULATION_MAC_ADDRS * ETH_ALEN];$/;"	m	struct:vf_data_storage
en_mng_pt	igb.h	/^	u32 en_mng_pt;$/;"	m	struct:igb_adapter
enable_option	igb_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:igb_option::__anon7	file:
entry	kcompat.h	/^	u16 entry;  \/* driver uses to specify entry, OS writes *\/$/;"	m	struct:msix_entry
err	igb_param.c	/^	const char *err;$/;"	m	struct:igb_option	file:
errors	e1000_hw.h	/^	u8  errors;  \/* Descriptor Errors *\/$/;"	m	struct:e1000_rx_desc
eth_dir	igb.h	/^	struct proc_dir_entry *eth_dir;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::proc_dir_entry
eth_flags	e1000_hw.h	/^	struct sfp_e1000_flags eth_flags;$/;"	m	struct:e1000_dev_spec_82575	typeref:struct:e1000_dev_spec_82575::sfp_e1000_flags
eth_hw_addr_random	kcompat.h	3494;"	d
eth_hw_addr_random	kcompat.h	3499;"	d
ethtool_adv_to_mmd_eee_adv_t	kcompat.h	/^static inline u16 ethtool_adv_to_mmd_eee_adv_t(u32 adv)$/;"	f
ethtool_cmd_speed	kcompat.h	2420;"	d
ethtool_cmd_speed_set	kcompat.h	2413;"	d
ethtool_coalesce	kcompat.h	471;"	d
ethtool_drvinfo	kcompat.h	349;"	d
ethtool_drvinfo	kcompat.h	350;"	d
ethtool_eeprom	kcompat.h	/^struct ethtool_eeprom {$/;"	s
ethtool_get_coalesce	kcompat_ethtool.c	/^static int ethtool_get_coalesce(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_drvinfo	kcompat_ethtool.c	/^static int ethtool_get_drvinfo(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_eeprom	kcompat_ethtool.c	/^static int ethtool_get_eeprom(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_link	kcompat_ethtool.c	/^static int ethtool_get_link(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_msglevel	kcompat_ethtool.c	/^static int ethtool_get_msglevel(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_pauseparam	kcompat_ethtool.c	/^static int ethtool_get_pauseparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_regs	kcompat_ethtool.c	/^static int ethtool_get_regs(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_ringparam	kcompat_ethtool.c	/^static int ethtool_get_ringparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_rx_csum	kcompat_ethtool.c	/^static int ethtool_get_rx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_settings	kcompat_ethtool.c	/^static int ethtool_get_settings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_sg	kcompat_ethtool.c	/^static int ethtool_get_sg(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_stats	kcompat_ethtool.c	/^static int ethtool_get_stats(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_strings	kcompat_ethtool.c	/^static int ethtool_get_strings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_tso	kcompat_ethtool.c	/^static int ethtool_get_tso(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_tx_csum	kcompat_ethtool.c	/^static int ethtool_get_tx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_wol	kcompat_ethtool.c	/^static int ethtool_get_wol(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_gstrings	kcompat.h	/^struct ethtool_gstrings {$/;"	s
ethtool_ioctl	kcompat_ethtool.c	/^int ethtool_ioctl(struct ifreq *ifr)$/;"	f
ethtool_nway_reset	kcompat_ethtool.c	/^static int ethtool_nway_reset(struct net_device *dev)$/;"	f	file:
ethtool_op_get_flags	kcompat.h	3080;"	d
ethtool_op_get_link	kcompat_ethtool.c	118;"	d	file:
ethtool_op_get_link	kcompat_ethtool.c	119;"	d	file:
ethtool_op_get_sg	kcompat_ethtool.c	156;"	d	file:
ethtool_op_get_sg	kcompat_ethtool.c	157;"	d	file:
ethtool_op_get_tso	kcompat_ethtool.c	181;"	d	file:
ethtool_op_get_tso	kcompat_ethtool.c	182;"	d	file:
ethtool_op_get_tx_csum	kcompat_ethtool.c	125;"	d	file:
ethtool_op_get_tx_csum	kcompat_ethtool.c	126;"	d	file:
ethtool_op_set_flags	kcompat.h	3078;"	d
ethtool_op_set_sg	kcompat_ethtool.c	167;"	d	file:
ethtool_op_set_sg	kcompat_ethtool.c	168;"	d	file:
ethtool_op_set_tso	kcompat_ethtool.c	192;"	d	file:
ethtool_op_set_tso	kcompat_ethtool.c	193;"	d	file:
ethtool_op_set_tx_csum	kcompat_ethtool.c	136;"	d	file:
ethtool_op_set_tx_csum	kcompat_ethtool.c	137;"	d	file:
ethtool_ops	kcompat_ethtool.c	/^} *ethtool_ops = NULL;$/;"	v	typeref:struct:_kc_ethtool_ops
ethtool_ops	kcompat_ethtool.c	66;"	d	file:
ethtool_ops	kcompat_ethtool.c	67;"	d	file:
ethtool_pauseparam	kcompat.h	603;"	d
ethtool_phys_id	kcompat_ethtool.c	/^static int ethtool_phys_id(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_regs	kcompat.h	440;"	d
ethtool_ringparam	kcompat.h	574;"	d
ethtool_rx_flow_spec	kcompat.h	3323;"	d
ethtool_self_test	kcompat_ethtool.c	/^static int ethtool_self_test(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_coalesce	kcompat_ethtool.c	/^static int ethtool_set_coalesce(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_eeprom	kcompat_ethtool.c	/^static int ethtool_set_eeprom(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_msglevel	kcompat_ethtool.c	/^static int ethtool_set_msglevel(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_pauseparam	kcompat_ethtool.c	/^static int ethtool_set_pauseparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_ringparam	kcompat_ethtool.c	/^static int ethtool_set_ringparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_rx_csum	kcompat_ethtool.c	/^static int ethtool_set_rx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_settings	kcompat_ethtool.c	/^static int ethtool_set_settings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_sg	kcompat_ethtool.c	/^static int ethtool_set_sg(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_tso	kcompat_ethtool.c	/^static int ethtool_set_tso(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_tx_csum	kcompat_ethtool.c	/^static int ethtool_set_tx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_wol	kcompat_ethtool.c	/^static int ethtool_set_wol(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_stats	kcompat.h	/^struct ethtool_stats {$/;"	s
ethtool_stringset	kcompat.h	/^enum ethtool_stringset {$/;"	g
ethtool_test	kcompat.h	/^struct ethtool_test {$/;"	s
ethtool_test_flags	kcompat.h	/^enum ethtool_test_flags {$/;"	g
ethtool_value	kcompat.h	/^struct ethtool_value {$/;"	s
ethtool_wolinfo	kcompat.h	/^struct ethtool_wolinfo {$/;"	s
etrack_id	e1000_nvm.h	/^	u32 etrack_id;$/;"	m	struct:e1000_fw_version
etrack_id	igb.h	/^	u32 etrack_id;$/;"	m	struct:igb_adapter
ets	igb.h	/^	bool ets;$/;"	m	struct:igb_adapter
false	kcompat.h	1994;"	d
fc	e1000_hw.h	/^	struct e1000_fc_info   fc;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_fc_info
fc_autoneg	igb.h	/^	bool fc_autoneg;$/;"	m	struct:igb_adapter
fcruc	e1000_hw.h	/^	u64 fcruc;$/;"	m	struct:e1000_hw_stats
fields	e1000_82575.h	/^		} fields;$/;"	m	union:e1000_adv_context_desc::__anon17	typeref:struct:e1000_adv_context_desc::__anon17::__anon18
fields	e1000_82575.h	/^		} fields;$/;"	m	union:e1000_adv_context_desc::__anon19	typeref:struct:e1000_adv_context_desc::__anon19::__anon20
fields	e1000_hw.h	/^		} fields;$/;"	m	union:e1000_context_desc::__anon52	typeref:struct:e1000_context_desc::__anon52::__anon53
fields	e1000_hw.h	/^		} fields;$/;"	m	union:e1000_data_desc::__anon56	typeref:struct:e1000_data_desc::__anon56::__anon57
fields	e1000_hw.h	/^		} fields;$/;"	m	union:e1000_tx_desc::__anon46	typeref:struct:e1000_tx_desc::__anon46::__anon47
find_first_bit	kcompat.h	1329;"	d
find_next_bit	kcompat.c	/^unsigned long find_next_bit(const unsigned long *addr, unsigned long size,$/;"	f
find_next_bit	kcompat.h	1324;"	d
find_next_bit	kcompat.h	1325;"	d
first	kcompat.h	/^	struct hlist_node *first;$/;"	m	struct:hlist_head	typeref:struct:hlist_head::hlist_node
first_online_node	kcompat.h	1834;"	d
flags	e1000_hw.h	/^		} flags;$/;"	m	union:e1000_data_desc::__anon54	typeref:struct:e1000_data_desc::__anon54::__anon55
flags	e1000_hw.h	/^		} flags;$/;"	m	union:e1000_tx_desc::__anon44	typeref:struct:e1000_tx_desc::__anon44::__anon45
flags	igb.h	/^	u32 flags;$/;"	m	struct:vf_data_storage
flags	igb.h	/^	unsigned int flags;$/;"	m	struct:igb_adapter
flags	igb.h	/^	unsigned long flags;            \/* ring specific flags *\/$/;"	m	struct:igb_ring
flags	kcompat.h	/^	u32 flags;$/;"	m	struct:ethtool_test
flags	kcompat.h	/^	unsigned short	flags;$/;"	m	struct:i2c_board_info
flash_address	e1000_hw.h	/^	u8 __iomem *flash_address;$/;"	m	struct:e1000_hw
flash_bank_size	e1000_hw.h	/^	u32 flash_bank_size;$/;"	m	struct:e1000_nvm_info
flash_base_addr	e1000_hw.h	/^	u32 flash_base_addr;$/;"	m	struct:e1000_nvm_info
flow_type	kcompat.h	/^	__u32		flow_type;$/;"	m	struct:_kc_ethtool_rx_flow_spec
flush_scheduled_work	kcompat.h	1273;"	d
flushed	igb.h	/^	u32 flushed;$/;"	m	struct:igb_lro_stats
for_each_set_bit	kcompat.h	2985;"	d
force_media	kcompat_ethtool.c	/^	unsigned int force_media : 1;	\/* is autoneg. disabled? *\/$/;"	m	struct:_kc_mii_if_info	file:
force_speed_duplex	e1000_hw.h	/^	s32  (*force_speed_duplex)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
forced_speed_duplex	e1000_hw.h	/^	u8  forced_speed_duplex;$/;"	m	struct:e1000_mac_info
free	igb.h	/^	u16	free;			\/* 65521 minus total size *\/$/;"	m	struct:igb_cb
free_netdev	kcompat.h	164;"	d
free_netdev	kcompat.h	1978;"	d
free_netdev	kcompat.h	1980;"	d
full_duplex	kcompat_ethtool.c	/^	unsigned int full_duplex : 1;	\/* is full duplex? *\/$/;"	m	struct:_kc_mii_if_info	file:
func	e1000_hw.h	/^	u16 func;$/;"	m	struct:e1000_bus_info
fw_version	igb.h	/^	char fw_version[32];$/;"	m	struct:igb_adapter
fw_version	kcompat.h	/^	char fw_version[32];$/;"	m	struct:k_ethtool_drvinfo
generic_mii_ioctl	kcompat_ethtool.c	905;"	d	file:
generic_mii_ioctl	kcompat_ethtool.c	906;"	d	file:
get_bus_info	e1000_hw.h	/^	s32  (*get_bus_info)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
get_cable_length	e1000_hw.h	/^	s32  (*get_cable_length)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
get_cfg_done	e1000_hw.h	/^	s32  (*get_cfg_done)(struct e1000_hw *hw);$/;"	m	struct:e1000_phy_operations
get_coalesce	kcompat_ethtool.c	/^	int  (*get_coalesce)(struct net_device *, struct ethtool_coalesce *);$/;"	m	struct:_kc_ethtool_ops	file:
get_cpu	kcompat.h	1285;"	d
get_cpu	kcompat.h	1286;"	d
get_drvinfo	kcompat_ethtool.c	/^	void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
get_eeprom	kcompat_ethtool.c	/^	int  (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_eeprom_len	kcompat_ethtool.c	/^	int  (*get_eeprom_len)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_ethtool_stats	kcompat_ethtool.c	/^	void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *,$/;"	m	struct:_kc_ethtool_ops	file:
get_info	e1000_hw.h	/^	s32  (*get_info)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
get_link	kcompat_ethtool.c	/^	u32  (*get_link)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_link_status	e1000_hw.h	/^	bool get_link_status;$/;"	m	struct:e1000_mac_info
get_link_up_info	e1000_hw.h	/^	s32  (*get_link_up_info)(struct e1000_hw *, u16 *, u16 *);$/;"	m	struct:e1000_mac_operations
get_msglevel	kcompat_ethtool.c	/^	u32  (*get_msglevel)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_pauseparam	kcompat_ethtool.c	/^	void (*get_pauseparam)(struct net_device *,$/;"	m	struct:_kc_ethtool_ops	file:
get_regs	kcompat_ethtool.c	/^	void (*get_regs)(struct net_device *, struct ethtool_regs *, void *);$/;"	m	struct:_kc_ethtool_ops	file:
get_regs_len	kcompat_ethtool.c	/^	int  (*get_regs_len)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_ringparam	kcompat_ethtool.c	/^	void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *);$/;"	m	struct:_kc_ethtool_ops	file:
get_rx_csum	kcompat_ethtool.c	/^	u32  (*get_rx_csum)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_settings	kcompat_ethtool.c	/^	int  (*get_settings)(struct net_device *, struct ethtool_cmd *);$/;"	m	struct:_kc_ethtool_ops	file:
get_sg	kcompat_ethtool.c	/^	u32  (*get_sg)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_stats_count	kcompat_ethtool.c	/^	int  (*get_stats_count)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_strings	kcompat_ethtool.c	/^	void (*get_strings)(struct net_device *, u32 stringset, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_thermal_sensor_data	e1000_hw.h	/^	s32 (*get_thermal_sensor_data)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
get_tso	kcompat_ethtool.c	/^	u32  (*get_tso)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_tx_csum	kcompat_ethtool.c	/^	u32  (*get_tx_csum)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_wol	kcompat_ethtool.c	/^	void (*get_wol)(struct net_device *, struct ethtool_wolinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
gfp_t	kcompat.h	/^typedef unsigned gfp_t;$/;"	t
gfp_t	kcompat.h	1752;"	d
global_device_reset	e1000_hw.h	/^	bool global_device_reset;$/;"	m	struct:e1000_dev_spec_82575
gorc	e1000_hw.h	/^	u64 gorc;$/;"	m	struct:e1000_hw_stats
gotc	e1000_hw.h	/^	u64 gotc;$/;"	m	struct:e1000_hw_stats
gprc	e1000_hw.h	/^	u64 gprc;$/;"	m	struct:e1000_hw_stats
gptc	e1000_hw.h	/^	u64 gptc;$/;"	m	struct:e1000_hw_stats
gso_segs	igb.h	/^	u16 gso_segs;$/;"	m	struct:igb_tx_buffer
gso_segs	kcompat.h	179;"	d
gso_size	kcompat.h	178;"	d
h_dest	kcompat.h	/^	unsigned char	h_dest[ETH_ALEN];$/;"	m	struct:_kc_vlan_ethhdr
h_dest	kcompat.h	/^	unsigned char h_dest[ETH_ALEN];$/;"	m	struct:vlan_ethhdr
h_ext	kcompat.h	/^	struct _kc_ethtool_flow_ext h_ext;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:struct:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_ext
h_source	kcompat.h	/^	unsigned char	h_source[ETH_ALEN];$/;"	m	struct:_kc_vlan_ethhdr
h_source	kcompat.h	/^	unsigned char h_source[ETH_ALEN];$/;"	m	struct:vlan_ethhdr
h_u	kcompat.h	/^	union _kc_ethtool_flow_union h_u;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:union:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_union
h_vlan_TCI	kcompat.h	/^	__be16		h_vlan_TCI;$/;"	m	struct:_kc_vlan_ethhdr
h_vlan_TCI	kcompat.h	/^	__be16		h_vlan_TCI;$/;"	m	struct:_kc_vlan_hdr
h_vlan_TCI	kcompat.h	/^	unsigned short h_vlan_TCI;$/;"	m	struct:vlan_ethhdr
h_vlan_encapsulated_proto	kcompat.h	/^	__be16		h_vlan_encapsulated_proto;$/;"	m	struct:_kc_vlan_ethhdr
h_vlan_encapsulated_proto	kcompat.h	/^	__be16		h_vlan_encapsulated_proto;$/;"	m	struct:_kc_vlan_hdr
h_vlan_encapsulated_proto	kcompat.h	/^	unsigned short h_vlan_encapsulated_proto;$/;"	m	struct:vlan_ethhdr
h_vlan_proto	kcompat.h	/^	__be16		h_vlan_proto;$/;"	m	struct:_kc_vlan_ethhdr
h_vlan_proto	kcompat.h	/^	unsigned short h_vlan_proto;$/;"	m	struct:vlan_ethhdr
has_fwsm	e1000_hw.h	/^	bool has_fwsm;$/;"	m	struct:e1000_mac_info
hdata	kcompat.h	/^	__u8					hdata[60];$/;"	m	union:_kc_ethtool_flow_union
hdr	igb.h	/^	struct e1000_fw_hdr hdr;$/;"	m	struct:e1000_fw_drv_info	typeref:struct:e1000_fw_drv_info::e1000_fw_hdr
hdr_addr	e1000_82575.h	/^		__le64 hdr_addr; \/* Header buffer address *\/$/;"	m	struct:e1000_adv_rx_desc::__anon21
hdr_info	e1000_82575.h	/^					__le16 hdr_info;$/;"	m	struct:e1000_adv_rx_desc::__anon22::__anon23::__anon24::__anon25
hdr_len	e1000_hw.h	/^			u8 hdr_len;  \/* Header length *\/$/;"	m	struct:e1000_context_desc::__anon52::__anon53
head	igb.h	/^		struct sk_buff *head;$/;"	m	union:igb_cb::__anon1	typeref:struct:igb_cb::__anon1::sk_buff
header_status	e1000_hw.h	/^			__le16 header_status;$/;"	m	struct:e1000_rx_desc_packet_split::__anon38::__anon43
hex_asc	kcompat.h	2151;"	d
hgorc	e1000_hw.h	/^	u64 hgorc;$/;"	m	struct:e1000_hw_stats
hgotc	e1000_hw.h	/^	u64 hgotc;$/;"	m	struct:e1000_hw_stats
hgptc	e1000_hw.h	/^	u64 hgptc;$/;"	m	struct:e1000_hw_stats
hi_dword	e1000_82575.h	/^			} hi_dword;$/;"	m	struct:e1000_adv_rx_desc::__anon22::__anon23	typeref:union:e1000_adv_rx_desc::__anon22::__anon23::__anon26
hi_dword	e1000_hw.h	/^			} hi_dword;$/;"	m	struct:e1000_rx_desc_extended::__anon32::__anon33	typeref:union:e1000_rx_desc_extended::__anon32::__anon33::__anon34
hi_dword	e1000_hw.h	/^			} hi_dword;$/;"	m	struct:e1000_rx_desc_packet_split::__anon38::__anon39	typeref:union:e1000_rx_desc_packet_split::__anon38::__anon39::__anon40
high_water	e1000_hw.h	/^	u32 high_water;  \/* Flow control high-water mark *\/$/;"	m	struct:e1000_fc_info
hlist_add_head	kcompat.h	/^static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h)$/;"	f
hlist_del	kcompat.h	/^static inline void hlist_del(struct hlist_node *n)$/;"	f
hlist_empty	kcompat.h	/^static inline int hlist_empty(const struct hlist_head *h)$/;"	f
hlist_entry	kcompat.h	3750;"	d
hlist_entry	kcompat.h	3751;"	d
hlist_entry_safe	kcompat.h	3753;"	d
hlist_entry_safe	kcompat.h	3754;"	d
hlist_for_each_entry	kcompat.h	3757;"	d
hlist_for_each_entry	kcompat.h	3758;"	d
hlist_for_each_entry_safe	kcompat.h	3763;"	d
hlist_for_each_entry_safe	kcompat.h	3764;"	d
hlist_head	kcompat.h	/^struct hlist_head {$/;"	s
hlist_node	kcompat.h	/^struct hlist_node {$/;"	s
hrmpc	e1000_hw.h	/^	u64 hrmpc;$/;"	m	struct:e1000_hw_stats
hs_rss	e1000_82575.h	/^				} hs_rss;$/;"	m	union:e1000_adv_rx_desc::__anon22::__anon23::__anon24	typeref:struct:e1000_adv_rx_desc::__anon22::__anon23::__anon24::__anon25
htcbdpc	e1000_hw.h	/^	u64 htcbdpc;$/;"	m	struct:e1000_hw_stats
htdpmc	e1000_hw.h	/^	u64 htdpmc;$/;"	m	struct:e1000_hw_stats
hw	igb.h	/^	struct e1000_hw *hw;$/;"	m	struct:hwmon_attr	typeref:struct:hwmon_attr::e1000_hw
hw	igb.h	/^	struct e1000_hw *hw;$/;"	m	struct:igb_therm_proc_data	typeref:struct:igb_therm_proc_data::e1000_hw
hw	igb.h	/^	struct e1000_hw hw;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::e1000_hw
hw_addr	e1000_hw.h	/^	u8 __iomem *hw_addr;$/;"	m	struct:e1000_hw
hwmon_attr	igb.h	/^struct hwmon_attr {$/;"	s
hwmon_buff	igb.h	/^struct hwmon_buff {$/;"	s
hwmon_list	igb.h	/^	struct hwmon_attr *hwmon_list;$/;"	m	struct:hwmon_buff	typeref:struct:hwmon_buff::hwmon_attr
i	igb_param.c	/^	int i;$/;"	m	struct:igb_opt_list	file:
i2c_adap	igb.h	/^	struct i2c_adapter i2c_adap;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::i2c_adapter
i2c_algo	igb.h	/^	struct i2c_algo_bit_data i2c_algo;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::i2c_algo_bit_data
i2c_board_info	kcompat.h	/^struct i2c_board_info {$/;"	s
i2c_client	igb.h	/^	struct i2c_client *i2c_client;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::i2c_client
i2c_new_device	kcompat.h	2179;"	d
i350_sensor_info	igb_hwmon.c	/^static struct i2c_board_info i350_sensor_info = {$/;"	v	typeref:struct:i2c_board_info	file:
i_private	kcompat.h	1923;"	d
iac	e1000_hw.h	/^	u64 iac;$/;"	m	struct:e1000_hw_stats
icrxatc	e1000_hw.h	/^	u64 icrxatc;$/;"	m	struct:e1000_hw_stats
icrxdmtc	e1000_hw.h	/^	u64 icrxdmtc;$/;"	m	struct:e1000_hw_stats
icrxoc	e1000_hw.h	/^	u64 icrxoc;$/;"	m	struct:e1000_hw_stats
icrxptc	e1000_hw.h	/^	u64 icrxptc;$/;"	m	struct:e1000_hw_stats
ictxatc	e1000_hw.h	/^	u64 ictxatc;$/;"	m	struct:e1000_hw_stats
ictxptc	e1000_hw.h	/^	u64 ictxptc;$/;"	m	struct:e1000_hw_stats
ictxqec	e1000_hw.h	/^	u64 ictxqec;$/;"	m	struct:e1000_hw_stats
ictxqmtc	e1000_hw.h	/^	u64 ictxqmtc;$/;"	m	struct:e1000_hw_stats
id	e1000_hw.h	/^	u32 id;$/;"	m	struct:e1000_phy_info
id_led_init	e1000_hw.h	/^	s32  (*id_led_init)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
idle_errors	e1000_hw.h	/^	u32 idle_errors;$/;"	m	struct:e1000_phy_stats
idx	e1000_82575.h	/^			u32 idx:4;$/;"	m	struct:e1000_adv_context_desc::__anon19::__anon20
idx	e1000_82575.h	/^			u32 idx:4;$/;"	m	struct:e1000_adv_data_desc::__anon15::__anon16
if_mii	kcompat.h	1451;"	d
if_mii	kcompat.h	1452;"	d
ifs_max_val	e1000_hw.h	/^	u16 ifs_max_val;$/;"	m	struct:e1000_mac_info
ifs_min_val	e1000_hw.h	/^	u16 ifs_min_val;$/;"	m	struct:e1000_mac_info
ifs_ratio	e1000_hw.h	/^	u16 ifs_ratio;$/;"	m	struct:e1000_mac_info
ifs_step_size	e1000_hw.h	/^	u16 ifs_step_size;$/;"	m	struct:e1000_mac_info
igb_adapter	igb.h	/^struct igb_adapter {$/;"	s
igb_add_active_tail	igb_main.c	/^static inline void igb_add_active_tail(struct sk_buff *head, struct sk_buff *tail)$/;"	f	file:
igb_add_hwmon_attr	igb_hwmon.c	/^static int igb_add_hwmon_attr(struct igb_adapter *adapter,$/;"	f	file:
igb_add_mac_filter	igb_main.c	/^int igb_add_mac_filter(struct igb_adapter *adapter, u8 *addr, u16 queue)$/;"	f
igb_add_ring	igb_main.c	/^static void igb_add_ring(struct igb_ring *ring,$/;"	f	file:
igb_add_rx_frag	igb_main.c	/^static bool igb_add_rx_frag(struct igb_ring *rx_ring,$/;"	f	file:
igb_alloc_mapped_page	igb_main.c	/^static bool igb_alloc_mapped_page(struct igb_ring *rx_ring,$/;"	f	file:
igb_alloc_mapped_skb	igb_main.c	/^static bool igb_alloc_mapped_skb(struct igb_ring *rx_ring,$/;"	f	file:
igb_alloc_q_vector	igb_main.c	/^static int igb_alloc_q_vector(struct igb_adapter *adapter,$/;"	f	file:
igb_alloc_q_vectors	igb_main.c	/^static int igb_alloc_q_vectors(struct igb_adapter *adapter)$/;"	f	file:
igb_alloc_rx_buffers	igb_main.c	/^void igb_alloc_rx_buffers(struct igb_ring *rx_ring, u16 cleaned_count)$/;"	f
igb_assign_vector	igb_main.c	/^static void igb_assign_vector(struct igb_q_vector *q_vector, int msix_vector)$/;"	f	file:
igb_assign_vmdq_netdev_ops	igb_main.c	/^void igb_assign_vmdq_netdev_ops(struct net_device *vnetdev)$/;"	f
igb_available_rars	igb_main.c	/^int igb_available_rars(struct igb_adapter *adapter)$/;"	f
igb_cache_ring_register	igb_main.c	/^static void igb_cache_ring_register(struct igb_adapter *adapter)$/;"	f	file:
igb_can_lro	igb_main.c	/^static inline bool igb_can_lro(struct igb_ring *rx_ring,$/;"	f	file:
igb_can_reuse_rx_page	igb_main.c	/^static bool igb_can_reuse_rx_page(struct igb_rx_buffer *rx_buffer,$/;"	f	file:
igb_cb	igb.h	/^struct igb_cb {$/;"	s
igb_change_mtu	igb_main.c	/^static int igb_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	file:
igb_check_lbtest_frame	igb_ethtool.c	/^static int igb_check_lbtest_frame(struct igb_rx_buffer *rx_buffer,$/;"	f	file:
igb_check_options	igb_param.c	/^void igb_check_options(struct igb_adapter *adapter)$/;"	f
igb_check_swap_media	igb_main.c	/^static void igb_check_swap_media(struct igb_adapter *adapter)$/;"	f	file:
igb_check_vf_rate_limit	igb_main.c	/^static void igb_check_vf_rate_limit(struct igb_adapter *adapter)$/;"	f	file:
igb_check_wvbr	igb_main.c	/^static void igb_check_wvbr(struct igb_adapter *adapter)$/;"	f	file:
igb_clean_all_rx_rings	igb_main.c	/^static void igb_clean_all_rx_rings(struct igb_adapter *adapter)$/;"	f	file:
igb_clean_all_tx_rings	igb_main.c	/^static void igb_clean_all_tx_rings(struct igb_adapter *adapter)$/;"	f	file:
igb_clean_rx_irq	igb_main.c	/^static bool igb_clean_rx_irq(struct igb_q_vector *q_vector, int budget)$/;"	f	file:
igb_clean_rx_ring	igb_main.c	/^void igb_clean_rx_ring(struct igb_ring *rx_ring)$/;"	f
igb_clean_test_rings	igb_ethtool.c	/^static u16 igb_clean_test_rings(struct igb_ring *rx_ring,$/;"	f	file:
igb_clean_tx_irq	igb_main.c	/^static bool igb_clean_tx_irq(struct igb_q_vector *q_vector)$/;"	f	file:
igb_clean_tx_ring	igb_main.c	/^static void igb_clean_tx_ring(struct igb_ring *tx_ring)$/;"	f	file:
igb_cleanup_headers	igb_main.c	/^static bool igb_cleanup_headers(struct igb_ring *rx_ring,$/;"	f	file:
igb_clear_interrupt_scheme	igb_main.c	/^static void igb_clear_interrupt_scheme(struct igb_adapter *adapter)$/;"	f	file:
igb_clear_vf_vfta	igb_main.c	/^static void igb_clear_vf_vfta(struct igb_adapter *adapter, u32 vf)$/;"	f	file:
igb_close	igb_main.c	/^static int igb_close(struct net_device *netdev)$/;"	f	file:
igb_close_active_frag_list	igb_main.c	/^static inline bool igb_close_active_frag_list(struct sk_buff *head)$/;"	f	file:
igb_configure	igb_main.c	/^static void igb_configure(struct igb_adapter *adapter)$/;"	f	file:
igb_configure_lli	igb_main.c	/^static void igb_configure_lli(struct igb_adapter *adapter)$/;"	f	file:
igb_configure_msix	igb_main.c	/^static void igb_configure_msix(struct igb_adapter *adapter)$/;"	f	file:
igb_configure_rx	igb_main.c	/^static void igb_configure_rx(struct igb_adapter *adapter)$/;"	f	file:
igb_configure_rx_ring	igb_main.c	/^void igb_configure_rx_ring(struct igb_adapter *adapter,$/;"	f
igb_configure_tx	igb_main.c	/^static void igb_configure_tx(struct igb_adapter *adapter)$/;"	f	file:
igb_configure_tx_ring	igb_main.c	/^void igb_configure_tx_ring(struct igb_adapter *adapter,$/;"	f
igb_copyright	igb_main.c	/^static const char igb_copyright[] =$/;"	v	file:
igb_create_lbtest_frame	igb_ethtool.c	/^static void igb_create_lbtest_frame(struct sk_buff *skb,$/;"	f	file:
igb_del_mac_filter	igb_main.c	/^int igb_del_mac_filter(struct igb_adapter *adapter, u8* addr, u16 queue)$/;"	f
igb_del_proc_entries	igb_procfs.c	/^void igb_del_proc_entries(struct igb_adapter *adapter)$/;"	f
igb_desc_unused	igb.h	/^static inline u16 igb_desc_unused(const struct igb_ring *ring)$/;"	f
igb_diag_test	igb_ethtool.c	/^static void igb_diag_test(struct net_device *netdev,$/;"	f	file:
igb_diag_test_count	igb_ethtool.c	/^static int igb_diag_test_count(struct net_device *netdev)$/;"	f	file:
igb_disable_mdd	igb_main.c	/^static void igb_disable_mdd(struct igb_adapter *adapter)$/;"	f	file:
igb_dma_err_task	igb_main.c	/^static void igb_dma_err_task(struct work_struct *work)$/;"	f	file:
igb_dma_err_timer	igb_main.c	/^static void igb_dma_err_timer(unsigned long data)$/;"	f	file:
igb_down	igb_main.c	/^void igb_down(struct igb_adapter *adapter)$/;"	f
igb_driver	igb_main.c	/^static struct pci_driver igb_driver = {$/;"	v	typeref:struct:pci_driver	file:
igb_driver_name	igb_main.c	/^char igb_driver_name[] = "igb";$/;"	v
igb_driver_string	igb_main.c	/^static const char igb_driver_string[] =$/;"	v	file:
igb_driver_version	igb_main.c	/^char igb_driver_version[] = DRV_VERSION;$/;"	v
igb_eeprom_test	igb_ethtool.c	/^static int igb_eeprom_test(struct igb_adapter *adapter, u64 *data)$/;"	f	file:
igb_enable_mas	igb_main.c	/^static s32  igb_enable_mas(struct igb_adapter *adapter)$/;"	f	file:
igb_enable_mdd	igb_main.c	/^static void igb_enable_mdd(struct igb_adapter *adapter)$/;"	f	file:
igb_err_handler	igb_main.c	/^static struct pci_error_handlers igb_err_handler = {$/;"	v	typeref:struct:pci_error_handlers	file:
igb_ethtool_begin	igb_ethtool.c	/^static int igb_ethtool_begin(struct net_device *netdev)$/;"	f	file:
igb_ethtool_complete	igb_ethtool.c	/^static void igb_ethtool_complete(struct net_device *netdev)$/;"	f	file:
igb_ethtool_ops	igb_ethtool.c	/^static const struct ethtool_ops igb_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
igb_ethtool_ops_ext	igb_ethtool.c	/^static const struct ethtool_ops_ext igb_ethtool_ops_ext = {$/;"	v	typeref:struct:ethtool_ops_ext	file:
igb_exit_module	igb_main.c	/^module_exit(igb_exit_module);$/;"	v
igb_exit_module	igb_main.c	/^static void __exit igb_exit_module(void)$/;"	f	file:
igb_fetch_rx_buffer	igb_main.c	/^static struct sk_buff *igb_fetch_rx_buffer(struct igb_ring *rx_ring,$/;"	f	file:
igb_find_vlvf_entry	igb_main.c	/^static int igb_find_vlvf_entry(struct igb_adapter *adapter, int vid)$/;"	f	file:
igb_fix_features	igb_main.c	/^static netdev_features_t igb_fix_features(struct net_device *netdev,$/;"	f	file:
igb_free_all_rx_resources	igb_main.c	/^static void igb_free_all_rx_resources(struct igb_adapter *adapter)$/;"	f	file:
igb_free_all_tx_resources	igb_main.c	/^static void igb_free_all_tx_resources(struct igb_adapter *adapter)$/;"	f	file:
igb_free_desc_rings	igb_ethtool.c	/^static void igb_free_desc_rings(struct igb_adapter *adapter)$/;"	f	file:
igb_free_irq	igb_main.c	/^static void igb_free_irq(struct igb_adapter *adapter)$/;"	f	file:
igb_free_q_vector	igb_main.c	/^static void igb_free_q_vector(struct igb_adapter *adapter, int v_idx)$/;"	f	file:
igb_free_q_vectors	igb_main.c	/^static void igb_free_q_vectors(struct igb_adapter *adapter)$/;"	f	file:
igb_free_rx_resources	igb_main.c	/^void igb_free_rx_resources(struct igb_ring *rx_ring)$/;"	f
igb_free_tx_resources	igb_main.c	/^void igb_free_tx_resources(struct igb_ring *tx_ring)$/;"	f
igb_full_sync_mac_table	igb_main.c	/^void igb_full_sync_mac_table(struct igb_adapter *adapter)$/;"	f
igb_get_coalesce	igb_ethtool.c	/^static int igb_get_coalesce(struct net_device *netdev,$/;"	f	file:
igb_get_dmac	igb_ethtool.c	/^static void igb_get_dmac(struct net_device *netdev,$/;"	f	file:
igb_get_drvinfo	igb_ethtool.c	/^static void igb_get_drvinfo(struct net_device *netdev,$/;"	f	file:
igb_get_eee	igb_ethtool.c	/^static int igb_get_eee(struct net_device *netdev, struct ethtool_eee *edata)$/;"	f	file:
igb_get_eeprom	igb_ethtool.c	/^static int igb_get_eeprom(struct net_device *netdev,$/;"	f	file:
igb_get_eeprom_len	igb_ethtool.c	/^static int igb_get_eeprom_len(struct net_device *netdev)$/;"	f	file:
igb_get_ethtool_stats	igb_ethtool.c	/^static void igb_get_ethtool_stats(struct net_device *netdev,$/;"	f	file:
igb_get_headlen	igb_main.c	/^static unsigned int igb_get_headlen(unsigned char *data,$/;"	f	file:
igb_get_hw_control	igb_main.c	/^static void igb_get_hw_control(struct igb_adapter *adapter)$/;"	f	file:
igb_get_i2c_clk	igb_main.c	/^static int igb_get_i2c_clk(void *data)$/;"	f	file:
igb_get_i2c_data	igb_main.c	/^static int igb_get_i2c_data(void *data)$/;"	f	file:
igb_get_link	igb_ethtool.c	/^static u32 igb_get_link(struct net_device *netdev)$/;"	f	file:
igb_get_msglevel	igb_ethtool.c	/^static u32 igb_get_msglevel(struct net_device *netdev)$/;"	f	file:
igb_get_pauseparam	igb_ethtool.c	/^static void igb_get_pauseparam(struct net_device *netdev,$/;"	f	file:
igb_get_regs	igb_ethtool.c	/^static void igb_get_regs(struct net_device *netdev,$/;"	f	file:
igb_get_regs_len	igb_ethtool.c	/^static int igb_get_regs_len(struct net_device *netdev)$/;"	f	file:
igb_get_ringparam	igb_ethtool.c	/^static void igb_get_ringparam(struct net_device *netdev,$/;"	f	file:
igb_get_rss_hash_opts	igb_ethtool.c	/^static int igb_get_rss_hash_opts(struct igb_adapter *adapter,$/;"	f	file:
igb_get_rx_csum	igb_ethtool.c	/^static u32 igb_get_rx_csum(struct net_device *netdev)$/;"	f	file:
igb_get_rxnfc	igb_ethtool.c	/^static int igb_get_rxnfc(struct net_device *dev, struct ethtool_rxnfc *cmd,$/;"	f	file:
igb_get_settings	igb_ethtool.c	/^static int igb_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)$/;"	f	file:
igb_get_sset_count	igb_ethtool.c	/^static int igb_get_sset_count(struct net_device *netdev, int sset)$/;"	f	file:
igb_get_stats	igb_main.c	/^static struct net_device_stats *igb_get_stats(struct net_device *netdev)$/;"	f	file:
igb_get_stats_count	igb_ethtool.c	/^static int igb_get_stats_count(struct net_device *netdev)$/;"	f	file:
igb_get_strings	igb_ethtool.c	/^static void igb_get_strings(struct net_device *netdev, u32 stringset, u8 *data)$/;"	f	file:
igb_get_ts_info	igb_ethtool.c	/^static int igb_get_ts_info(struct net_device *dev,$/;"	f	file:
igb_get_wol	igb_ethtool.c	/^static void igb_get_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	file:
igb_gstrings_net_stats	igb_ethtool.c	/^static const struct igb_stats igb_gstrings_net_stats[] = {$/;"	v	typeref:struct:igb_stats	file:
igb_gstrings_stats	igb_ethtool.c	/^static const struct igb_stats igb_gstrings_stats[] = {$/;"	v	typeref:struct:igb_stats	file:
igb_gstrings_test	igb_ethtool.c	/^static const char igb_gstrings_test[][ETH_GSTRING_LEN] = {$/;"	v	file:
igb_has_link	igb_main.c	/^bool igb_has_link(struct igb_adapter *adapter)$/;"	f
igb_hwmon_buff	igb.h	/^	struct hwmon_buff igb_hwmon_buff;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::hwmon_buff
igb_hwmon_show_cautionthresh	igb_hwmon.c	/^static ssize_t igb_hwmon_show_cautionthresh(struct device *dev,$/;"	f	file:
igb_hwmon_show_location	igb_hwmon.c	/^static ssize_t igb_hwmon_show_location(struct device *dev,$/;"	f	file:
igb_hwmon_show_maxopthresh	igb_hwmon.c	/^static ssize_t igb_hwmon_show_maxopthresh(struct device *dev,$/;"	f	file:
igb_hwmon_show_temp	igb_hwmon.c	/^static ssize_t igb_hwmon_show_temp(struct device *dev,$/;"	f	file:
igb_i2c_algo	igb_main.c	/^static const struct i2c_algo_bit_data igb_i2c_algo = {$/;"	v	typeref:struct:i2c_algo_bit_data	file:
igb_init_dmac	igb_main.c	/^static void igb_init_dmac(struct igb_adapter *adapter, u32 pba)$/;"	f	file:
igb_init_fw	igb_main.c	/^static void igb_init_fw(struct igb_adapter *adapter)$/;"	f	file:
igb_init_i2c	igb_main.c	/^static s32 igb_init_i2c(struct igb_adapter *adapter)$/;"	f	file:
igb_init_interrupt_scheme	igb_main.c	/^static int igb_init_interrupt_scheme(struct igb_adapter *adapter, bool msix)$/;"	f	file:
igb_init_mas	igb_main.c	/^static void igb_init_mas(struct igb_adapter *adapter)$/;"	f	file:
igb_init_module	igb_main.c	/^module_init(igb_init_module);$/;"	v
igb_init_module	igb_main.c	/^static int __init igb_init_module(void)$/;"	f	file:
igb_init_vmdq_netdevs	igb_main.c	/^int igb_init_vmdq_netdevs(struct igb_adapter *adapter)$/;"	f
igb_integrated_phy_loopback	igb_ethtool.c	/^static int igb_integrated_phy_loopback(struct igb_adapter *adapter)$/;"	f	file:
igb_internal_entries	igb_procfs.c	/^struct igb_proc_type igb_internal_entries[] = {$/;"	v	typeref:struct:igb_proc_type
igb_intr	igb_main.c	/^static irqreturn_t igb_intr(int irq, void *data)$/;"	f	file:
igb_intr_msi	igb_main.c	/^static irqreturn_t igb_intr_msi(int irq, void *data)$/;"	f	file:
igb_intr_test	igb_ethtool.c	/^static int igb_intr_test(struct igb_adapter *adapter, u64 *data)$/;"	f	file:
igb_io_error_detected	igb_main.c	/^static pci_ers_result_t igb_io_error_detected(struct pci_dev *pdev,$/;"	f	file:
igb_io_resume	igb_main.c	/^static void igb_io_resume(struct pci_dev *pdev)$/;"	f	file:
igb_io_slot_reset	igb_main.c	/^static pci_ers_result_t igb_io_slot_reset(struct pci_dev *pdev)$/;"	f	file:
igb_ioctl	igb_main.c	/^static int igb_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	file:
igb_irq_disable	igb_main.c	/^static void igb_irq_disable(struct igb_adapter *adapter)$/;"	f	file:
igb_irq_enable	igb_main.c	/^static void igb_irq_enable(struct igb_adapter *adapter)$/;"	f	file:
igb_is_non_eop	igb_main.c	/^static bool igb_is_non_eop(struct igb_ring *rx_ring,$/;"	f	file:
igb_link_mbps	igb_main.c	/^static int igb_link_mbps(int internal_link_speed)$/;"	f	file:
igb_link_test	igb_ethtool.c	/^static int igb_link_test(struct igb_adapter *adapter, u64 *data)$/;"	f	file:
igb_loopback_cleanup	igb_ethtool.c	/^static void igb_loopback_cleanup(struct igb_adapter *adapter)$/;"	f	file:
igb_loopback_test	igb_ethtool.c	/^static int igb_loopback_test(struct igb_adapter *adapter, u64 *data)$/;"	f	file:
igb_lro_flush	igb_main.c	/^static void igb_lro_flush(struct igb_q_vector *q_vector,$/;"	f	file:
igb_lro_flush_all	igb_main.c	/^static void igb_lro_flush_all(struct igb_q_vector *q_vector)$/;"	f	file:
igb_lro_hdr	igb_main.c	/^static inline struct igb_lrohdr *igb_lro_hdr(struct sk_buff *skb)$/;"	f	file:
igb_lro_header_ok	igb_main.c	/^static void igb_lro_header_ok(struct sk_buff *skb)$/;"	f	file:
igb_lro_list	igb.h	/^struct igb_lro_list {$/;"	s
igb_lro_receive	igb_main.c	/^static void igb_lro_receive(struct igb_q_vector *q_vector,$/;"	f	file:
igb_lro_stats	igb.h	/^struct igb_lro_stats {$/;"	s
igb_lrohdr	igb.h	/^struct igb_lrohdr {$/;"	s
igb_mac_addr	igb.h	/^struct igb_mac_addr {$/;"	s
igb_macadmn	igb_procfs.c	/^static int igb_macadmn(char *page, char **start, off_t off, $/;"	f	file:
igb_macburn	igb_procfs.c	/^static int igb_macburn(char *page, char **start, off_t off, int count, $/;"	f	file:
igb_maybe_stop_tx	igb_main.c	/^static inline int igb_maybe_stop_tx(struct igb_ring *tx_ring, const u16 size)$/;"	f	file:
igb_merge_active_tail	igb_main.c	/^static inline struct sk_buff *igb_merge_active_tail(struct sk_buff *tail)$/;"	f	file:
igb_merge_frags	igb_main.c	/^static void igb_merge_frags(struct sk_buff *lro_skb, struct sk_buff *new_skb)$/;"	f	file:
igb_mii_ioctl	igb_main.c	/^static int igb_mii_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	file:
igb_msg_task	igb_main.c	/^static void igb_msg_task(struct igb_adapter *adapter)$/;"	f	file:
igb_msix_other	igb_main.c	/^static irqreturn_t igb_msix_other(int irq, void *data)$/;"	f	file:
igb_msix_ring	igb_main.c	/^static irqreturn_t igb_msix_ring(int irq, void *data)$/;"	f	file:
igb_mta_set	igb_main.c	/^void igb_mta_set(struct igb_adapter *adapter, u32 hash_value)$/;"	f
igb_ndo_bridge_getlink	igb_main.c	/^static int igb_ndo_bridge_getlink(struct sk_buff *skb, u32 pid, u32 seq,$/;"	f	file:
igb_ndo_bridge_setlink	igb_main.c	/^static int igb_ndo_bridge_setlink(struct net_device *dev,$/;"	f	file:
igb_ndo_fdb_add	igb_main.c	/^static int igb_ndo_fdb_add(struct ndmsg *ndm, struct nlattr *tb[],$/;"	f	file:
igb_ndo_fdb_del	igb_main.c	/^static int igb_ndo_fdb_del(struct ndmsg *ndm,$/;"	f	file:
igb_ndo_fdb_dump	igb_main.c	/^static int igb_ndo_fdb_dump(struct sk_buff *skb,$/;"	f	file:
igb_ndo_get_vf_config	igb_main.c	/^static int igb_ndo_get_vf_config(struct net_device *netdev,$/;"	f	file:
igb_ndo_set_vf_bw	igb_main.c	/^static int igb_ndo_set_vf_bw(struct net_device *netdev, int vf, int tx_rate)$/;"	f	file:
igb_ndo_set_vf_mac	igb_main.c	/^static int igb_ndo_set_vf_mac(struct net_device *netdev, int vf, u8 *mac)$/;"	f	file:
igb_ndo_set_vf_spoofchk	igb_main.c	/^static int igb_ndo_set_vf_spoofchk(struct net_device *netdev, int vf,$/;"	f	file:
igb_ndo_set_vf_vlan	igb_main.c	/^static int igb_ndo_set_vf_vlan(struct net_device *netdev,$/;"	f	file:
igb_netdev_ops	igb_main.c	/^static const struct net_device_ops igb_netdev_ops = {$/;"	v	typeref:struct:net_device_ops	file:
igb_netpoll	igb_main.c	/^static void igb_netpoll(struct net_device *netdev)$/;"	f	file:
igb_notifier_reboot	igb_main.c	/^static struct notifier_block igb_notifier_reboot = {$/;"	v	typeref:struct:notifier_block	file:
igb_notify_dca	igb_main.c	/^static int igb_notify_dca(struct notifier_block *nb, unsigned long event,$/;"	f	file:
igb_notify_reboot	igb_main.c	/^static int igb_notify_reboot(struct notifier_block *nb, unsigned long event,$/;"	f	file:
igb_numeports	igb_procfs.c	/^static int igb_numeports(char *page, char **start, off_t off, int count,$/;"	f	file:
igb_nway_reset	igb_ethtool.c	/^static int igb_nway_reset(struct net_device *netdev)$/;"	f	file:
igb_open	igb_main.c	/^static int igb_open(struct net_device *netdev)$/;"	f	file:
igb_opt_list	igb_param.c	/^struct igb_opt_list {$/;"	s	file:
igb_option	igb_param.c	/^struct igb_option {$/;"	s	file:
igb_pci_tbl	igb_main.c	/^static DEFINE_PCI_DEVICE_TABLE(igb_pci_tbl) = {$/;"	v	file:
igb_phy_disable_receiver	igb_ethtool.c	/^static void igb_phy_disable_receiver(struct igb_adapter *adapter)$/;"	f	file:
igb_phys_id	igb_ethtool.c	/^static int igb_phys_id(struct net_device *netdev, u32 data)$/;"	f	file:
igb_ping_all_vfs	igb_main.c	/^static void igb_ping_all_vfs(struct igb_adapter *adapter)$/;"	f	file:
igb_pm_ops	igb_main.c	/^static const struct dev_pm_ops igb_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
igb_poll	igb_main.c	/^static int igb_poll(struct napi_struct *napi, int budget)$/;"	f	file:
igb_porttype	igb_procfs.c	/^static int igb_porttype(char *page, char **start, off_t off, int count,$/;"	f	file:
igb_power_down_link	igb_main.c	/^static void igb_power_down_link(struct igb_adapter *adapter)$/;"	f	file:
igb_power_up_link	igb_main.c	/^void igb_power_up_link(struct igb_adapter *adapter)$/;"	f
igb_probe	igb_main.c	/^static int __devinit igb_probe(struct pci_dev *pdev,$/;"	f	file:
igb_proc_entries	igb_procfs.c	/^struct igb_proc_type igb_proc_entries[] = {$/;"	v	typeref:struct:igb_proc_type
igb_proc_type	igb_procfs.c	/^struct igb_proc_type{$/;"	s	file:
igb_process_mdd_event	igb_main.c	/^static void igb_process_mdd_event(struct igb_adapter *adapter)$/;"	f	file:
igb_process_skb_fields	igb_main.c	/^static void igb_process_skb_fields(struct igb_ring *rx_ring,$/;"	f	file:
igb_procfs_exit	igb_procfs.c	/^void igb_procfs_exit(struct igb_adapter *adapter) $/;"	f
igb_procfs_init	igb_procfs.c	/^int igb_procfs_init(struct igb_adapter *adapter) $/;"	f
igb_procfs_topdir_exit	igb_procfs.c	/^void igb_procfs_topdir_exit(void) $/;"	f
igb_procfs_topdir_init	igb_procfs.c	/^int igb_procfs_topdir_init(void) $/;"	f
igb_ptp_adjfreq_82576	igb_ptp.c	/^static int igb_ptp_adjfreq_82576(struct ptp_clock_info *ptp, s32 ppb)$/;"	f	file:
igb_ptp_adjfreq_82580	igb_ptp.c	/^static int igb_ptp_adjfreq_82580(struct ptp_clock_info *ptp, s32 ppb)$/;"	f	file:
igb_ptp_adjtime_82576	igb_ptp.c	/^static int igb_ptp_adjtime_82576(struct ptp_clock_info *ptp, s64 delta)$/;"	f	file:
igb_ptp_adjtime_i210	igb_ptp.c	/^static int igb_ptp_adjtime_i210(struct ptp_clock_info *ptp, s64 delta)$/;"	f	file:
igb_ptp_enable	igb_ptp.c	/^static int igb_ptp_enable(struct ptp_clock_info *ptp,$/;"	f	file:
igb_ptp_gettime_82576	igb_ptp.c	/^static int igb_ptp_gettime_82576(struct ptp_clock_info *ptp,$/;"	f	file:
igb_ptp_gettime_i210	igb_ptp.c	/^static int igb_ptp_gettime_i210(struct ptp_clock_info *ptp,$/;"	f	file:
igb_ptp_hwtstamp_ioctl	igb_ptp.c	/^int igb_ptp_hwtstamp_ioctl(struct net_device *netdev,$/;"	f
igb_ptp_init	igb_ptp.c	/^void igb_ptp_init(struct igb_adapter *adapter)$/;"	f
igb_ptp_overflow_check	igb_ptp.c	/^static void igb_ptp_overflow_check(struct work_struct *work)$/;"	f	file:
igb_ptp_read_82576	igb_ptp.c	/^static cycle_t igb_ptp_read_82576(const struct cyclecounter *cc)$/;"	f	file:
igb_ptp_read_82580	igb_ptp.c	/^static cycle_t igb_ptp_read_82580(const struct cyclecounter *cc)$/;"	f	file:
igb_ptp_read_i210	igb_ptp.c	/^static void igb_ptp_read_i210(struct igb_adapter *adapter, struct timespec *ts)$/;"	f	file:
igb_ptp_reset	igb_ptp.c	/^void igb_ptp_reset(struct igb_adapter *adapter)$/;"	f
igb_ptp_rx_hang	igb_ptp.c	/^void igb_ptp_rx_hang(struct igb_adapter *adapter)$/;"	f
igb_ptp_rx_hwtstamp	igb.h	/^static inline void igb_ptp_rx_hwtstamp(struct igb_ring *rx_ring,$/;"	f
igb_ptp_rx_pktstamp	igb_ptp.c	/^void igb_ptp_rx_pktstamp(struct igb_q_vector *q_vector,$/;"	f
igb_ptp_rx_rgtstamp	igb_ptp.c	/^void igb_ptp_rx_rgtstamp(struct igb_q_vector *q_vector,$/;"	f
igb_ptp_settime_82576	igb_ptp.c	/^static int igb_ptp_settime_82576(struct ptp_clock_info *ptp,$/;"	f	file:
igb_ptp_settime_i210	igb_ptp.c	/^static int igb_ptp_settime_i210(struct ptp_clock_info *ptp,$/;"	f	file:
igb_ptp_stop	igb_ptp.c	/^void igb_ptp_stop(struct igb_adapter *adapter)$/;"	f
igb_ptp_systim_to_hwtstamp	igb_ptp.c	/^static void igb_ptp_systim_to_hwtstamp(struct igb_adapter *adapter,$/;"	f	file:
igb_ptp_tx_hwtstamp	igb_ptp.c	/^void igb_ptp_tx_hwtstamp(struct igb_adapter *adapter)$/;"	f
igb_ptp_tx_work	igb_ptp.c	/^void igb_ptp_tx_work(struct work_struct *work)$/;"	f
igb_ptp_write_i210	igb_ptp.c	/^static void igb_ptp_write_i210(struct igb_adapter *adapter,$/;"	f	file:
igb_pull_tail	igb_main.c	/^static void igb_pull_tail(struct igb_ring *rx_ring,$/;"	f	file:
igb_q_vector	igb.h	/^struct igb_q_vector {$/;"	s
igb_rar_set	igb_main.c	/^void igb_rar_set(struct igb_adapter *adapter, u32 index)$/;"	f
igb_rcv_ack_from_vf	igb_main.c	/^static void igb_rcv_ack_from_vf(struct igb_adapter *adapter, u32 vf)$/;"	f	file:
igb_rcv_msg_from_vf	igb_main.c	/^static void igb_rcv_msg_from_vf(struct igb_adapter *adapter, u32 vf)$/;"	f	file:
igb_read_i2c_byte	igb_main.c	/^s32 igb_read_i2c_byte(struct e1000_hw *hw, u8 byte_offset,$/;"	f
igb_receive_skb	igb_main.c	/^static void igb_receive_skb(struct igb_q_vector *q_vector,$/;"	f	file:
igb_reg_test	igb_ethtool.c	/^static int igb_reg_test(struct igb_adapter *adapter, u64 *data)$/;"	f	file:
igb_reg_test	igb_regtest.h	/^struct igb_reg_test {$/;"	s
igb_reinit_locked	igb_main.c	/^void igb_reinit_locked(struct igb_adapter *adapter)$/;"	f
igb_release_hw_control	igb_main.c	/^static void igb_release_hw_control(struct igb_adapter *adapter)$/;"	f	file:
igb_remove	igb_main.c	/^static void __devexit igb_remove(struct pci_dev *pdev)$/;"	f	file:
igb_remove_i2c	igb_main.c	/^static void igb_remove_i2c(struct igb_adapter *adapter)$/;"	f	file:
igb_remove_vmdq_netdevs	igb_main.c	/^int igb_remove_vmdq_netdevs(struct igb_adapter *adapter)$/;"	f
igb_request_irq	igb_main.c	/^static int igb_request_irq(struct igb_adapter *adapter)$/;"	f	file:
igb_request_msix	igb_main.c	/^static int igb_request_msix(struct igb_adapter *adapter)$/;"	f	file:
igb_reset	igb_main.c	/^void igb_reset(struct igb_adapter *adapter)$/;"	f
igb_reset_interrupt_capability	igb_main.c	/^static void igb_reset_interrupt_capability(struct igb_adapter *adapter)$/;"	f	file:
igb_reset_sriov_capability	igb_main.c	/^static void igb_reset_sriov_capability(struct igb_adapter *adapter)$/;"	f	file:
igb_reset_task	igb_main.c	/^static void igb_reset_task(struct work_struct *work)$/;"	f	file:
igb_restore_vf_multicasts	igb_main.c	/^static void igb_restore_vf_multicasts(struct igb_adapter *adapter)$/;"	f	file:
igb_restore_vlan	igb_main.c	/^static void igb_restore_vlan(struct igb_adapter *adapter)$/;"	f	file:
igb_resume	igb_main.c	/^static int igb_resume(struct device *dev)$/;"	f	file:
igb_reuse_rx_page	igb_main.c	/^static void igb_reuse_rx_page(struct igb_ring *rx_ring,$/;"	f	file:
igb_ring	igb.h	/^struct igb_ring {$/;"	s
igb_ring_container	igb.h	/^struct igb_ring_container {$/;"	s
igb_ring_irq_enable	igb_main.c	/^void igb_ring_irq_enable(struct igb_q_vector *q_vector)$/;"	f
igb_rlpml_set	igb_main.c	/^static void igb_rlpml_set(struct igb_adapter *adapter)$/;"	f	file:
igb_run_loopback_test	igb_ethtool.c	/^static int igb_run_loopback_test(struct igb_adapter *adapter)$/;"	f	file:
igb_runtime_idle	igb_main.c	/^static int igb_runtime_idle(struct device *dev)$/;"	f	file:
igb_runtime_resume	igb_main.c	/^static int igb_runtime_resume(struct device *dev)$/;"	f	file:
igb_runtime_suspend	igb_main.c	/^static int igb_runtime_suspend(struct device *dev)$/;"	f	file:
igb_rx_buffer	igb.h	/^struct igb_rx_buffer {$/;"	s
igb_rx_checksum	igb_main.c	/^static inline void igb_rx_checksum(struct igb_ring *ring,$/;"	f	file:
igb_rx_hash	igb_main.c	/^static inline void igb_rx_hash(struct igb_ring *ring,$/;"	f	file:
igb_rx_queue_stats	igb.h	/^struct igb_rx_queue_stats {$/;"	s
igb_set_adv_coal	igb_ethtool.c	/^static int igb_set_adv_coal(struct net_device *netdev, struct ethtool_value *edata)$/;"	f	file:
igb_set_coalesce	igb_ethtool.c	/^static int igb_set_coalesce(struct net_device *netdev,$/;"	f	file:
igb_set_eee	igb_ethtool.c	/^static int igb_set_eee(struct net_device *netdev,$/;"	f	file:
igb_set_eeprom	igb_ethtool.c	/^static int igb_set_eeprom(struct net_device *netdev,$/;"	f	file:
igb_set_ethtool_ops	igb_ethtool.c	/^void igb_set_ethtool_ops(struct net_device *netdev)$/;"	f
igb_set_features	igb_main.c	/^static int igb_set_features(struct net_device *netdev,$/;"	f	file:
igb_set_flags	igb_ethtool.c	/^static int igb_set_flags(struct net_device *netdev, u32 data)$/;"	f	file:
igb_set_fw_version	igb_main.c	/^static void igb_set_fw_version(struct igb_adapter *adapter)$/;"	f	file:
igb_set_i2c_clk	igb_main.c	/^static void igb_set_i2c_clk(void *data, int state)$/;"	f	file:
igb_set_i2c_data	igb_main.c	/^static void igb_set_i2c_data(void *data, int state)$/;"	f	file:
igb_set_interrupt_capability	igb_main.c	/^static void igb_set_interrupt_capability(struct igb_adapter *adapter, bool msix)$/;"	f	file:
igb_set_itr	igb_main.c	/^static void igb_set_itr(struct igb_q_vector *q_vector)$/;"	f	file:
igb_set_mac	igb_main.c	/^static int igb_set_mac(struct net_device *netdev, void *p)$/;"	f	file:
igb_set_msglevel	igb_ethtool.c	/^static void igb_set_msglevel(struct net_device *netdev, u32 data)$/;"	f	file:
igb_set_pauseparam	igb_ethtool.c	/^static int igb_set_pauseparam(struct net_device *netdev,$/;"	f	file:
igb_set_phy_loopback	igb_ethtool.c	/^static int igb_set_phy_loopback(struct igb_adapter *adapter)$/;"	f	file:
igb_set_phys_id	igb_ethtool.c	/^static int igb_set_phys_id(struct net_device *netdev,$/;"	f	file:
igb_set_ringparam	igb_ethtool.c	/^static int igb_set_ringparam(struct net_device *netdev,$/;"	f	file:
igb_set_rss_hash_opt	igb_ethtool.c	/^static int igb_set_rss_hash_opt(struct igb_adapter *adapter,$/;"	f	file:
igb_set_rx_csum	igb_ethtool.c	/^static int igb_set_rx_csum(struct net_device *netdev, u32 data)$/;"	f	file:
igb_set_rx_mode	igb_main.c	/^static void igb_set_rx_mode(struct net_device *netdev)$/;"	f	file:
igb_set_rxnfc	igb_ethtool.c	/^static int igb_set_rxnfc(struct net_device *dev, struct ethtool_rxnfc *cmd)$/;"	f	file:
igb_set_settings	igb_ethtool.c	/^static int igb_set_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)$/;"	f	file:
igb_set_spd_dplx	igb_main.c	/^int igb_set_spd_dplx(struct igb_adapter *adapter, u16 spddplx)$/;"	f
igb_set_sriov_capability	igb_main.c	/^static void igb_set_sriov_capability(struct igb_adapter *adapter)$/;"	f	file:
igb_set_tso	igb_ethtool.c	/^static int igb_set_tso(struct net_device *netdev, u32 data)$/;"	f	file:
igb_set_tx_csum	igb_ethtool.c	/^static int igb_set_tx_csum(struct net_device *netdev, u32 data)$/;"	f	file:
igb_set_uta	igb_main.c	/^static void igb_set_uta(struct igb_adapter *adapter)$/;"	f	file:
igb_set_vf_mac	igb_main.c	/^static int igb_set_vf_mac(struct igb_adapter *adapter,$/;"	f	file:
igb_set_vf_mac_addr	igb_main.c	/^static int igb_set_vf_mac_addr(struct igb_adapter *adapter, u32 *msg, int vf)$/;"	f	file:
igb_set_vf_multicasts	igb_main.c	/^static int igb_set_vf_multicasts(struct igb_adapter *adapter,$/;"	f	file:
igb_set_vf_promisc	igb_main.c	/^static int igb_set_vf_promisc(struct igb_adapter *adapter, u32 *msgbuf, u32 vf)$/;"	f	file:
igb_set_vf_rate_limit	igb_main.c	/^static void igb_set_vf_rate_limit(struct e1000_hw *hw, int vf, int tx_rate,$/;"	f	file:
igb_set_vf_rlpml	igb_main.c	/^static inline int igb_set_vf_rlpml(struct igb_adapter *adapter, int size,$/;"	f	file:
igb_set_vf_vlan	igb_main.c	/^static int igb_set_vf_vlan(struct igb_adapter *adapter, u32 *msgbuf, u32 vf)$/;"	f	file:
igb_set_vf_vlan_strip	igb_main.c	/^static inline void igb_set_vf_vlan_strip(struct igb_adapter *adapter,$/;"	f	file:
igb_set_vmolr	igb_main.c	/^static inline void igb_set_vmolr(struct igb_adapter *adapter,$/;"	f	file:
igb_set_vmvir	igb_main.c	/^static void igb_set_vmvir(struct igb_adapter *adapter, u32 vid, u32 vf)$/;"	f	file:
igb_set_wol	igb_ethtool.c	/^static int igb_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	file:
igb_setup_all_rx_resources	igb_main.c	/^static int igb_setup_all_rx_resources(struct igb_adapter *adapter)$/;"	f	file:
igb_setup_all_tx_resources	igb_main.c	/^static int igb_setup_all_tx_resources(struct igb_adapter *adapter)$/;"	f	file:
igb_setup_dca	igb_main.c	/^static void igb_setup_dca(struct igb_adapter *adapter)$/;"	f	file:
igb_setup_desc_rings	igb_ethtool.c	/^static int igb_setup_desc_rings(struct igb_adapter *adapter)$/;"	f	file:
igb_setup_loopback_test	igb_ethtool.c	/^static int igb_setup_loopback_test(struct igb_adapter *adapter)$/;"	f	file:
igb_setup_mrqc	igb_main.c	/^static void igb_setup_mrqc(struct igb_adapter *adapter)$/;"	f	file:
igb_setup_rctl	igb_main.c	/^void igb_setup_rctl(struct igb_adapter *adapter)$/;"	f
igb_setup_rx_resources	igb_main.c	/^int igb_setup_rx_resources(struct igb_ring *rx_ring)$/;"	f
igb_setup_tctl	igb_main.c	/^void igb_setup_tctl(struct igb_adapter *adapter)$/;"	f
igb_setup_tx_resources	igb_main.c	/^int igb_setup_tx_resources(struct igb_ring *tx_ring)$/;"	f
igb_shutdown	igb_main.c	/^static void igb_shutdown(struct pci_dev *pdev)$/;"	f	file:
igb_spoof_check	igb_main.c	/^static void igb_spoof_check(struct igb_adapter *adapter)$/;"	f	file:
igb_stats	igb_ethtool.c	/^struct igb_stats {$/;"	s	file:
igb_suspend	igb_main.c	/^static int igb_suspend(struct device *dev)$/;"	f	file:
igb_sw_init	igb_main.c	/^static int __devinit igb_sw_init(struct igb_adapter *adapter)$/;"	f	file:
igb_sync_mac_table	igb_main.c	/^void igb_sync_mac_table(struct igb_adapter *adapter)$/;"	f
igb_sysfs_del_adapter	igb_hwmon.c	/^static void igb_sysfs_del_adapter(struct igb_adapter *adapter)$/;"	f	file:
igb_sysfs_exit	igb_hwmon.c	/^void igb_sysfs_exit(struct igb_adapter *adapter)$/;"	f
igb_sysfs_init	igb_hwmon.c	/^int igb_sysfs_init(struct igb_adapter *adapter)$/;"	f
igb_test_intr	igb_ethtool.c	/^static irqreturn_t igb_test_intr(int irq, void *data)$/;"	f	file:
igb_test_staterr	igb.h	/^static inline __le32 igb_test_staterr(union e1000_adv_rx_desc *rx_desc,$/;"	f
igb_therm_cautionthresh	igb_procfs.c	/^static int igb_therm_cautionthresh(char *page, char **start, off_t off, $/;"	f	file:
igb_therm_location	igb_procfs.c	/^static int igb_therm_location(char *page, char **start, off_t off, $/;"	f	file:
igb_therm_maxopthresh	igb_procfs.c	/^static int igb_therm_maxopthresh(char *page, char **start, off_t off, $/;"	f	file:
igb_therm_proc_data	igb.h	/^struct igb_therm_proc_data$/;"	s
igb_therm_temp	igb_procfs.c	/^static int igb_therm_temp(char *page, char **start, off_t off, $/;"	f	file:
igb_thermal_present	igb_procfs.c	/^bool igb_thermal_present(struct igb_adapter *adapter)$/;"	f
igb_top_dir	igb_procfs.c	/^static struct proc_dir_entry *igb_top_dir = NULL;$/;"	v	typeref:struct:proc_dir_entry	file:
igb_tso	igb_main.c	/^static int igb_tso(struct igb_ring *tx_ring,$/;"	f	file:
igb_tx_buffer	igb.h	/^struct igb_tx_buffer {$/;"	s
igb_tx_cmd_type	igb_main.c	/^static u32 igb_tx_cmd_type(struct sk_buff *skb, u32 tx_flags)$/;"	f	file:
igb_tx_csum	igb_main.c	/^static void igb_tx_csum(struct igb_ring *tx_ring, struct igb_tx_buffer *first)$/;"	f	file:
igb_tx_ctxtdesc	igb_main.c	/^void igb_tx_ctxtdesc(struct igb_ring *tx_ring, u32 vlan_macip_lens,$/;"	f
igb_tx_flags	igb.h	/^enum igb_tx_flags {$/;"	g
igb_tx_map	igb_main.c	/^static void igb_tx_map(struct igb_ring *tx_ring,$/;"	f	file:
igb_tx_olinfo_status	igb_main.c	/^static void igb_tx_olinfo_status(struct igb_ring *tx_ring,$/;"	f	file:
igb_tx_queue_mapping	igb_main.c	/^static inline struct igb_ring *igb_tx_queue_mapping(struct igb_adapter *adapter,$/;"	f	file:
igb_tx_queue_mapping	igb_main.c	5485;"	d	file:
igb_tx_queue_stats	igb.h	/^struct igb_tx_queue_stats {$/;"	s
igb_tx_timeout	igb_main.c	/^static void igb_tx_timeout(struct net_device *netdev)$/;"	f	file:
igb_tx_wthresh	igb_main.c	/^static u32 igb_tx_wthresh(struct igb_adapter *adapter)$/;"	f	file:
igb_unmap_and_free_tx_resource	igb_main.c	/^void igb_unmap_and_free_tx_resource(struct igb_ring *ring,$/;"	f
igb_up	igb_main.c	/^int igb_up(struct igb_adapter *adapter)$/;"	f
igb_update_dca	igb_main.c	/^static void igb_update_dca(struct igb_q_vector *q_vector)$/;"	f	file:
igb_update_itr	igb_main.c	/^static void igb_update_itr(struct igb_q_vector *q_vector,$/;"	f	file:
igb_update_mng_vlan	igb_main.c	/^static void igb_update_mng_vlan(struct igb_adapter *adapter)$/;"	f	file:
igb_update_phy_info	igb_main.c	/^static void igb_update_phy_info(unsigned long data)$/;"	f	file:
igb_update_ring_itr	igb_main.c	/^static void igb_update_ring_itr(struct igb_q_vector *q_vector)$/;"	f	file:
igb_update_rx_dca	igb_main.c	/^static void igb_update_rx_dca(struct igb_adapter *adapter,$/;"	f	file:
igb_update_stats	igb_main.c	/^void igb_update_stats(struct igb_adapter *adapter)$/;"	f
igb_update_tx_dca	igb_main.c	/^static void igb_update_tx_dca(struct igb_adapter *adapter,$/;"	f	file:
igb_validate_option	igb_param.c	/^static int igb_validate_option(unsigned int *value,$/;"	f	file:
igb_vf_configure	igb_main.c	/^static int igb_vf_configure(struct igb_adapter *adapter, int vf)$/;"	f	file:
igb_vf_reset	igb_main.c	/^static inline void igb_vf_reset(struct igb_adapter *adapter, u32 vf)$/;"	f	file:
igb_vf_reset_event	igb_main.c	/^static void igb_vf_reset_event(struct igb_adapter *adapter, u32 vf)$/;"	f	file:
igb_vf_reset_msg	igb_main.c	/^static void igb_vf_reset_msg(struct igb_adapter *adapter, u32 vf)$/;"	f	file:
igb_vfta_set	igb_main.c	/^static void igb_vfta_set(struct igb_adapter *adapter, u32 vid, bool add)$/;"	f	file:
igb_vlan_mode	igb_main.c	/^static void igb_vlan_mode(struct net_device *netdev, struct vlan_group *vlgrp)$/;"	f	file:
igb_vlan_rx_add_vid	igb_main.c	/^static int igb_vlan_rx_add_vid(struct net_device *netdev,$/;"	f	file:
igb_vlan_rx_kill_vid	igb_main.c	/^static int igb_vlan_rx_kill_vid(struct net_device *netdev,$/;"	f	file:
igb_vlvf_set	igb_main.c	/^s32 igb_vlvf_set(struct igb_adapter *adapter, u32 vid, bool add, u32 vf)$/;"	f
igb_vmdq_adapter	igb.h	/^struct igb_vmdq_adapter {$/;"	s
igb_vmdq_change_mtu	igb_vmdq.c	/^int igb_vmdq_change_mtu(struct net_device *dev, int new_mtu)$/;"	f
igb_vmdq_close	igb_vmdq.c	/^int igb_vmdq_close(struct net_device *dev)$/;"	f
igb_vmdq_ethtool_ops	igb_vmdq.c	/^static struct ethtool_ops igb_vmdq_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
igb_vmdq_get_drvinfo	igb_vmdq.c	/^static void igb_vmdq_get_drvinfo(struct net_device *netdev,$/;"	f	file:
igb_vmdq_get_msglevel	igb_vmdq.c	/^static u32 igb_vmdq_get_msglevel(struct net_device *netdev)$/;"	f	file:
igb_vmdq_get_ringparam	igb_vmdq.c	/^static void igb_vmdq_get_ringparam(struct net_device *netdev,$/;"	f	file:
igb_vmdq_get_rx_csum	igb_vmdq.c	/^static u32 igb_vmdq_get_rx_csum(struct net_device *netdev)$/;"	f	file:
igb_vmdq_get_settings	igb_vmdq.c	/^static int igb_vmdq_get_settings(struct net_device *netdev,$/;"	f	file:
igb_vmdq_get_stats	igb_vmdq.c	/^struct net_device_stats *igb_vmdq_get_stats(struct net_device *dev)$/;"	f
igb_vmdq_open	igb_vmdq.c	/^int igb_vmdq_open(struct net_device *dev)$/;"	f
igb_vmdq_ops	igb_main.c	/^static const struct net_device_ops igb_vmdq_ops = {$/;"	v	typeref:struct:net_device_ops	file:
igb_vmdq_set_ethtool_ops	igb_vmdq.c	/^void igb_vmdq_set_ethtool_ops(struct net_device *netdev)$/;"	f
igb_vmdq_set_mac	igb_vmdq.c	/^int igb_vmdq_set_mac(struct net_device *dev, void *p)$/;"	f
igb_vmdq_set_rx_mode	igb_vmdq.c	/^void igb_vmdq_set_rx_mode(struct net_device *dev)$/;"	f
igb_vmdq_tx_timeout	igb_vmdq.c	/^void igb_vmdq_tx_timeout(struct net_device *dev)$/;"	f
igb_vmdq_vlan_rx_add_vid	igb_vmdq.c	/^void igb_vmdq_vlan_rx_add_vid(struct net_device *dev, unsigned short vid)$/;"	f
igb_vmdq_vlan_rx_kill_vid	igb_vmdq.c	/^void igb_vmdq_vlan_rx_kill_vid(struct net_device *dev, unsigned short vid)$/;"	f
igb_vmdq_vlan_rx_register	igb_vmdq.c	/^void igb_vmdq_vlan_rx_register(struct net_device *dev, struct vlan_group *grp)$/;"	f
igb_vmdq_xmit_frame	igb_vmdq.c	/^netdev_tx_t igb_vmdq_xmit_frame(struct sk_buff *skb, struct net_device *dev)$/;"	f
igb_vmm_control	igb_main.c	/^static void igb_vmm_control(struct igb_adapter *adapter)$/;"	f	file:
igb_watchdog	igb_main.c	/^static void igb_watchdog(unsigned long data)$/;"	f	file:
igb_watchdog_task	igb_main.c	/^static void igb_watchdog_task(struct work_struct *work)$/;"	f	file:
igb_write_i2c_byte	igb_main.c	/^s32 igb_write_i2c_byte(struct e1000_hw *hw, u8 byte_offset,$/;"	f
igb_write_itr	igb_main.c	/^static void igb_write_itr(struct igb_q_vector *q_vector)$/;"	f	file:
igb_write_ivar	igb_main.c	/^static void igb_write_ivar(struct e1000_hw *hw, int msix_vector,$/;"	f	file:
igb_write_mc_addr_list	igb_main.c	/^int igb_write_mc_addr_list(struct net_device *netdev)$/;"	f
igb_write_uc_addr_list	igb_main.c	/^static int igb_write_uc_addr_list(struct net_device *netdev)$/;"	f	file:
igb_write_vm_addr_list	igb_vmdq.c	/^static int igb_write_vm_addr_list(struct net_device *netdev)$/;"	f	file:
igb_xmit_frame	igb_main.c	/^static netdev_tx_t igb_xmit_frame(struct sk_buff *skb,$/;"	f	file:
igb_xmit_frame_ring	igb_main.c	/^netdev_tx_t igb_xmit_frame_ring(struct sk_buff *skb,$/;"	f
in_ifs_mode	e1000_hw.h	/^	bool in_ifs_mode;$/;"	m	struct:e1000_mac_info
info_dir	igb.h	/^	struct proc_dir_entry *info_dir;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::proc_dir_entry
init_hw	e1000_hw.h	/^	s32  (*init_hw)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
init_params	e1000_hw.h	/^	s32  (*init_params)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
init_params	e1000_hw.h	/^	s32  (*init_params)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
init_params	e1000_hw.h	/^	s32  (*init_params)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
init_params	e1000_hw.h	/^	s32 (*init_params)(struct e1000_hw *hw);$/;"	m	struct:e1000_mbx_operations
init_thermal_sensor_thresh	e1000_hw.h	/^	s32 (*init_thermal_sensor_thresh)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
int_mode	igb.h	/^	int int_mode;$/;"	m	struct:igb_adapter
invm_img_type	e1000_nvm.h	/^	u8 invm_img_type;$/;"	m	struct:e1000_fw_version
invm_major	e1000_nvm.h	/^	u8 invm_major;$/;"	m	struct:e1000_fw_version
invm_minor	e1000_nvm.h	/^	u8 invm_minor;$/;"	m	struct:e1000_fw_version
io_base	e1000_hw.h	/^	unsigned long io_base;$/;"	m	struct:e1000_hw
ip_config	e1000_82575.h	/^		u32 ip_config;$/;"	m	union:e1000_adv_context_desc::__anon17
ip_config	e1000_hw.h	/^		__le32 ip_config;$/;"	m	union:e1000_context_desc::__anon48
ip_fields	e1000_hw.h	/^		} ip_fields;$/;"	m	union:e1000_context_desc::__anon48	typeref:struct:e1000_context_desc::__anon48::__anon49
ip_hdr	kcompat.h	2100;"	d
ip_id	e1000_82575.h	/^					__le16 ip_id; \/* IP id *\/$/;"	m	struct:e1000_adv_rx_desc::__anon22::__anon23::__anon26::__anon27
ip_id	e1000_hw.h	/^					__le16 ip_id;    \/* IP id *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon38::__anon39::__anon40::__anon41
ip_id	e1000_hw.h	/^					__le16 ip_id;  \/* IP id *\/$/;"	m	struct:e1000_rx_desc_extended::__anon32::__anon33::__anon34::__anon35
ip_setup	e1000_82575.h	/^	} ip_setup;$/;"	m	struct:e1000_adv_context_desc	typeref:union:e1000_adv_context_desc::__anon17
ipcse	e1000_hw.h	/^			__le16 ipcse;  \/* IP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon48::__anon49
ipcso	e1000_hw.h	/^			u8 ipcso;  \/* IP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon48::__anon49
ipcss	e1000_hw.h	/^			u8 ipcss;  \/* IP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon48::__anon49
iph	igb.h	/^	struct iphdr iph;$/;"	m	struct:igb_lrohdr	typeref:struct:igb_lrohdr::iphdr
iplen	e1000_82575.h	/^			u32 iplen:9;$/;"	m	struct:e1000_adv_context_desc::__anon17::__anon18
ipv4_packets	igb.h	/^	u64 ipv4_packets;      \/* IPv4 headers processed *\/$/;"	m	struct:igb_rx_queue_stats
ipv4e_packets	igb.h	/^	u64 ipv4e_packets;     \/* IPv4E headers with extensions processed *\/$/;"	m	struct:igb_rx_queue_stats
ipv6_hdr	kcompat.h	2099;"	d
ipv6_packets	igb.h	/^	u64 ipv6_packets;      \/* IPv6 headers processed *\/$/;"	m	struct:igb_rx_queue_stats
ipv6e_packets	igb.h	/^	u64 ipv6e_packets;     \/* IPv6E headers with extensions processed *\/$/;"	m	struct:igb_rx_queue_stats
irq_handler_t	kcompat.h	/^typedef irqreturn_t (*irq_handler_t)(int, void*, struct pt_regs *);$/;"	t
irq_handler_t	kcompat.h	1962;"	d
irqreturn_t	kcompat.h	1845;"	d
is_link_local_ether_addr	kcompat.h	/^static inline bool is_link_local_ether_addr(const u8 *addr)$/;"	f
is_mdix	e1000_hw.h	/^	bool is_mdix;$/;"	m	struct:e1000_phy_info
is_multicast_ether_addr	kcompat.h	1711;"	d
is_valid_ether_addr	kcompat.h	752;"	d
is_zero_ether_addr	kcompat.h	1704;"	d
itr	igb.h	/^	u8 itr;				\/* current ITR setting for ring *\/$/;"	m	struct:igb_ring_container
itr_register	igb.h	/^	void __iomem *itr_register;$/;"	m	struct:igb_q_vector
itr_val	igb.h	/^	u16 itr_val;$/;"	m	struct:igb_q_vector
ixgbe_get_netdev_tc_txq	kcompat.h	3448;"	d
ixgbe_get_netdev_tc_txq	kcompat.h	3449;"	d
k_ethtool_drvinfo	kcompat.h	/^struct k_ethtool_drvinfo {$/;"	s
kcalloc	kcompat.h	1493;"	d
kmemdup	kcompat.h	1990;"	d
kstrdup	kcompat.h	1722;"	d
kzalloc	kcompat.h	1731;"	d
kzalloc_node	kcompat.h	2393;"	d
kzalloc_node	kcompat.h	2394;"	d
l	igb_param.c	/^		} l;$/;"	m	union:igb_option::__anon8	typeref:struct:igb_option::__anon8::__anon10	file:
l4_config	e1000_82575.h	/^		u64 l4_config;$/;"	m	union:e1000_adv_context_desc::__anon19
l4_setup	e1000_82575.h	/^	} l4_setup;$/;"	m	struct:e1000_adv_context_desc	typeref:union:e1000_adv_context_desc::__anon19
l4len	e1000_82575.h	/^			u32 l4len:8;$/;"	m	struct:e1000_adv_context_desc::__anon19::__anon20
last_nack	igb.h	/^	unsigned long last_nack;$/;"	m	struct:vf_data_storage
last_rx_ptp_check	igb.h	/^	unsigned long last_rx_ptp_check;$/;"	m	struct:igb_adapter
last_rx_timestamp	igb.h	/^	unsigned long last_rx_timestamp;$/;"	m	struct:igb_ring
latecol	e1000_hw.h	/^	u64 latecol;$/;"	m	struct:e1000_hw_stats
latency_invalid	igb_main.c	/^	latency_invalid = 255$/;"	e	enum:latency_range	file:
latency_range	igb_main.c	/^enum latency_range {$/;"	g	file:
led_off	e1000_hw.h	/^	s32  (*led_off)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
led_on	e1000_hw.h	/^	s32  (*led_on)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
ledctl_default	e1000_hw.h	/^	u32 ledctl_default;$/;"	m	struct:e1000_mac_info
ledctl_mode1	e1000_hw.h	/^	u32 ledctl_mode1;$/;"	m	struct:e1000_mac_info
ledctl_mode2	e1000_hw.h	/^	u32 ledctl_mode2;$/;"	m	struct:e1000_mac_info
len	kcompat.h	/^	u32 len;            \/* number of strings in the string set *\/$/;"	m	struct:ethtool_gstrings
len	kcompat.h	/^	u32 len; \/* bytes *\/$/;"	m	struct:_kc_ethtool_regs
len	kcompat.h	/^	u32 len;$/;"	m	struct:ethtool_eeprom
len	kcompat.h	/^	u32 len;$/;"	m	struct:ethtool_test
lenerrs	e1000_hw.h	/^	u64 lenerrs;$/;"	m	struct:e1000_hw_stats
length	e1000_82575.h	/^			__le16 length; \/* Packet length *\/$/;"	m	struct:e1000_adv_rx_desc::__anon22::__anon28
length	e1000_hw.h	/^			__le16 length;  \/* Data buffer length *\/$/;"	m	struct:e1000_data_desc::__anon54::__anon55
length	e1000_hw.h	/^			__le16 length;  \/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc::__anon44::__anon45
length	e1000_hw.h	/^			__le16 length;$/;"	m	struct:e1000_rx_desc_extended::__anon32::__anon36
length	e1000_hw.h	/^			__le16 length[PS_PAGE_BUFFERS];$/;"	m	struct:e1000_rx_desc_packet_split::__anon38::__anon43
length	e1000_hw.h	/^	__le16 length;      \/* Length of data DMAed into data buffer *\/$/;"	m	struct:e1000_rx_desc
length0	e1000_hw.h	/^			__le16 length0;  \/* length of buffer 0 *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon38::__anon42
likely	kcompat.h	219;"	d
link_check_timeout	igb.h	/^	unsigned long link_check_timeout;$/;"	m	struct:igb_adapter
link_duplex	igb.h	/^	u16 link_duplex;$/;"	m	struct:igb_adapter
link_speed	igb.h	/^	u16 link_speed;$/;"	m	struct:igb_adapter
list_for_each_safe	kcompat.h	875;"	d
list_option	igb_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:igb_option::__anon7	file:
lli_port	igb.h	/^	u32 lli_port;$/;"	m	struct:igb_adapter
lli_size	igb.h	/^	u32 lli_size;$/;"	m	struct:igb_adapter
lo_dword	e1000_82575.h	/^			} lo_dword;$/;"	m	struct:e1000_adv_rx_desc::__anon22::__anon23	typeref:union:e1000_adv_rx_desc::__anon22::__anon23::__anon24
local_rx	e1000_hw.h	/^	enum e1000_1000t_rx_status local_rx;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_1000t_rx_status
location	e1000_hw.h	/^	u8 location;$/;"	m	struct:e1000_thermal_diode_data
location	kcompat.h	/^	__u32		location;$/;"	m	struct:_kc_ethtool_rx_flow_spec
low_latency	igb_main.c	/^	low_latency = 1,$/;"	e	enum:latency_range	file:
low_water	e1000_hw.h	/^	u32 low_water;  \/* Flow control low-water mark *\/$/;"	m	struct:e1000_fc_info
lower	e1000_82575.h	/^		} lower;$/;"	m	struct:e1000_adv_rx_desc::__anon22	typeref:struct:e1000_adv_rx_desc::__anon22::__anon23
lower	e1000_82575.h	/^	} lower;$/;"	m	struct:e1000_adv_data_desc	typeref:union:e1000_adv_data_desc::__anon13
lower	e1000_hw.h	/^		} lower;$/;"	m	struct:e1000_rx_desc_extended::__anon32	typeref:struct:e1000_rx_desc_extended::__anon32::__anon33
lower	e1000_hw.h	/^		} lower;$/;"	m	struct:e1000_rx_desc_packet_split::__anon38	typeref:struct:e1000_rx_desc_packet_split::__anon38::__anon39
lower	e1000_hw.h	/^	} lower;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon54
lower	e1000_hw.h	/^	} lower;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon44
lower_setup	e1000_hw.h	/^	} lower_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon48
lowest_latency	igb_main.c	/^	lowest_latency = 0,$/;"	e	enum:latency_range	file:
lro_stats	igb.h	/^	struct igb_lro_stats lro_stats;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::igb_lro_stats
lrolist	igb.h	/^	struct igb_lro_list lrolist;   \/* LRO list for queue vector*\/$/;"	m	struct:igb_q_vector	typeref:struct:igb_q_vector::igb_lro_list
m_ext	kcompat.h	/^	struct _kc_ethtool_flow_ext m_ext;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:struct:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_ext
m_u	kcompat.h	/^	union _kc_ethtool_flow_union m_u;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:union:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_union
mac	e1000_hw.h	/^	struct e1000_mac_info  mac;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_mac_info
mac_table	igb.h	/^	struct igb_mac_addr *mac_table;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::igb_mac_addr
maclen	e1000_82575.h	/^			u32 maclen:7;$/;"	m	struct:e1000_adv_context_desc::__anon17::__anon18
magic	kcompat.h	/^	u32 magic;$/;"	m	struct:ethtool_eeprom
mask	igb_regtest.h	/^	u32 mask;$/;"	m	struct:igb_reg_test
max	igb_param.c	/^			int max;$/;"	m	struct:igb_option::__anon8::__anon9	file:
max	kcompat.h	857;"	d
max	kcompat.h	858;"	d
max_cable_length	e1000_hw.h	/^	u16 max_cable_length;$/;"	m	struct:e1000_phy_info
max_frame_size	igb.h	/^	u32 max_frame_size;$/;"	m	struct:igb_adapter
max_op_thresh	e1000_hw.h	/^	u8 max_op_thresh;$/;"	m	struct:e1000_thermal_diode_data
max_t	kcompat.h	869;"	d
mbx	e1000_hw.h	/^	struct e1000_mbx_info mbx;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_mbx_info
mc_filter_type	e1000_hw.h	/^	u32 mc_filter_type;$/;"	m	struct:e1000_mac_info
mcc	e1000_hw.h	/^	u64 mcc;$/;"	m	struct:e1000_hw_stats
mdd	igb.h	/^	bool mdd;$/;"	m	struct:igb_adapter
mdio_read	kcompat_ethtool.c	/^	int (*mdio_read) (struct net_device *dev, int phy_id, int location);$/;"	m	struct:_kc_mii_if_info	file:
mdio_write	kcompat_ethtool.c	/^	void (*mdio_write) (struct net_device *dev, int phy_id, int location, int val);$/;"	m	struct:_kc_mii_if_info	file:
mdix	e1000_hw.h	/^	u8 mdix;$/;"	m	struct:e1000_phy_info
media_changed	e1000_hw.h	/^	bool media_changed;$/;"	m	struct:e1000_dev_spec_82575
media_port	e1000_hw.h	/^	u8 media_port;$/;"	m	struct:e1000_dev_spec_82575
media_type	e1000_hw.h	/^	enum e1000_media_type media_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_media_type
mgpdc	e1000_hw.h	/^	u64 mgpdc;$/;"	m	struct:e1000_hw_stats
mgprc	e1000_hw.h	/^	u64 mgprc;$/;"	m	struct:e1000_hw_stats
mgptc	e1000_hw.h	/^	u64 mgptc;$/;"	m	struct:e1000_hw_stats
middle	e1000_hw.h	/^		} middle;$/;"	m	struct:e1000_rx_desc_packet_split::__anon38	typeref:struct:e1000_rx_desc_packet_split::__anon38::__anon42
might_sleep	kcompat.h	1253;"	d
mii_check_link	kcompat_ethtool.c	895;"	d	file:
mii_check_link	kcompat_ethtool.c	896;"	d	file:
mii_ethtool_gset	kcompat_ethtool.c	891;"	d	file:
mii_ethtool_gset	kcompat_ethtool.c	892;"	d	file:
mii_ethtool_sset	kcompat_ethtool.c	893;"	d	file:
mii_ethtool_sset	kcompat_ethtool.c	894;"	d	file:
mii_if_info	kcompat_ethtool.c	869;"	d	file:
mii_link_ok	kcompat_ethtool.c	887;"	d	file:
mii_link_ok	kcompat_ethtool.c	888;"	d	file:
mii_nway_restart	kcompat_ethtool.c	889;"	d	file:
mii_nway_restart	kcompat_ethtool.c	890;"	d	file:
min	igb_param.c	/^			int min;$/;"	m	struct:igb_option::__anon8::__anon9	file:
min	kcompat.h	850;"	d
min	kcompat.h	851;"	d
min_cable_length	e1000_hw.h	/^	u16 min_cable_length;$/;"	m	struct:e1000_phy_info
min_t	kcompat.h	864;"	d
mkrloc	e1000_82575.h	/^			u32 mkrloc:9;$/;"	m	struct:e1000_adv_context_desc::__anon19::__anon20
mmd_eee_adv_to_ethtool_adv_t	kcompat.h	/^static inline u32 mmd_eee_adv_to_ethtool_adv_t(u16 eee_adv)$/;"	f
mmd_eee_cap_to_ethtool_sup_t	kcompat.h	/^static inline u32 mmd_eee_cap_to_ethtool_sup_t(u16 eee_cap)$/;"	f
mmiowb	kcompat.h	153;"	d
mmiowb	kcompat.h	155;"	d
mng_cookie	e1000_hw.h	/^	struct e1000_host_mng_dhcp_cookie mng_cookie;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_host_mng_dhcp_cookie
mng_vlan_id	igb.h	/^	u16 mng_vlan_id;$/;"	m	struct:igb_adapter
module_param	kcompat.h	129;"	d
module_param_array_named	kcompat.h	1605;"	d
module_param_array_named	kcompat.h	1606;"	d
module_plugged	e1000_hw.h	/^	bool module_plugged;$/;"	m	struct:e1000_dev_spec_82575
mpc	e1000_hw.h	/^	u64 mpc;$/;"	m	struct:e1000_hw_stats
mprc	e1000_hw.h	/^	u64 mprc;$/;"	m	struct:e1000_hw_stats
mptc	e1000_hw.h	/^	u64 mptc;$/;"	m	struct:e1000_hw_stats
mrq	e1000_hw.h	/^			__le32 mrq;  \/* Multiple Rx Queues *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon38::__anon39
mrq	e1000_hw.h	/^			__le32 mrq; \/* Multiple Rx Queues *\/$/;"	m	struct:e1000_rx_desc_extended::__anon32::__anon33
ms_type	e1000_hw.h	/^	enum e1000_ms_type ms_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_ms_type
msec_delay	e1000_osdep.h	46;"	d
msec_delay_irq	e1000_osdep.h	59;"	d
msg_enable	igb.h	/^	int msg_enable;$/;"	m	struct:igb_adapter
msgs_rx	e1000_hw.h	/^	u32 msgs_rx;$/;"	m	struct:e1000_mbx_stats
msgs_tx	e1000_hw.h	/^	u32 msgs_tx;$/;"	m	struct:e1000_mbx_stats
msi_remove_pci_irq_vectors	kcompat.h	96;"	d
msix_entries	igb.h	/^	struct msix_entry *msix_entries;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::msix_entry
msix_entry	kcompat.h	/^struct msix_entry {$/;"	s
msleep	kcompat.h	1481;"	d
msleep_interruptible	kcompat.h	1520;"	d
mss	e1000_82575.h	/^			u32 mss:16;$/;"	m	struct:e1000_adv_context_desc::__anon19::__anon20
mss	e1000_hw.h	/^			__le16 mss;  \/* Maximum segment size *\/$/;"	m	struct:e1000_context_desc::__anon52::__anon53
mss	igb.h	/^	u16	mss;			\/* size of data portion of packet *\/$/;"	m	struct:igb_cb
mss_l4len_idx	e1000_82575.h	/^	__le32 mss_l4len_idx;$/;"	m	struct:e1000_adv_tx_context_desc
mta_reg_count	e1000_hw.h	/^	u16 mta_reg_count;$/;"	m	struct:e1000_mac_info
mta_shadow	e1000_hw.h	/^	u32 mta_shadow[MAX_MTA_REG];$/;"	m	struct:e1000_mac_info
mtu	e1000_hw.h	/^	u32 mtu;$/;"	m	struct:e1000_dev_spec_82575
mutex_lock	kcompat.h	1804;"	d
mutex_unlock	kcompat.h	1805;"	d
n_hwmon	igb.h	/^	unsigned int n_hwmon;$/;"	m	struct:hwmon_buff
n_stats	kcompat.h	/^	u32 n_stats;$/;"	m	struct:ethtool_stats
n_stats	kcompat.h	/^	u32 n_stats;$/;"	m	struct:k_ethtool_drvinfo
name	igb.h	/^	char name[12];$/;"	m	struct:hwmon_attr
name	igb.h	/^	char name[IFNAMSIZ + 9];$/;"	m	struct:igb_q_vector
name	igb_param.c	/^	const char *name;$/;"	m	struct:igb_option	file:
name	igb_procfs.c	/^	char name[32];$/;"	m	struct:igb_proc_type	file:
napi	igb.h	/^	struct napi_struct napi;$/;"	m	struct:igb_q_vector	typeref:struct:igb_q_vector::napi_struct
napi_complete	kcompat.h	2276;"	d
napi_complete	kcompat.h	2278;"	d
napi_disable	kcompat.h	2260;"	d
napi_enable	kcompat.h	2259;"	d
napi_gro_receive	kcompat.h	185;"	d
napi_schedule	kcompat.h	2254;"	d
napi_schedule_prep	kcompat.h	2252;"	d
napi_struct	kcompat.h	/^struct napi_struct {$/;"	s
napi_synchronize	kcompat.h	/^static inline void napi_synchronize(const struct napi_struct *n)$/;"	f
napi_synchronize	kcompat.h	2272;"	d
napi_to_poll_dev	kcompat.c	/^struct net_device *napi_to_poll_dev(const struct napi_struct *napi)$/;"	f
net_stats	igb.h	/^	struct net_device_stats net_stats;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::net_device_stats
net_stats	igb.h	/^	struct net_device_stats net_stats;$/;"	m	struct:igb_vmdq_adapter	typeref:struct:igb_vmdq_adapter::net_device_stats
netdev	igb.h	/^	struct net_device *netdev;      \/* back pointer to net_device *\/$/;"	m	struct:igb_ring	typeref:struct:igb_ring::net_device
netdev	igb.h	/^	struct net_device *netdev;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::net_device
netdev_alert	kcompat.h	2911;"	d
netdev_alert	kcompat.h	2912;"	d
netdev_alloc_page	kcompat.h	2534;"	d
netdev_alloc_skb_ip_align	kcompat.h	3115;"	d
netdev_alloc_skb_ip_align	kcompat.h	3117;"	d
netdev_completed_queue	kcompat.h	3458;"	d
netdev_crit	kcompat.h	2914;"	d
netdev_crit	kcompat.h	2915;"	d
netdev_dbg	kcompat.h	2929;"	d
netdev_dbg	kcompat.h	2931;"	d
netdev_dbg	kcompat.h	2934;"	d
netdev_dbg	kcompat.h	2940;"	d
netdev_emerg	kcompat.h	2908;"	d
netdev_emerg	kcompat.h	2909;"	d
netdev_err	kcompat.h	2917;"	d
netdev_err	kcompat.h	2918;"	d
netdev_features_t	kcompat.h	/^typedef u32 netdev_features_t;$/;"	t
netdev_for_each_mc_addr	kcompat.h	2855;"	d
netdev_for_each_uc_addr	kcompat.h	2624;"	d
netdev_for_each_uc_addr	kcompat.h	2865;"	d
netdev_info	kcompat.h	2926;"	d
netdev_info	kcompat.h	2927;"	d
netdev_mc_count	kcompat.h	2849;"	d
netdev_mc_empty	kcompat.h	2852;"	d
netdev_name	kcompat.h	1339;"	d
netdev_name	kcompat.h	2884;"	d
netdev_notice	kcompat.h	2923;"	d
netdev_notice	kcompat.h	2924;"	d
netdev_printk	kcompat.h	2887;"	d
netdev_printk	kcompat.h	2889;"	d
netdev_printk	kcompat.h	2895;"	d
netdev_printk	kcompat.h	2903;"	d
netdev_priv	kcompat.h	1124;"	d
netdev_reset_queue	kcompat.h	3462;"	d
netdev_ring	igb.h	447;"	d
netdev_ring	igb.h	452;"	d
netdev_sent_queue	kcompat.h	3460;"	d
netdev_to_dev	kcompat.h	/^static inline struct device *netdev_to_dev(struct net_device *netdev)$/;"	f
netdev_to_dev	kcompat.h	2083;"	d
netdev_tx_completed_queue	kcompat.h	3457;"	d
netdev_tx_reset_queue	kcompat.h	3461;"	d
netdev_tx_sent_queue	kcompat.h	3459;"	d
netdev_tx_t	kcompat.h	2677;"	d
netdev_tx_t	kcompat.h	2678;"	d
netdev_uc_count	kcompat.h	2621;"	d
netdev_uc_count	kcompat.h	2859;"	d
netdev_uc_empty	kcompat.h	2862;"	d
netdev_warn	kcompat.h	2920;"	d
netdev_warn	kcompat.h	2921;"	d
netif_alert	kcompat.h	2958;"	d
netif_alert	kcompat.h	2959;"	d
netif_crit	kcompat.h	2961;"	d
netif_crit	kcompat.h	2962;"	d
netif_dbg	kcompat.h	2976;"	d
netif_dbg	kcompat.h	2977;"	d
netif_emerg	kcompat.h	2955;"	d
netif_emerg	kcompat.h	2956;"	d
netif_err	kcompat.h	2964;"	d
netif_err	kcompat.h	2965;"	d
netif_info	kcompat.h	2973;"	d
netif_info	kcompat.h	2974;"	d
netif_is_multiqueue	kcompat.h	2497;"	d
netif_level	kcompat.h	3119;"	d
netif_level	kcompat.h	3120;"	d
netif_msg_drv	kcompat.h	923;"	d
netif_msg_hw	kcompat.h	999;"	d
netif_msg_ifdown	kcompat.h	927;"	d
netif_msg_ifup	kcompat.h	928;"	d
netif_msg_init	kcompat.h	1106;"	d
netif_msg_intr	kcompat.h	932;"	d
netif_msg_link	kcompat.h	925;"	d
netif_msg_pktdata	kcompat.h	935;"	d
netif_msg_probe	kcompat.h	924;"	d
netif_msg_rx_err	kcompat.h	929;"	d
netif_msg_rx_status	kcompat.h	934;"	d
netif_msg_timer	kcompat.h	926;"	d
netif_msg_tx_done	kcompat.h	933;"	d
netif_msg_tx_err	kcompat.h	930;"	d
netif_msg_tx_queued	kcompat.h	931;"	d
netif_msg_wol	kcompat.h	1002;"	d
netif_napi_add	kcompat.h	2231;"	d
netif_napi_add	kcompat.h	2285;"	d
netif_napi_del	kcompat.h	2245;"	d
netif_napi_del	kcompat.h	2294;"	d
netif_napi_del	kcompat.h	2446;"	d
netif_napi_del	kcompat.h	2449;"	d
netif_napi_del	kcompat.h	2450;"	d
netif_notice	kcompat.h	2970;"	d
netif_notice	kcompat.h	2971;"	d
netif_poll_disable	kcompat.h	1048;"	d
netif_poll_enable	kcompat.h	1059;"	d
netif_printk	kcompat.h	2948;"	d
netif_printk	kcompat.h	2949;"	d
netif_set_real_num_rx_queues	kcompat.h	3155;"	d
netif_set_real_num_tx_queues	kcompat.h	3053;"	d
netif_set_real_num_tx_queues	kcompat.h	3056;"	d
netif_set_real_num_tx_queues	kcompat.h	3062;"	d
netif_set_xps_queue	kcompat.h	3771;"	d
netif_set_xps_queue	kcompat.h	3773;"	d
netif_start_subqueue	kcompat.h	2477;"	d
netif_start_subqueue	kcompat.h	2478;"	d
netif_start_subqueue	kcompat.h	2493;"	d
netif_stop_subqueue	kcompat.h	2470;"	d
netif_stop_subqueue	kcompat.h	2471;"	d
netif_stop_subqueue	kcompat.h	2492;"	d
netif_subqueue_stopped	kcompat.h	2197;"	d
netif_tx_disable	kcompat.h	1067;"	d
netif_tx_start_all_queues	kcompat.h	2469;"	d
netif_tx_start_all_queues	kcompat.h	2488;"	d
netif_tx_start_all_queues	kcompat.h	2490;"	d
netif_tx_stop_all_queues	kcompat.h	2467;"	d
netif_tx_stop_all_queues	kcompat.h	2485;"	d
netif_tx_wake_all_queues	kcompat.h	2468;"	d
netif_tx_wake_all_queues	kcompat.h	2486;"	d
netif_wake_subqueue	kcompat.h	2498;"	d
netif_warn	kcompat.h	2967;"	d
netif_warn	kcompat.h	2968;"	d
new_handler_t	kcompat.h	/^typedef irqreturn_t (*new_handler_t)(int, void*);$/;"	t
next	kcompat.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
next_seq	igb.h	/^	u32	next_seq;		\/* next expected sequence number *\/$/;"	m	struct:igb_cb
next_to_alloc	igb.h	/^	u16 next_to_alloc;$/;"	m	struct:igb_ring
next_to_clean	igb.h	/^	u16 next_to_clean;$/;"	m	struct:igb_ring
next_to_use	igb.h	/^	u16 next_to_use;$/;"	m	struct:igb_ring
next_to_watch	igb.h	/^	union e1000_adv_tx_desc *next_to_watch;$/;"	m	struct:igb_tx_buffer	typeref:union:igb_tx_buffer::e1000_adv_tx_desc
nfs_packets	igb.h	/^	u64 nfs_packets;       \/* NFS headers processe *\/$/;"	m	struct:igb_rx_queue_stats
node_online	kcompat.h	233;"	d
node_online_map	kcompat.h	1620;"	d
node_online_map	kcompat.h	1621;"	d
nr	igb_param.c	/^			int nr;$/;"	m	struct:igb_option::__anon8::__anon10	file:
num_online_cpus	kcompat.h	237;"	d
num_online_nodes	kcompat.h	1617;"	d
num_online_nodes	kcompat.h	1618;"	d
num_q_vectors	igb.h	/^	unsigned int num_q_vectors;$/;"	m	struct:igb_adapter
num_rx_queues	igb.h	/^	int num_rx_queues;$/;"	m	struct:igb_adapter
num_tx_queues	igb.h	/^	int num_tx_queues;$/;"	m	struct:igb_adapter
num_vf_mc_hashes	igb.h	/^	u16 num_vf_mc_hashes;$/;"	m	struct:vf_data_storage
numa_node_id	kcompat.h	3046;"	d
number	kcompat.c	/^static char * number(char * buf, char * end, long long num, int base, int size, int precision, int type)$/;"	f	file:
nvm	e1000_hw.h	/^	struct e1000_nvm_info  nvm;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_nvm_info
nway_reset	kcompat_ethtool.c	/^	int  (*nway_reset)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
nxtseq_seed	e1000_82575.h	/^		__le32 nxtseq_seed;$/;"	m	struct:e1000_adv_tx_desc::__anon30
o2bgptc	e1000_hw.h	/^	u64 o2bgptc;$/;"	m	struct:e1000_hw_stats
o2bspc	e1000_hw.h	/^	u64 o2bspc;$/;"	m	struct:e1000_hw_stats
offset	kcompat.h	/^	u32 offset;$/;"	m	struct:ethtool_eeprom
old_lsc	igb.h	/^	bool old_lsc;$/;"	m	struct:igb_adapter
olinfo_status	e1000_82575.h	/^		__le32 olinfo_status;$/;"	m	struct:e1000_adv_tx_desc::__anon29
opcode_bits	e1000_hw.h	/^	u16 opcode_bits;$/;"	m	struct:e1000_nvm_info
ops	e1000_hw.h	/^	struct e1000_mac_operations ops;$/;"	m	struct:e1000_mac_info	typeref:struct:e1000_mac_info::e1000_mac_operations
ops	e1000_hw.h	/^	struct e1000_mbx_operations ops;$/;"	m	struct:e1000_mbx_info	typeref:struct:e1000_mbx_info::e1000_mbx_operations
ops	e1000_hw.h	/^	struct e1000_nvm_operations ops;$/;"	m	struct:e1000_nvm_info	typeref:struct:e1000_nvm_info::e1000_nvm_operations
ops	e1000_hw.h	/^	struct e1000_phy_operations ops;$/;"	m	struct:e1000_phy_info	typeref:struct:e1000_phy_info::e1000_phy_operations
options	e1000_82575.h	/^		} options;$/;"	m	union:e1000_adv_data_desc::__anon15	typeref:struct:e1000_adv_data_desc::__anon15::__anon16
or_build	e1000_nvm.h	/^	u16 or_build;$/;"	m	struct:e1000_fw_version
or_major	e1000_nvm.h	/^	u16 or_major;$/;"	m	struct:e1000_fw_version
or_patch	e1000_nvm.h	/^	u16 or_patch;$/;"	m	struct:e1000_fw_version
or_valid	e1000_nvm.h	/^	bool or_valid;$/;"	m	struct:e1000_fw_version
original_ms_type	e1000_hw.h	/^	enum e1000_ms_type original_ms_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_ms_type
override	e1000_hw.h	/^	enum e1000_nvm_override override;$/;"	m	struct:e1000_nvm_info	typeref:enum:e1000_nvm_info::e1000_nvm_override
p	igb_param.c	/^			struct igb_opt_list *p;$/;"	m	struct:igb_option::__anon8::__anon10	typeref:struct:igb_option::__anon8::__anon10::igb_opt_list	file:
packets	igb.h	/^	u64 packets;$/;"	m	struct:igb_rx_queue_stats
packets	igb.h	/^	u64 packets;$/;"	m	struct:igb_tx_queue_stats
pad	igb.h	/^	u16 pad; \/* end spacing to ensure length is mult. of dword *\/$/;"	m	struct:e1000_fw_drv_info
pad2	igb.h	/^	u8  pad2; \/* end spacing to ensure length is mult. of dword2 *\/$/;"	m	struct:e1000_fw_drv_info
page	igb.h	/^	struct page *page;$/;"	m	struct:igb_rx_buffer	typeref:struct:igb_rx_buffer::page
page_count	kcompat.h	1311;"	d
page_offset	igb.h	/^	u32 page_offset;$/;"	m	struct:igb_rx_buffer
page_size	e1000_hw.h	/^	u16 page_size;$/;"	m	struct:e1000_nvm_info
page_to_nid	kcompat.h	1445;"	d
pause_time	e1000_hw.h	/^	u16 pause_time;  \/* Flow control pause timer *\/$/;"	m	struct:e1000_fc_info
paylen	e1000_82575.h	/^			u32 paylen:18; \/* Payload length *\/$/;"	m	struct:e1000_adv_data_desc::__anon15::__anon16
pci_channel_offline	kcompat.h	2072;"	d
pci_choose_state	kcompat.h	1633;"	d
pci_cleanup_aer_uncorrect_error_status	kcompat.h	1987;"	d
pci_clear_master	kcompat.h	2568;"	d
pci_clear_mwi	kcompat.h	831;"	d
pci_cmd_word	e1000_hw.h	/^	u16 pci_cmd_word;$/;"	m	struct:e1000_bus_info
pci_config_space_ich8lan	kcompat.h	1968;"	d
pci_dev_run_wake	kcompat.h	2873;"	d
pci_dev_to_dev	kcompat.h	/^static inline struct device *pci_dev_to_dev(struct pci_dev *pdev)$/;"	f
pci_disable_device	kcompat.h	818;"	d
pci_disable_link_state	kcompat.h	2397;"	d
pci_disable_link_state_locked	kcompat.h	3327;"	d
pci_disable_msi	kcompat.h	90;"	d
pci_disable_msi	kcompat.h	91;"	d
pci_disable_msix	kcompat.h	94;"	d
pci_disable_msix	kcompat.h	95;"	d
pci_disable_pcie_error_reporting	kcompat.h	1986;"	d
pci_disable_sriov	kcompat.h	2592;"	d
pci_disable_sriov	kcompat.h	2593;"	d
pci_dma_mapping_error	kcompat.h	1410;"	d
pci_drvdata	kcompat_ethtool.c	/^	void *pci_drvdata;$/;"	m	struct:_kc_pci_dev_ext	file:
pci_enable_device_mem	kcompat.h	2359;"	d
pci_enable_msi	kcompat.h	88;"	d
pci_enable_msi	kcompat.h	89;"	d
pci_enable_msix	kcompat.h	92;"	d
pci_enable_msix	kcompat.h	93;"	d
pci_enable_pcie_error_reporting	kcompat.h	/^static inline int pci_enable_pcie_error_reporting(struct pci_dev *dev)$/;"	f
pci_enable_sriov	kcompat.h	2590;"	d
pci_enable_sriov	kcompat.h	2591;"	d
pci_enable_wake	kcompat.h	813;"	d
pci_get_class	kcompat.h	1622;"	d
pci_get_device	kcompat.h	1096;"	d
pci_ioremap_bar	kcompat.h	2528;"	d
pci_is_pcie	kcompat.h	/^static inline bool pci_is_pcie(struct pci_dev *dev)$/;"	f
pci_map_page	kcompat.h	951;"	d
pci_name	kcompat.h	1022;"	d
pci_num_vf	kcompat.h	2839;"	d
pci_pcie_cap	kcompat.h	2749;"	d
pci_pcie_type	kcompat.h	/^static inline u8 pci_pcie_type(struct pci_dev *pdev)$/;"	f
pci_pcie_type	kcompat.h	3660;"	d
pci_power_t	kcompat.h	/^typedef int pci_power_t;$/;"	t
pci_prepare_to_sleep	kcompat.h	2531;"	d
pci_register_driver	kcompat.h	1131;"	d
pci_register_driver	kcompat.h	1132;"	d
pci_register_driver	kcompat.h	2117;"	d
pci_release_regions	kcompat.h	739;"	d
pci_release_selected_regions	kcompat.h	2076;"	d
pci_request_regions	kcompat.h	734;"	d
pci_request_selected_regions	kcompat.h	2074;"	d
pci_request_selected_regions_exclusive	kcompat.h	2555;"	d
pci_restore_state	kcompat.h	1972;"	d
pci_restore_state	kcompat.h	1974;"	d
pci_save_state	kcompat.h	1969;"	d
pci_save_state	kcompat.h	1971;"	d
pci_set_dma_mask	kcompat.h	729;"	d
pci_set_mwi	kcompat.h	828;"	d
pci_set_power_state	kcompat.h	808;"	d
pci_unmap_addr	kcompat.h	1908;"	d
pci_unmap_addr_set	kcompat.h	1910;"	d
pci_unmap_len	kcompat.h	1912;"	d
pci_unmap_len_set	kcompat.h	1914;"	d
pci_unmap_page	kcompat.h	956;"	d
pci_vfs_assigned	kcompat.h	3796;"	d
pci_wake_from_d3	kcompat.h	2530;"	d
pcie_aspm_enabled	kcompat.h	2561;"	d
pcie_capability_clear_and_set_word	kcompat.h	3673;"	d
pcie_capability_clear_word	kcompat.h	/^static inline int pcie_capability_clear_word(struct pci_dev *dev, int pos,$/;"	f
pcie_capability_read_word	kcompat.h	3668;"	d
pcie_capability_write_word	kcompat.h	3670;"	d
pdev	igb.h	/^	struct pci_dev *pdev;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::pci_dev
pdev	kcompat.h	/^	struct pci_dev pdev;$/;"	m	struct:device	typeref:struct:device::pci_dev
pdev_printk	kcompat.h	1160;"	d
perm_addr	e1000_hw.h	/^	u8 perm_addr[ETH_ADDR_LEN];$/;"	m	struct:e1000_mac_info
pf_qos	igb.h	/^	u16 pf_qos;$/;"	m	struct:vf_data_storage
pf_vlan	igb.h	/^	u16 pf_vlan; \/* When set, guest VLAN config not allowed. *\/$/;"	m	struct:vf_data_storage
phy	e1000_hw.h	/^	struct e1000_phy_info  phy;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_phy_info
phy_id	kcompat_ethtool.c	/^	int phy_id;$/;"	m	struct:_kc_mii_if_info	file:
phy_id_mask	kcompat_ethtool.c	/^	int phy_id_mask;$/;"	m	struct:_kc_mii_if_info	file:
phy_info	igb.h	/^	struct e1000_phy_info phy_info;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::e1000_phy_info
phy_info_timer	igb.h	/^	struct timer_list phy_info_timer;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::timer_list
phy_stats	igb.h	/^	struct e1000_phy_stats phy_stats;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::e1000_phy_stats
phys_id	kcompat_ethtool.c	/^	int  (*phys_id)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
pkt_addr	e1000_82575.h	/^		__le64 pkt_addr; \/* Packet buffer address *\/$/;"	m	struct:e1000_adv_rx_desc::__anon21
pkt_info	e1000_82575.h	/^					__le16 pkt_info; \/*RSS type, Pkt type*\/$/;"	m	struct:e1000_adv_rx_desc::__anon22::__anon23::__anon24::__anon25
pkt_rate_high	kcompat.h	/^	u32	pkt_rate_high;$/;"	m	struct:_kc_ethtool_coalesce
pkt_rate_low	kcompat.h	/^	u32	pkt_rate_low;$/;"	m	struct:_kc_ethtool_coalesce
platform_data	kcompat.h	/^	void		*platform_data;$/;"	m	struct:i2c_board_info
pm_message_t	kcompat.h	1729;"	d
pm_qos_add_requirement	kcompat.h	2340;"	d
pm_qos_add_requirement	kcompat.h	2348;"	d
pm_qos_remove_requirement	kcompat.h	2342;"	d
pm_qos_remove_requirement	kcompat.h	2349;"	d
pm_qos_update_requirement	kcompat.h	2344;"	d
pm_qos_update_requirement	kcompat.h	2350;"	d
pm_runtime_disable	kcompat.h	2716;"	d
pm_runtime_enable	kcompat.h	2725;"	d
pm_runtime_get_noresume	kcompat.h	2728;"	d
pm_runtime_get_sync	kcompat.h	2690;"	d
pm_runtime_get_sync	kcompat.h	2697;"	d
pm_runtime_put	kcompat.h	2701;"	d
pm_runtime_put_noidle	kcompat.h	2719;"	d
pm_runtime_put_sync	kcompat.h	2704;"	d
pm_runtime_resume	kcompat.h	2707;"	d
pm_runtime_set_active	kcompat.h	2722;"	d
pm_runtime_set_suspended	kcompat.h	2713;"	d
pm_runtime_suspended	kcompat.h	3019;"	d
pm_runtime_suspended	kcompat.h	3026;"	d
pm_schedule_suspend	kcompat.h	2710;"	d
polarity_correction	e1000_hw.h	/^	bool polarity_correction;$/;"	m	struct:e1000_phy_info
poll	kcompat.h	/^	int (*poll)(struct napi_struct *, int);$/;"	m	struct:napi_struct
poll_dev	igb.h	/^	struct net_device poll_dev;$/;"	m	struct:igb_q_vector	typeref:struct:igb_q_vector::net_device
popts	e1000_82575.h	/^			u32 popts:6;  \/* Packet Options *\/$/;"	m	struct:e1000_adv_data_desc::__anon15::__anon16
popts	e1000_hw.h	/^			u8 popts;  \/* Packet Options *\/$/;"	m	struct:e1000_data_desc::__anon56::__anon57
port_num	igb.h	/^	u8 port_num;$/;"	m	struct:e1000_fw_drv_info
port_num	igb.h	/^	u8 port_num;$/;"	m	struct:igb_adapter
power_down	e1000_hw.h	/^	void (*power_down)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
power_up	e1000_hw.h	/^	void (*power_up)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
power_up_serdes	e1000_hw.h	/^	void (*power_up_serdes)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
pprev	kcompat.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::
pr_cont	kcompat.h	2596;"	d
pr_err	kcompat.h	2316;"	d
prc1023	e1000_hw.h	/^	u64 prc1023;$/;"	m	struct:e1000_hw_stats
prc127	e1000_hw.h	/^	u64 prc127;$/;"	m	struct:e1000_hw_stats
prc1522	e1000_hw.h	/^	u64 prc1522;$/;"	m	struct:e1000_hw_stats
prc255	e1000_hw.h	/^	u64 prc255;$/;"	m	struct:e1000_hw_stats
prc511	e1000_hw.h	/^	u64 prc511;$/;"	m	struct:e1000_hw_stats
prc64	e1000_hw.h	/^	u64 prc64;$/;"	m	struct:e1000_hw_stats
prefetch	kcompat.h	1640;"	d
print_hex_dump	kcompat.h	2157;"	d
protocol	igb.h	/^	__be16 protocol;$/;"	m	struct:igb_tx_buffer
ptc1023	e1000_hw.h	/^	u64 ptc1023;$/;"	m	struct:e1000_hw_stats
ptc127	e1000_hw.h	/^	u64 ptc127;$/;"	m	struct:e1000_hw_stats
ptc1522	e1000_hw.h	/^	u64 ptc1522;$/;"	m	struct:e1000_hw_stats
ptc255	e1000_hw.h	/^	u64 ptc255;$/;"	m	struct:e1000_hw_stats
ptc511	e1000_hw.h	/^	u64 ptc511;$/;"	m	struct:e1000_hw_stats
ptc64	e1000_hw.h	/^	u64 ptc64;$/;"	m	struct:e1000_hw_stats
ptp_caps	igb.h	/^	struct ptp_clock_info ptp_caps;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::ptp_clock_info
ptp_clock	igb.h	/^	struct ptp_clock *ptp_clock;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::ptp_clock
ptp_clock_register	kcompat.h	3664;"	d
ptp_overflow_work	igb.h	/^	struct delayed_work ptp_overflow_work;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::delayed_work
ptp_tx_skb	igb.h	/^	struct sk_buff *ptp_tx_skb;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::sk_buff
ptp_tx_start	igb.h	/^	unsigned long ptp_tx_start;$/;"	m	struct:igb_adapter
ptp_tx_work	igb.h	/^	struct work_struct ptp_tx_work;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::work_struct
put_cpu	kcompat.h	1287;"	d
put_cpu	kcompat.h	1288;"	d
q_vector	igb.h	/^	struct igb_q_vector *q_vector;  \/* backlink to q_vector *\/$/;"	m	struct:igb_ring	typeref:struct:igb_ring::igb_q_vector
q_vector	igb.h	/^	struct igb_q_vector *q_vector[MAX_Q_VECTORS];$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::igb_q_vector
queue	igb.h	/^	u16 queue;$/;"	m	struct:igb_mac_addr
queue_index	igb.h	/^	u8 queue_index;                 \/* logical index of the ring*\/$/;"	m	struct:igb_ring
r	igb_param.c	/^		} r;$/;"	m	union:igb_option::__anon8	typeref:struct:igb_option::__anon8::__anon9	file:
random_ether_addr	kcompat.h	1438;"	d
range_option	igb_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:igb_option::__anon7	file:
rar_entry_count	e1000_hw.h	/^	u16 rar_entry_count;$/;"	m	struct:e1000_mac_info
rar_set	e1000_hw.h	/^	void (*rar_set)(struct e1000_hw *, u8*, u32);$/;"	m	struct:e1000_mac_operations
rate_sample_interval	kcompat.h	/^	u32	rate_sample_interval;$/;"	m	struct:_kc_ethtool_coalesce
read	e1000_82575.h	/^	} read;$/;"	m	union:e1000_adv_rx_desc	typeref:struct:e1000_adv_rx_desc::__anon21
read	e1000_82575.h	/^	} read;$/;"	m	union:e1000_adv_tx_desc	typeref:struct:e1000_adv_tx_desc::__anon29
read	e1000_hw.h	/^	s32  (*read)(struct e1000_hw *, u16, u16, u16 *);$/;"	m	struct:e1000_nvm_operations
read	e1000_hw.h	/^	s32 (*read)(struct e1000_hw *, u32 *, u16,  u16);$/;"	m	struct:e1000_mbx_operations
read	e1000_hw.h	/^	} read;$/;"	m	union:e1000_rx_desc_extended	typeref:struct:e1000_rx_desc_extended::__anon31
read	e1000_hw.h	/^	} read;$/;"	m	union:e1000_rx_desc_packet_split	typeref:struct:e1000_rx_desc_packet_split::__anon37
read	igb_procfs.c	/^	int (*read)(char*, char**, off_t, int, int*, void*);$/;"	m	struct:igb_proc_type	file:
read_barrier_depends	kcompat.h	1282;"	d
read_i2c_byte	e1000_hw.h	/^	s32 (*read_i2c_byte)(struct e1000_hw *, u8, u8, u8 *);$/;"	m	struct:e1000_phy_operations
read_mac_addr	e1000_hw.h	/^	s32  (*read_mac_addr)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
read_posted	e1000_hw.h	/^	s32 (*read_posted)(struct e1000_hw *, u32 *, u16,  u16);$/;"	m	struct:e1000_mbx_operations
read_reg	e1000_hw.h	/^	s32  (*read_reg)(struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
read_reg_locked	e1000_hw.h	/^	s32  (*read_reg_locked)(struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
read_reg_page	e1000_hw.h	/^	s32  (*read_reg_page)(struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
real_adapter	igb.h	/^	struct igb_adapter *real_adapter;$/;"	m	struct:igb_vmdq_adapter	typeref:struct:igb_vmdq_adapter::igb_adapter
receive_errors	e1000_hw.h	/^	u32 receive_errors;$/;"	m	struct:e1000_phy_stats
refresh_time	e1000_hw.h	/^	u16 refresh_time;  \/* Flow control refresh timer *\/$/;"	m	struct:e1000_fc_info
reg	igb_regtest.h	/^	u16 reg;$/;"	m	struct:igb_reg_test
reg_idx	igb.h	/^	u8 reg_idx;                     \/* physical index of the ring *\/$/;"	m	struct:igb_ring
reg_num_mask	kcompat_ethtool.c	/^	int reg_num_mask;$/;"	m	struct:_kc_mii_if_info	file:
reg_offset	igb_regtest.h	/^	u16 reg_offset;$/;"	m	struct:igb_reg_test
reg_pattern_test	igb_ethtool.c	/^static bool reg_pattern_test(struct igb_adapter *adapter, u64 *data,$/;"	f	file:
reg_set_and_check	igb_ethtool.c	/^static bool reg_set_and_check(struct igb_adapter *adapter, u64 *data,$/;"	f	file:
reg_test_82575	igb_regtest.h	/^static struct igb_reg_test reg_test_82575[] = {$/;"	v	typeref:struct:igb_reg_test
reg_test_82576	igb_regtest.h	/^static struct igb_reg_test reg_test_82576[] = {$/;"	v	typeref:struct:igb_reg_test
reg_test_82580	igb_regtest.h	/^static struct igb_reg_test reg_test_82580[] = {$/;"	v	typeref:struct:igb_reg_test
reg_test_i210	igb_regtest.h	/^static struct igb_reg_test reg_test_i210[] = {$/;"	v	typeref:struct:igb_reg_test
reg_test_i350	igb_regtest.h	/^static struct igb_reg_test reg_test_i350[] = {$/;"	v	typeref:struct:igb_reg_test
regdump_len	kcompat.h	/^	u32 regdump_len;$/;"	m	struct:k_ethtool_drvinfo
release	e1000_hw.h	/^	void (*release)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
release	e1000_hw.h	/^	void (*release)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
release_swfw_sync	e1000_hw.h	/^	void (*release_swfw_sync)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mac_operations
reload	e1000_hw.h	/^	void (*reload)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
remote_rx	e1000_hw.h	/^	enum e1000_1000t_rx_status remote_rx;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_1000t_rx_status
reqs	e1000_hw.h	/^	u32 reqs;$/;"	m	struct:e1000_mbx_stats
request_irq	kcompat.h	1959;"	d
request_irq	kcompat.h	1960;"	d
requested_mode	e1000_hw.h	/^	enum e1000_fc_mode requested_mode;  \/* FC mode requested by caller *\/$/;"	m	struct:e1000_fc_info	typeref:enum:e1000_fc_info::e1000_fc_mode
reserved	e1000_hw.h	/^		__le64 reserved;$/;"	m	struct:e1000_rx_desc_extended::__anon31
reserved	e1000_hw.h	/^		__le64 reserved;$/;"	m	struct:e1000_rx_desc_packet_split::__anon38
reserved	kcompat.h	/^	u32 reserved;$/;"	m	struct:ethtool_test
reserved0	e1000_hw.h	/^	u8  reserved0;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved1	e1000_hw.h	/^	u16 reserved1;$/;"	m	struct:e1000_host_mng_command_header
reserved1	e1000_hw.h	/^	u32 reserved1;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved1	kcompat.h	/^	char reserved1[32];$/;"	m	struct:k_ethtool_drvinfo
reserved2	e1000_hw.h	/^	u16 reserved2;$/;"	m	struct:e1000_host_mng_command_header
reserved2	e1000_hw.h	/^	u16 reserved2;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved2	kcompat.h	/^	char reserved2[16];$/;"	m	struct:k_ethtool_drvinfo
reserved3	e1000_hw.h	/^	u8  reserved3;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reset	e1000_hw.h	/^	s32  (*reset)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
reset_delay_us	e1000_hw.h	/^	u32 reset_delay_us; \/* in usec *\/$/;"	m	struct:e1000_phy_info
reset_disable	e1000_hw.h	/^	bool reset_disable;$/;"	m	struct:e1000_phy_info
reset_hw	e1000_hw.h	/^	s32  (*reset_hw)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
reset_task	igb.h	/^	struct work_struct reset_task;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::work_struct
resource_size_t	kcompat.h	1883;"	d
restart_queue	igb.h	/^	u64 restart_queue;$/;"	m	struct:igb_tx_queue_stats
ret_status	igb.h	/^		u8 ret_status;$/;"	m	union:e1000_fw_hdr::__anon6
revision	e1000_hw.h	/^	u32 revision;$/;"	m	struct:e1000_phy_info
revision_id	e1000_hw.h	/^	u8  revision_id;$/;"	m	struct:e1000_hw
rfc	e1000_hw.h	/^	u64 rfc;$/;"	m	struct:e1000_hw_stats
ring	igb.h	/^	struct igb_ring *ring;		\/* pointer to linked list of rings *\/$/;"	m	struct:igb_ring_container	typeref:struct:igb_ring_container::igb_ring
ring_cookie	kcompat.h	/^	__u64		ring_cookie;$/;"	m	struct:_kc_ethtool_rx_flow_spec
ring_queue_index	igb.h	449;"	d
ring_queue_index	igb.h	453;"	d
rjc	e1000_hw.h	/^	u64 rjc;$/;"	m	struct:e1000_hw_stats
rlec	e1000_hw.h	/^	u64 rlec;$/;"	m	struct:e1000_hw_stats
rnbc	e1000_hw.h	/^	u64 rnbc;$/;"	m	struct:e1000_hw_stats
roc	e1000_hw.h	/^	u64 roc;$/;"	m	struct:e1000_hw_stats
round_jiffies	kcompat.h	2026;"	d
rpthc	e1000_hw.h	/^	u64 rpthc;$/;"	m	struct:e1000_hw_stats
rss	e1000_82575.h	/^				__le32 rss; \/* RSS Hash *\/$/;"	m	union:e1000_adv_rx_desc::__anon22::__anon23::__anon26
rss	e1000_hw.h	/^				__le32 rss; \/* RSS Hash *\/$/;"	m	union:e1000_rx_desc_extended::__anon32::__anon33::__anon34
rss	e1000_hw.h	/^				__le32 rss; \/* RSS Hash *\/$/;"	m	union:e1000_rx_desc_packet_split::__anon38::__anon39::__anon40
rss_queues	igb.h	/^	u32 rss_queues;$/;"	m	struct:igb_adapter
rsts	e1000_hw.h	/^	u32 rsts;$/;"	m	struct:e1000_mbx_stats
rsvd	e1000_82575.h	/^			u32 rsvd:4;$/;"	m	struct:e1000_adv_context_desc::__anon19::__anon20
rsvd	e1000_82575.h	/^			u32 rsvd:4;$/;"	m	struct:e1000_adv_data_desc::__anon13::__anon14
rsvd	e1000_82575.h	/^		__le64 rsvd;       \/* Reserved *\/$/;"	m	struct:e1000_adv_tx_desc::__anon30
ruc	e1000_hw.h	/^	u64 ruc;$/;"	m	struct:e1000_hw_stats
rx	igb.h	/^	struct igb_ring_container rx, tx;$/;"	m	struct:igb_q_vector	typeref:struct:igb_q_vector::igb_ring_container
rx_buffer_info	igb.h	/^		struct igb_rx_buffer *rx_buffer_info;$/;"	m	union:igb_ring::__anon2	typeref:struct:igb_ring::__anon2::igb_rx_buffer
rx_buffer_len	igb.h	/^			u16 rx_buffer_len;$/;"	m	struct:igb_ring::__anon3::__anon5
rx_coalesce_usecs	kcompat.h	/^	u32	rx_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_high	kcompat.h	/^	u32	rx_coalesce_usecs_high;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_irq	kcompat.h	/^	u32	rx_coalesce_usecs_irq;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_low	kcompat.h	/^	u32	rx_coalesce_usecs_low;$/;"	m	struct:_kc_ethtool_coalesce
rx_hwtstamp_cleared	igb.h	/^	u32 rx_hwtstamp_cleared;$/;"	m	struct:igb_adapter
rx_itr_setting	igb.h	/^	u32 rx_itr_setting;$/;"	m	struct:igb_adapter
rx_jumbo_max_pending	kcompat.h	/^	u32	rx_jumbo_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_jumbo_pending	kcompat.h	/^	u32	rx_jumbo_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_max_coalesced_frames	kcompat.h	/^	u32	rx_max_coalesced_frames;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_high	kcompat.h	/^	u32	rx_max_coalesced_frames_high;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_irq	kcompat.h	/^	u32	rx_max_coalesced_frames_irq;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_low	kcompat.h	/^	u32	rx_max_coalesced_frames_low;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_pending	kcompat.h	/^	u32	rx_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_mini_max_pending	kcompat.h	/^	u32	rx_mini_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_mini_pending	kcompat.h	/^	u32	rx_mini_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_pause	kcompat.h	/^	u32	rx_pause;$/;"	m	struct:_kc_ethtool_pauseparam
rx_pending	kcompat.h	/^	u32	rx_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_ring	igb.h	/^	struct igb_ring *rx_ring;$/;"	m	struct:igb_vmdq_adapter	typeref:struct:igb_vmdq_adapter::igb_ring
rx_ring	igb.h	/^	struct igb_ring *rx_ring[IGB_MAX_RX_QUEUES];$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::igb_ring
rx_ring_count	igb.h	/^	u16 rx_ring_count;$/;"	m	struct:igb_adapter
rx_stats	igb.h	/^			struct igb_rx_queue_stats rx_stats;$/;"	m	struct:igb_ring::__anon3::__anon5	typeref:struct:igb_ring::__anon3::__anon5::igb_rx_queue_stats
rxerrc	e1000_hw.h	/^	u64 rxerrc;$/;"	m	struct:e1000_hw_stats
scc	e1000_hw.h	/^	u64 scc;$/;"	m	struct:e1000_hw_stats
schedule_work	kcompat.h	1272;"	d
scnprintf	kcompat.h	1421;"	d
sctp_packets	igb.h	/^	u64 sctp_packets;      \/* SCTP headers processed *\/$/;"	m	struct:igb_rx_queue_stats
scvpc	e1000_hw.h	/^	u64 scvpc;$/;"	m	struct:e1000_hw_stats
sec	e1000_hw.h	/^	u64 sec;$/;"	m	struct:e1000_hw_stats
self_test	kcompat_ethtool.c	/^	void (*self_test)(struct net_device *, struct ethtool_test *, u64 *);$/;"	m	struct:_kc_ethtool_ops	file:
self_test_count	kcompat_ethtool.c	/^	int  (*self_test_count)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
send_xon	e1000_hw.h	/^	bool send_xon;  \/* Flow control send XON *\/$/;"	m	struct:e1000_fc_info
sensor	e1000_hw.h	/^	struct e1000_thermal_diode_data sensor[E1000_MAX_SENSORS];$/;"	m	struct:e1000_thermal_sensor_data	typeref:struct:e1000_thermal_sensor_data::e1000_thermal_diode_data
sensor	igb.h	/^	struct e1000_thermal_diode_data *sensor;$/;"	m	struct:hwmon_attr	typeref:struct:hwmon_attr::e1000_thermal_diode_data
sensor_data	igb.h	/^	struct e1000_thermal_diode_data *sensor_data;$/;"	m	struct:igb_therm_proc_data	typeref:struct:igb_therm_proc_data::e1000_thermal_diode_data
seq_num	e1000_82575.h	/^	u32 seq_num;$/;"	m	struct:e1000_adv_context_desc
seqnum_seed	e1000_82575.h	/^	__le32 seqnum_seed;$/;"	m	struct:e1000_adv_tx_context_desc
serdes_has_link	e1000_hw.h	/^	bool serdes_has_link;$/;"	m	struct:e1000_mac_info
serdes_link_state	e1000_hw.h	/^	enum e1000_serdes_link_state serdes_link_state;$/;"	m	struct:e1000_mac_info	typeref:enum:e1000_mac_info::e1000_serdes_link_state
set_coalesce	kcompat_ethtool.c	/^	int  (*set_coalesce)(struct net_device *, struct ethtool_coalesce *);$/;"	m	struct:_kc_ethtool_ops	file:
set_d0_lplu_state	e1000_hw.h	/^	s32  (*set_d0_lplu_state)(struct e1000_hw *, bool);$/;"	m	struct:e1000_phy_operations
set_d3_lplu_state	e1000_hw.h	/^	s32  (*set_d3_lplu_state)(struct e1000_hw *, bool);$/;"	m	struct:e1000_phy_operations
set_dev_node	kcompat.h	2033;"	d
set_dev_node	kcompat.h	2035;"	d
set_eeprom	kcompat_ethtool.c	/^	int  (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
set_itr	igb.h	/^	u8 set_itr;$/;"	m	struct:igb_q_vector
set_lan_id	e1000_hw.h	/^	void (*set_lan_id)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
set_msglevel	kcompat_ethtool.c	/^	void (*set_msglevel)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_page	e1000_hw.h	/^	s32  (*set_page)(struct e1000_hw *, u16);$/;"	m	struct:e1000_phy_operations
set_pauseparam	kcompat_ethtool.c	/^	int  (*set_pauseparam)(struct net_device *,$/;"	m	struct:_kc_ethtool_ops	file:
set_ringparam	kcompat_ethtool.c	/^	int  (*set_ringparam)(struct net_device *, struct ethtool_ringparam *);$/;"	m	struct:_kc_ethtool_ops	file:
set_rx_csum	kcompat_ethtool.c	/^	int  (*set_rx_csum)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_settings	kcompat_ethtool.c	/^	int  (*set_settings)(struct net_device *, struct ethtool_cmd *);$/;"	m	struct:_kc_ethtool_ops	file:
set_sg	kcompat_ethtool.c	/^	int  (*set_sg)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_tso	kcompat_ethtool.c	/^	int  (*set_tso)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_tx_csum	kcompat_ethtool.c	/^	int  (*set_tx_csum)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_wol	kcompat_ethtool.c	/^	int  (*set_wol)(struct net_device *, struct ethtool_wolinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
setup_led	e1000_hw.h	/^	s32  (*setup_led)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_link	e1000_hw.h	/^	s32  (*setup_link)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_physical_interface	e1000_hw.h	/^	s32  (*setup_physical_interface)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_timer	kcompat.h	1774;"	d
sfp_e1000_flags	e1000_phy.h	/^struct sfp_e1000_flags {$/;"	s
sgmii_active	e1000_hw.h	/^	bool sgmii_active;$/;"	m	struct:e1000_dev_spec_82575
shadow_vfta	igb.h	/^	u32 *shadow_vfta;$/;"	m	struct:igb_adapter
shutdown_serdes	e1000_hw.h	/^	void (*shutdown_serdes)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
signature	e1000_hw.h	/^	u32 signature;$/;"	m	struct:e1000_host_mng_dhcp_cookie
simple_open	kcompat.h	3484;"	d
simple_write_to_buffer	kcompat.h	3043;"	d
size	e1000_hw.h	/^	u16 size;$/;"	m	struct:e1000_mbx_info
size	igb.h	/^	unsigned int size;		\/* length of desc. ring in bytes *\/$/;"	m	struct:igb_ring
sizeof_stat	igb_ethtool.c	/^	int sizeof_stat;$/;"	m	struct:igb_stats	file:
sk_protocol	kcompat.h	1095;"	d
sk_tx_queue_get	kcompat.h	2815;"	d
sk_tx_queue_set	kcompat.h	2816;"	d
skb	igb.h	/^			struct sk_buff *skb;$/;"	m	struct:igb_ring::__anon3::__anon5	typeref:struct:igb_ring::__anon3::__anon5::sk_buff
skb	igb.h	/^	struct sk_buff *skb;$/;"	m	struct:igb_rx_buffer	typeref:struct:igb_rx_buffer::sk_buff
skb	igb.h	/^	struct sk_buff *skb;$/;"	m	struct:igb_tx_buffer	typeref:struct:igb_tx_buffer::sk_buff
skb_add_rx_frag	kcompat.h	3489;"	d
skb_checksum_none_assert	kcompat.h	3175;"	d
skb_checksum_start_offset	kcompat.h	3229;"	d
skb_checksum_start_offset	kcompat.h	3235;"	d
skb_copy_to_linear_data	kcompat.h	2112;"	d
skb_copy_to_linear_data_offset	kcompat.h	2114;"	d
skb_dst	kcompat.h	2637;"	d
skb_fill_page_desc	kcompat.h	1303;"	d
skb_frag_address	kcompat.h	3398;"	d
skb_frag_dma_map	kcompat.h	3409;"	d
skb_frag_page	kcompat.h	3390;"	d
skb_frag_size	kcompat.h	3374;"	d
skb_frag_size_sub	kcompat.h	3382;"	d
skb_get_rx_queue	kcompat.h	2586;"	d
skb_header_cloned	kcompat.h	174;"	d
skb_header_pointer	kcompat.h	1568;"	d
skb_is_gso	kcompat.h	1872;"	d
skb_is_gso	kcompat.h	1878;"	d
skb_is_gso_v6	kcompat.h	2305;"	d
skb_mac_header	kcompat.h	2118;"	d
skb_network_header	kcompat.h	2102;"	d
skb_network_header_len	kcompat.h	2116;"	d
skb_network_offset	kcompat.h	2101;"	d
skb_pad	kcompat.h	1887;"	d
skb_pad	kcompat.h	1889;"	d
skb_padto	kcompat.h	1892;"	d
skb_padto	kcompat.h	1894;"	d
skb_queue_reverse_walk_safe	kcompat.h	3268;"	d
skb_record_rx_queue	kcompat.h	2587;"	d
skb_reset_tail_pointer	kcompat.h	2104;"	d
skb_rx_queue_recorded	kcompat.h	2585;"	d
skb_set_tail_pointer	kcompat.h	2108;"	d
skb_tail_pointer	kcompat.h	2103;"	d
skb_transport_header	kcompat.h	2098;"	d
skb_transport_offset	kcompat.h	2097;"	d
skb_tx_hash	kcompat.h	2588;"	d
skb_tx_timestamp	kcompat.h	3516;"	d
skip_atoi	kcompat.c	/^static int skip_atoi(const char **s)$/;"	f	file:
smart_speed	e1000_hw.h	/^	enum e1000_smart_speed smart_speed;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_smart_speed
snprintf	kcompat.h	890;"	d
sopass	kcompat.h	/^	u8 sopass[SOPASS_MAX]; \/* SecureOn(tm) password *\/$/;"	m	struct:ethtool_wolinfo
special	e1000_hw.h	/^			__le16 special;$/;"	m	struct:e1000_data_desc::__anon56::__anon57
special	e1000_hw.h	/^			__le16 special;$/;"	m	struct:e1000_tx_desc::__anon46::__anon47
special	e1000_hw.h	/^	__le16 special;$/;"	m	struct:e1000_rx_desc
speed	e1000_hw.h	/^	enum e1000_bus_speed speed;$/;"	m	struct:e1000_bus_info	typeref:enum:e1000_bus_info::e1000_bus_speed
speed_downgraded	e1000_hw.h	/^	bool speed_downgraded;$/;"	m	struct:e1000_phy_info
spoofchk_enabled	igb.h	/^	bool spoofchk_enabled;$/;"	m	struct:vf_data_storage
stat_offset	igb_ethtool.c	/^	int stat_offset;$/;"	m	struct:igb_stats	file:
stat_string	igb_ethtool.c	/^	char stat_string[ETH_GSTRING_LEN];$/;"	m	struct:igb_stats	file:
state	igb.h	/^	u16 state; \/* bitmask *\/$/;"	m	struct:igb_mac_addr
state	igb.h	/^	unsigned long state;$/;"	m	struct:igb_adapter
stats	e1000_hw.h	/^	struct e1000_mbx_stats stats;$/;"	m	struct:e1000_mbx_info	typeref:struct:e1000_mbx_info::e1000_mbx_stats
stats	igb.h	/^	struct e1000_hw_stats stats;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::e1000_hw_stats
stats	igb.h	/^	struct igb_lro_stats stats;$/;"	m	struct:igb_lro_list	typeref:struct:igb_lro_list::igb_lro_stats
stats_block_coalesce_usecs	kcompat.h	/^	u32	stats_block_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
status	e1000_82575.h	/^			u32 status:4;  \/* Descriptor status *\/$/;"	m	struct:e1000_adv_data_desc::__anon15::__anon16
status	e1000_82575.h	/^		__le32 status;$/;"	m	struct:e1000_adv_tx_desc::__anon30
status	e1000_hw.h	/^			u8 status;  \/* Descriptor status *\/$/;"	m	struct:e1000_context_desc::__anon52::__anon53
status	e1000_hw.h	/^			u8 status;  \/* Descriptor status *\/$/;"	m	struct:e1000_data_desc::__anon56::__anon57
status	e1000_hw.h	/^			u8 status; \/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc::__anon46::__anon47
status	e1000_hw.h	/^	u8  status;  \/* Descriptor status *\/$/;"	m	struct:e1000_rx_desc
status	e1000_hw.h	/^	u8  status;$/;"	m	struct:e1000_host_mng_dhcp_cookie
status_error	e1000_82575.h	/^			__le32 status_error; \/* ext status\/error *\/$/;"	m	struct:e1000_adv_rx_desc::__anon22::__anon28
status_error	e1000_hw.h	/^			__le32 status_error;  \/* ext status\/error *\/$/;"	m	struct:e1000_rx_desc_extended::__anon32::__anon36
status_error	e1000_hw.h	/^			__le32 status_error;  \/* ext status\/error *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon38::__anon42
str	igb_param.c	/^	char *str;$/;"	m	struct:igb_opt_list	file:
strict_ieee	e1000_hw.h	/^	bool strict_ieee;  \/* Strict IEEE mode *\/$/;"	m	struct:e1000_fc_info
string_set	kcompat.h	/^	u32 string_set;     \/* string set id e.c. ETH_SS_TEST, etc*\/$/;"	m	struct:ethtool_gstrings
strlcpy	kcompat.h	1343;"	d
subsystem_device_id	e1000_hw.h	/^	u16 subsystem_device_id;$/;"	m	struct:e1000_hw
subsystem_vendor_id	e1000_hw.h	/^	u16 subsystem_vendor_id;$/;"	m	struct:e1000_hw
supported	kcompat.h	/^	u32 supported;$/;"	m	struct:ethtool_wolinfo
swap	kcompat.h	2552;"	d
symerrs	e1000_hw.h	/^	u64 symerrs;$/;"	m	struct:e1000_hw_stats
synchronize_irq	kcompat.h	2607;"	d
synchronize_irq	kcompat.h	2608;"	d
sysfs_attr_init	kcompat.h	3003;"	d
sysfs_attr_init	kcompat.h	3009;"	d
tail	igb.h	/^		struct sk_buff *tail;$/;"	m	union:igb_cb::__anon1	typeref:struct:igb_cb::__anon1::sk_buff
tail	igb.h	/^	void __iomem *tail;             \/* pointer to ring tail register *\/$/;"	m	struct:igb_ring
tc	igb.h	/^	struct timecounter tc;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::timecounter
tcp_config	e1000_hw.h	/^		__le32 tcp_config;$/;"	m	union:e1000_context_desc::__anon50
tcp_fields	e1000_hw.h	/^		} tcp_fields;$/;"	m	union:e1000_context_desc::__anon50	typeref:struct:e1000_context_desc::__anon50::__anon51
tcp_hdr	kcompat.h	2095;"	d
tcp_hdrlen	kcompat.h	2096;"	d
tcp_ip4_spec	kcompat.h	/^	struct ethtool_tcpip4_spec		tcp_ip4_spec;$/;"	m	union:_kc_ethtool_flow_union	typeref:struct:_kc_ethtool_flow_union::ethtool_tcpip4_spec
tcp_packets	igb.h	/^	u64 tcp_packets;       \/* TCP headers processed *\/$/;"	m	struct:igb_rx_queue_stats
tcp_seg_setup	e1000_hw.h	/^	} tcp_seg_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon52
temp	e1000_hw.h	/^	u8 temp;$/;"	m	struct:e1000_thermal_diode_data
test_cc	Makefile	/^test_cc = $(shell $(cc) --version > \/dev\/null 2>&1 && echo $(cc))$/;"	m
test_dir	Makefile	/^    test_dir = $(findstring $(dir), $(MANPATH))$/;"	m
test_dir	Makefile	/^    test_dir = $(shell [ -e $(dir) ] && echo $(dir))$/;"	m
test_dir	Makefile	/^test_dir = $(shell [ -e $(dir)\/include\/linux ] && echo $(dir))$/;"	m
test_file	Makefile	/^test_file = $(shell [ -f $(file) ] && echo $(file))$/;"	m
test_icr	igb.h	/^	u32 test_icr;$/;"	m	struct:igb_adapter
test_rx_ring	igb.h	/^	struct igb_ring test_rx_ring;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::igb_ring
test_tx_ring	igb.h	/^	struct igb_ring test_tx_ring;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::igb_ring
test_type	igb_regtest.h	/^	u16 test_type;$/;"	m	struct:igb_reg_test
testinfo_len	kcompat.h	/^	u32 testinfo_len;$/;"	m	struct:k_ethtool_drvinfo
th	igb.h	/^	struct tcphdr th; $/;"	m	struct:igb_lrohdr	typeref:struct:igb_lrohdr::tcphdr
therm_data	igb.h	/^	struct igb_therm_proc_data therm_data[E1000_MAX_SENSORS];$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::igb_therm_proc_data
therm_dir	igb.h	/^	struct proc_dir_entry *therm_dir[E1000_MAX_SENSORS];$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::proc_dir_entry
thermal_sensor_data	e1000_hw.h	/^	struct e1000_thermal_sensor_data thermal_sensor_data;$/;"	m	struct:e1000_mac_info	typeref:struct:e1000_mac_info::e1000_thermal_sensor_data
time_stamp	igb.h	/^	unsigned long time_stamp;$/;"	m	struct:igb_tx_buffer
timeout	e1000_hw.h	/^	u32 timeout;$/;"	m	struct:e1000_mbx_info
tmreg_lock	igb.h	/^	spinlock_t tmreg_lock;$/;"	m	struct:igb_adapter
tncrs	e1000_hw.h	/^	u64 tncrs;$/;"	m	struct:e1000_hw_stats
to_net_dev	kcompat.h	2063;"	d
to_pci_dev	kcompat.h	/^static inline struct pci_dev *to_pci_dev (struct device *dev)$/;"	f
tor	e1000_hw.h	/^	u64 tor;$/;"	m	struct:e1000_hw_stats
tot	e1000_hw.h	/^	u64 tot;$/;"	m	struct:e1000_hw_stats
total_bytes	igb.h	/^	unsigned int total_bytes;	\/* total bytes processed this int *\/$/;"	m	struct:igb_ring_container
total_packets	igb.h	/^	unsigned int total_packets;	\/* total packets processed this int *\/$/;"	m	struct:igb_ring_container
tpr	e1000_hw.h	/^	u64 tpr;$/;"	m	struct:e1000_hw_stats
tpt	e1000_hw.h	/^	u64 tpt;$/;"	m	struct:e1000_hw_stats
true	kcompat.h	1993;"	d
ts	igb.h	/^	__be32 ts[0];$/;"	m	struct:igb_lrohdr
tsctc	e1000_hw.h	/^	u64 tsctc;$/;"	m	struct:e1000_hw_stats
tsctfc	e1000_hw.h	/^	u64 tsctfc;$/;"	m	struct:e1000_hw_stats
tsecr	igb.h	/^	__be32	tsecr;			\/* timestamp echo response *\/$/;"	m	struct:igb_cb
tsval	igb.h	/^	u32	tsval;			\/* timestamp value in host order *\/$/;"	m	struct:igb_cb
tucmd	e1000_82575.h	/^			u32 tucmd:11;$/;"	m	struct:e1000_adv_context_desc::__anon19::__anon20
tucse	e1000_hw.h	/^			__le16 tucse;  \/* TCP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon50::__anon51
tucso	e1000_hw.h	/^			u8 tucso;  \/* TCP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon50::__anon51
tucss	e1000_hw.h	/^			u8 tucss;  \/* TCP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon50::__anon51
tx	igb.h	/^	struct igb_ring_container rx, tx;$/;"	m	struct:igb_q_vector	typeref:struct:igb_q_vector::
tx_buffer_info	igb.h	/^		struct igb_tx_buffer *tx_buffer_info;$/;"	m	union:igb_ring::__anon2	typeref:struct:igb_ring::__anon2::igb_tx_buffer
tx_coalesce_usecs	kcompat.h	/^	u32	tx_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_high	kcompat.h	/^	u32	tx_coalesce_usecs_high;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_irq	kcompat.h	/^	u32	tx_coalesce_usecs_irq;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_low	kcompat.h	/^	u32	tx_coalesce_usecs_low;$/;"	m	struct:_kc_ethtool_coalesce
tx_flags	igb.h	/^	u32 tx_flags;$/;"	m	struct:igb_tx_buffer
tx_hang_detected	igb.h	/^	bool tx_hang_detected;$/;"	m	struct:igb_adapter
tx_hwtstamp_timeouts	igb.h	/^	u32 tx_hwtstamp_timeouts;$/;"	m	struct:igb_adapter
tx_itr_setting	igb.h	/^	u32 tx_itr_setting;$/;"	m	struct:igb_adapter
tx_max_coalesced_frames	kcompat.h	/^	u32	tx_max_coalesced_frames;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_high	kcompat.h	/^	u32	tx_max_coalesced_frames_high;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_irq	kcompat.h	/^	u32	tx_max_coalesced_frames_irq;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_low	kcompat.h	/^	u32	tx_max_coalesced_frames_low;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_pending	kcompat.h	/^	u32	tx_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
tx_packet_delta	e1000_hw.h	/^	u32 tx_packet_delta;$/;"	m	struct:e1000_mac_info
tx_pause	kcompat.h	/^	u32	tx_pause;$/;"	m	struct:_kc_ethtool_pauseparam
tx_pending	kcompat.h	/^	u32	tx_pending;$/;"	m	struct:_kc_ethtool_ringparam
tx_pkt_filtering	e1000_hw.h	/^	bool tx_pkt_filtering;$/;"	m	struct:e1000_mac_info
tx_rate	igb.h	/^	u16 tx_rate;$/;"	m	struct:vf_data_storage
tx_ring	igb.h	/^	struct igb_ring *tx_ring;$/;"	m	struct:igb_vmdq_adapter	typeref:struct:igb_vmdq_adapter::igb_ring
tx_ring	igb.h	/^	struct igb_ring *tx_ring[IGB_MAX_TX_QUEUES];$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::igb_ring
tx_ring_count	igb.h	/^	u16 tx_ring_count;$/;"	m	struct:igb_adapter
tx_stats	igb.h	/^			struct igb_tx_queue_stats tx_stats;$/;"	m	struct:igb_ring::__anon3::__anon4	typeref:struct:igb_ring::__anon3::__anon4::igb_tx_queue_stats
tx_timeout_count	igb.h	/^	u32 tx_timeout_count;$/;"	m	struct:igb_adapter
tx_timeout_factor	igb.h	/^	u8  tx_timeout_factor;$/;"	m	struct:igb_adapter
tx_work_limit	igb.h	/^	u16 tx_work_limit;$/;"	m	struct:igb_adapter
txcw	e1000_hw.h	/^	u32 txcw;$/;"	m	struct:e1000_mac_info
txring_txq	igb.h	/^static inline struct netdev_queue *txring_txq(const struct igb_ring *tx_ring)$/;"	f
typ_len_ext	e1000_hw.h	/^			u8 typ_len_ext;$/;"	m	struct:e1000_data_desc::__anon54::__anon55
type	e1000_hw.h	/^	enum e1000_bus_type type;$/;"	m	struct:e1000_bus_info	typeref:enum:e1000_bus_info::e1000_bus_type
type	e1000_hw.h	/^	enum e1000_mac_type type;$/;"	m	struct:e1000_mac_info	typeref:enum:e1000_mac_info::e1000_mac_type
type	e1000_hw.h	/^	enum e1000_nvm_type type;$/;"	m	struct:e1000_nvm_info	typeref:enum:e1000_nvm_info::e1000_nvm_type
type	e1000_hw.h	/^	enum e1000_phy_type type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_phy_type
type	igb_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	m	struct:igb_option	typeref:enum:igb_option::__anon7	file:
type	kcompat.h	/^	char	type[I2C_NAME_SIZE];$/;"	m	struct:i2c_board_info
type_tucmd_mlhl	e1000_82575.h	/^	__le32 type_tucmd_mlhl;$/;"	m	struct:e1000_adv_tx_context_desc
u64_stats_fetch_begin	kcompat.h	3131;"	d
u64_stats_fetch_begin_bh	kcompat.h	3133;"	d
u64_stats_fetch_retry_bh	kcompat.h	3132;"	d
u64_stats_update_begin	kcompat.h	3129;"	d
u64_stats_update_end	kcompat.h	3130;"	d
udp_hdr	kcompat.h	2131;"	d
udp_packets	igb.h	/^	u64 udp_packets;       \/* UDP headers processed *\/$/;"	m	struct:igb_rx_queue_stats
unlikely	kcompat.h	218;"	d
update	e1000_hw.h	/^	s32  (*update)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
update_mc_addr_list	e1000_hw.h	/^	void (*update_mc_addr_list)(struct e1000_hw *, u8 *, u32);$/;"	m	struct:e1000_mac_operations
upper	e1000_82575.h	/^		} upper;$/;"	m	struct:e1000_adv_rx_desc::__anon22	typeref:struct:e1000_adv_rx_desc::__anon22::__anon28
upper	e1000_82575.h	/^	} upper;$/;"	m	struct:e1000_adv_data_desc	typeref:union:e1000_adv_data_desc::__anon15
upper	e1000_hw.h	/^		} upper;$/;"	m	struct:e1000_rx_desc_extended::__anon32	typeref:struct:e1000_rx_desc_extended::__anon32::__anon36
upper	e1000_hw.h	/^		} upper;$/;"	m	struct:e1000_rx_desc_packet_split::__anon38	typeref:struct:e1000_rx_desc_packet_split::__anon38::__anon43
upper	e1000_hw.h	/^	} upper;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon56
upper	e1000_hw.h	/^	} upper;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon46
upper_setup	e1000_hw.h	/^	} upper_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon50
use_adaptive_rx_coalesce	kcompat.h	/^	u32	use_adaptive_rx_coalesce;$/;"	m	struct:_kc_ethtool_coalesce
use_adaptive_tx_coalesce	kcompat.h	/^	u32	use_adaptive_tx_coalesce;$/;"	m	struct:_kc_ethtool_coalesce
usec_delay	e1000_hw.h	/^	u32 usec_delay;$/;"	m	struct:e1000_mbx_info
usec_delay	e1000_osdep.h	43;"	d
usec_delay_irq	e1000_osdep.h	44;"	d
usecs_to_jiffies	kcompat.h	1648;"	d
usleep_range	kcompat.h	3126;"	d
usleep_range	kcompat.h	3127;"	d
usr_ip4_spec	kcompat.h	/^	struct ethtool_usrip4_spec		usr_ip4_spec;$/;"	m	union:_kc_ethtool_flow_union	typeref:struct:_kc_ethtool_flow_union::ethtool_usrip4_spec
uta_reg_count	e1000_hw.h	/^	u16 uta_reg_count;$/;"	m	struct:e1000_mac_info
uta_table_copy	igb.h	/^	u32 uta_table_copy[IGB_MAX_UTA_ENTRIES];$/;"	m	struct:vf_data_storage
v2p_mailbox	e1000_hw.h	/^	u32 v2p_mailbox;$/;"	m	struct:e1000_dev_spec_vf
valid_led_default	e1000_hw.h	/^	s32  (*valid_led_default)(struct e1000_hw *, u16 *);$/;"	m	struct:e1000_nvm_operations
validate	e1000_hw.h	/^	s32  (*validate)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
validate_mdi_setting	e1000_hw.h	/^	s32  (*validate_mdi_setting)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
vector	kcompat.h	/^	u16 vector; \/* kernel uses to write allocated vector *\/$/;"	m	struct:msix_entry
vendor_id	e1000_hw.h	/^	u16 vendor_id;$/;"	m	struct:e1000_hw
version	kcompat.h	/^	char version[32];$/;"	m	struct:k_ethtool_drvinfo
version	kcompat.h	/^	u32 version; \/* driver-specific, indicates different chips\/revs *\/$/;"	m	struct:_kc_ethtool_regs
vf	e1000_hw.h	/^		struct e1000_dev_spec_vf vf;$/;"	m	union:e1000_hw::__anon58	typeref:struct:e1000_hw::__anon58::e1000_dev_spec_vf
vf_data	igb.h	/^	struct vf_data_storage *vf_data;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::vf_data_storage
vf_data_storage	igb.h	/^struct vf_data_storage {$/;"	s
vf_mac_addresses	igb.h	/^	unsigned char vf_mac_addresses[ETH_ALEN];$/;"	m	struct:vf_data_storage
vf_mc_hashes	igb.h	/^	u16 vf_mc_hashes[IGB_MAX_VF_MC_ENTRIES];$/;"	m	struct:vf_data_storage
vf_number	e1000_hw.h	/^	u32 vf_number;$/;"	m	struct:e1000_dev_spec_vf
vf_rate_link_speed	igb.h	/^	int vf_rate_link_speed;$/;"	m	struct:igb_adapter
vferr_refcount	igb.h	/^	int vferr_refcount;$/;"	m	struct:igb_adapter
vfs_allocated_count	igb.h	/^	unsigned int vfs_allocated_count;$/;"	m	struct:igb_adapter
vid	igb.h	/^	u16	vid;			\/* VLAN tag *\/$/;"	m	struct:igb_cb
virt_to_page	kcompat.h	947;"	d
vlan	e1000_82575.h	/^			__le16 vlan; \/* VLAN tag *\/$/;"	m	struct:e1000_adv_rx_desc::__anon22::__anon28
vlan	e1000_hw.h	/^			__le16 vlan;  \/* VLAN tag *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon38::__anon42
vlan	e1000_hw.h	/^			__le16 vlan; \/* VLAN tag *\/$/;"	m	struct:e1000_rx_desc_extended::__anon32::__anon36
vlan_eth_hdr	kcompat.h	/^static inline struct vlan_ethhdr *vlan_eth_hdr(const struct sk_buff *skb)$/;"	f
vlan_ethhdr	kcompat.h	/^struct vlan_ethhdr {$/;"	s
vlan_ethhdr	kcompat.h	316;"	d
vlan_etype	kcompat.h	/^	__be16	vlan_etype;$/;"	m	struct:_kc_ethtool_flow_ext
vlan_get_protocol	kcompat.h	3207;"	d
vlan_gro_receive	kcompat.h	183;"	d
vlan_group_get_device	kcompat.h	2066;"	d
vlan_group_set_device	kcompat.h	2067;"	d
vlan_hdr	kcompat.h	321;"	d
vlan_id	e1000_hw.h	/^	u16 vlan_id;$/;"	m	struct:e1000_host_mng_dhcp_cookie
vlan_macip_lens	e1000_82575.h	/^	__le32 vlan_macip_lens;$/;"	m	struct:e1000_adv_tx_context_desc
vlan_tag	e1000_82575.h	/^			u32 vlan_tag:16;$/;"	m	struct:e1000_adv_context_desc::__anon17::__anon18
vlan_tci	kcompat.h	/^	__be16	vlan_tci;$/;"	m	struct:_kc_ethtool_flow_ext
vlan_tx_tag_get	kcompat.h	323;"	d
vlan_tx_tag_present	kcompat.h	322;"	d
vlans_enabled	igb.h	/^	u16 vlans_enabled;$/;"	m	struct:vf_data_storage
vlgrp	igb.h	/^	struct vlan_group *vlgrp;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::vlan_group
vlgrp	igb.h	/^	struct vlan_group *vlgrp;$/;"	m	struct:igb_vmdq_adapter	typeref:struct:igb_vmdq_adapter::vlan_group
vmalloc_node	kcompat.h	1771;"	d
vmdq_netdev	igb.h	/^	struct net_device *vmdq_netdev;$/;"	m	struct:igb_ring	typeref:struct:igb_ring::net_device
vmdq_netdev	igb.h	/^	struct net_device *vmdq_netdev[IGB_MAX_VMDQ_QUEUES];$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::net_device
vmdq_pools	igb.h	/^	u32 vmdq_pools;$/;"	m	struct:igb_adapter
vnetdev	igb.h	/^	struct net_device *vnetdev;$/;"	m	struct:igb_vmdq_adapter	typeref:struct:igb_vmdq_adapter::net_device
vqueue_index	igb.h	/^	int vqueue_index;		\/* queue index for virtual netdev *\/$/;"	m	struct:igb_ring
vsnprintf	kcompat.h	892;"	d
vzalloc	kcompat.h	3193;"	d
vzalloc_node	kcompat.h	3184;"	d
watchdog_task	igb.h	/^	struct work_struct watchdog_task;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::work_struct
watchdog_timer	igb.h	/^	struct timer_list watchdog_timer;$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::timer_list
wb	e1000_82575.h	/^	} wb;  \/* writeback *\/$/;"	m	union:e1000_adv_rx_desc	typeref:struct:e1000_adv_rx_desc::__anon22
wb	e1000_82575.h	/^	} wb;$/;"	m	union:e1000_adv_tx_desc	typeref:struct:e1000_adv_tx_desc::__anon30
wb	e1000_hw.h	/^	} wb;  \/* writeback *\/$/;"	m	union:e1000_rx_desc_extended	typeref:struct:e1000_rx_desc_extended::__anon32
wb	e1000_hw.h	/^	} wb; \/* writeback *\/$/;"	m	union:e1000_rx_desc_packet_split	typeref:struct:e1000_rx_desc_packet_split::__anon38
weight	kcompat.h	/^	int weight;$/;"	m	struct:napi_struct
width	e1000_hw.h	/^	enum e1000_bus_width width;$/;"	m	struct:e1000_bus_info	typeref:enum:e1000_bus_info::e1000_bus_width
wol	igb.h	/^	u32 wol;$/;"	m	struct:igb_adapter
wolopts	kcompat.h	/^	u32 wolopts;$/;"	m	struct:ethtool_wolinfo
word_size	e1000_hw.h	/^	u16 word_size;$/;"	m	struct:e1000_nvm_info
work_limit	igb.h	/^	u16 work_limit;			\/* total work allowed per interrupt *\/$/;"	m	struct:igb_ring_container
work_struct	kcompat.h	1267;"	d
write	e1000_hw.h	/^	s32  (*write)(struct e1000_hw *, u16, u16, u16 *);$/;"	m	struct:e1000_nvm_operations
write	e1000_hw.h	/^	s32 (*write)(struct e1000_hw *, u32 *, u16, u16);$/;"	m	struct:e1000_mbx_operations
write	igb_regtest.h	/^	u32 write;$/;"	m	struct:igb_reg_test
write_i2c_byte	e1000_hw.h	/^	s32 (*write_i2c_byte)(struct e1000_hw *, u8, u8, u8);$/;"	m	struct:e1000_phy_operations
write_posted	e1000_hw.h	/^	s32 (*write_posted)(struct e1000_hw *, u32 *, u16, u16);$/;"	m	struct:e1000_mbx_operations
write_reg	e1000_hw.h	/^	s32  (*write_reg)(struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_reg_locked	e1000_hw.h	/^	s32  (*write_reg_locked)(struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_reg_page	e1000_hw.h	/^	s32  (*write_reg_page)(struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_vfta	e1000_hw.h	/^	void (*write_vfta)(struct e1000_hw *, u32, u32);$/;"	m	struct:e1000_mac_operations
wvbr	igb.h	/^	u32 wvbr;$/;"	m	struct:igb_adapter
xoffrxc	e1000_hw.h	/^	u64 xoffrxc;$/;"	m	struct:e1000_hw_stats
xofftxc	e1000_hw.h	/^	u64 xofftxc;$/;"	m	struct:e1000_hw_stats
xonrxc	e1000_hw.h	/^	u64 xonrxc;$/;"	m	struct:e1000_hw_stats
xontxc	e1000_hw.h	/^	u64 xontxc;$/;"	m	struct:e1000_hw_stats
